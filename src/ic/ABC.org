* ABC
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/abaqus.tcl]]
proc  abaqus_get_families {} {
proc abaqus_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/acri.tcl]]
proc acri_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/actran.tcl]]
proc actran_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/acusolve.tcl]]
proc acusolve_write_input {} {
proc acusolve_run_solver {} {
proc acusolve_solution_start {} {
proc acusolve_control_menu {pid problem_dir bindir lrun lfile} {
proc acusolve_kill {pid} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/acusolve_format.tcl]]
proc acusolve_setup_input {backend backend_format file} {
proc acu_prb_list {} {
proc acu_run_list {} {
proc acu_set_prb_list {} {
proc acu_set_run_list {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/acusolve_monitor.tcl]]
proc blt_table args {
proc blt_graph args {
proc solver_format_column collist {
proc solver_format_row rowlist {
proc acusolve_replot_task {} {
proc acusolve_get_data {fullline} {
proc handle_acusolve {wstdout line} {
proc solver_set_conv_crit value {
proc sort_acusolve_data {arg0 arg1} {
proc acusolve_replot {run} {
proc tail_dashf {fp cmd} {
proc tail_dashf_proc {fp cmd} {
proc tail_dashf_cancel {fp} {
proc acusolve_init_formdata {} {
proc acusolve_init_data {} {
proc acusolve_do_stats {} {
proc acusolve_init_monitor {} {
proc clear_stats_array {var run {prefix ""} {suffix ""}} {
proc acusolve_waitfor_file {file {nwait 10} {waittime 1000}} {
proc acusolve_monitor {wstout run file} {
proc acusolve_monitor_stop {} {
proc acusolve_monitor_exit {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/acusolve_tail.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/adhns.tcl]]
proc adhns_write_input {} {
proc adhns_edit_operation {} {
proc adhns_edit_iteration {} {
proc adhns_edit_material {} {
proc adhns_edit_time {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/adina.tcl]]
proc adina_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/airflo3d.tcl]]
proc airflo3d_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/alpha_flow.tcl]]
proc alpha_flow_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/ansys.tcl]]
proc ansys_write_input {} {
proc ansys_make_bcicon {fam params} {
proc ansys_get_local_dir {lcsarr dir} {
proc ansys_run_solver {} {
proc check_ansys_lic_products {product_table lic_var} {
proc ansys_save_solve_data {file param_arrays} {
proc ansys_save_solve_array {fp arr {last0 ""} {list0 ""}} {
proc get_new_last_list {keys llast} {
proc is_solve_level_end {key last} {
proc ansys_begin_level {fp arr last outlist} {
proc ansys_end_level {fp arr last} {
proc get_next_level_key {key} {
proc get_solve_node_name {key} {
proc count_solve_level {str} {
proc ansys_load_solve_data {file} {
proc ansys_famboco_load {file} {
proc ansys_famboco_load_from_list {list} {
proc ansys_famboco_save {file {fams ""}} {
proc ansys_famboco_save_to_list {{fams ""}} {
proc ansys_convert {discard_list} {
proc ortho_question {p d1 d2 d3} {
proc ortho_warning {p x y z} {
proc ansys_set_new_MP_data { an an_name } {
proc icemsim {} {
	proc parray {a {pattern *}} {
	proc domain_select {a b c d} {
	proc get_boco_topo {} {}
	proc mess { msg {color ""}} {
	proc directory { } { return . }
	proc cmd_cp {src tar} { exec cp $src $tar }
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/attila.tcl]]
proc attila_run_solver {args} {
proc attila_before_material_library {args} {
proc attila_set_material_library_path {} {
proc attila_load_material_library {} {
proc attila_is_file_material_library {file} {
proc attila_save_material_library {material} {
proc attila_remove_material_library {material} {
proc attila_create_material_from_library {} {
proc attila_edit_material_library {} {
proc attila_edit_one_material {material cnum} {
proc attila_edit_one_material_done {material cnum} {
proc attila_edit_one_material_cancel {material cnum} {
proc attila_add_one_material {} {
proc attila_add_one_material_done {} { 
proc attila_add_one_material_cancel {} { 
proc attila_add_one_material_composition {win win2} {
proc attila_remove_one_material {material cnum} {
proc attila_do_material_exists {material} {
proc attila_use_name_for_node {what} {
proc attila_before_input {args} {
proc attila_before_edit_output {args} {
proc attila_after_edit_output {args} {    
proc attila_after_energy_group {args} {
proc attila_collapse_strategy {a b c} {
proc attila_get_families_boundary {} {
proc attila_get_families_volume {} {
proc attila_get_edit_sets {} {
proc attila_get_edit_sets_id {} {
proc attila_edit_set_valid {edit_set} {
proc attila_get_edit_xs {} {
proc attila_data_block {data} {
proc attila_set_source_file_values {data nspec ndata_per_spec} {
proc attila_save_source_file_as {data} {
proc attila_create_vector {vector} {
proc attila_set_vector_values {node vector number ngroups} {
proc attila_values_block {data} {
proc attila_before_information {args} {
proc attila_after_information {args} {
proc attila_before_edit_sets {args} {
proc attila_after_edit_sets {args} {
proc attila_reset_families {} {
proc attila_get_mat_num_name {num} {
proc attila_get_iso_num_name {num} {
proc attila_before_edit_region_definition {args} {
proc attila_before_edit_side_definition {args} {
proc attila_edit_composition {args} {
proc attila_edit_composition_atom {args} {
proc attila_edit_composition_density {args} {
proc attila_before_edit_isotope_definition {args} {
proc attila_after_edit_xsection {args} {
proc attila_before_edit_material {args} {
proc attila_create_composition_nodes {} { 
proc attila_get_composition_fraction_type {node} {
proc attila_after_edit_material {args} {
proc attila_get_volume_file {node node_name var file} {
proc attila_get_boundary_file {node node_name var file} {
proc attila_get_edit_file {node node_name var file} {
proc attila_get_cross_file {node node_name var file} {
proc attila_get_flux_file {node node_name var file} {
proc attila_get_mesh_file {node node_name var file} {
proc attila_get_file_path {file} {
proc attila_get_aux_file {node node_name var file} {
proc attila_param_get_value {node name} {
proc attila_param_get_all_values {node} {
proc attila_param_list_leaves {node} {
proc attila_param_list_children {node} {
proc attila_show_question { what mess } {
proc attila_create_list {type} {
proc attila_set_list_sort {} {
proc attila_select_listbox_multiple {w pos} {
proc attila_get_list_choice {what} {
proc attila_string_too_long {what name len} {
proc attila_get_cur_node {} {
proc attila_open_children_nodes {} {
proc attila_get_output_params {} {
proc attila_write_output_fromtree {} {
proc attila_write_output {} {
proc attila_write_required_entry {title var} {
proc attila_write_spaces {node var max} {
proc attila_write_spaces_literal {name max} {
proc attila_write_true_or_false {node var} {
proc attila_write_source_file {data fp} {
proc attila_write_output_file {fp} {
proc attila_write_infrared_block {problem_type ngroups fp} {
proc attila_write_units_block {fp} {
proc attila_write_edit_file {} {
proc attila_energy_init {width height} {    
proc attila_energy_setlength {{attila_length 1.0}} {
proc attila_energy_orderpoints {point1 point2} {
proc attila_energy_form {} {
proc attila_energy_create_collapse_vector {} {
proc attila_energy_get_scrollbar { win } {
proc attila_energy_show_group { x y show } {
proc attila_energy_pointcreate {x y {idx ""} {line ""} {id ""} {name ""}} {
proc attila_energy_pointdelete {x y} {
proc attila_energy_label {{collapse ""}} {
proc attila_energy_collapse {collapse} {
proc attila_energy_reset {} {
proc attila_energy_coordtoscreen {points} {
proc attila_energy_screentocoord {points} {
proc attila_energy_min {x1 x2} {
proc attila_energy_max {x1 x2} {
proc attila_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/autocfd.tcl]]
proc autocfd_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/bagger.tcl]]
proc bagger_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/cedre.tcl]]
proc cedre_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/cfdpp.tcl]]
proc cfdpp_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/cfd_ace.tcl]]
proc cfd_ace_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/cfl3d.tcl]]
proc cfl3d_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/cfx4.tcl]]
proc cfx4_write_input {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/cfx5.tcl]]
proc cfx5_write_input {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/cgns.tcl]]
proc cgns_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/chad.tcl]]
proc chad_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/cmg_stars.tcl]]
proc cmg_stars_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/cmold.tcl]]
proc cmold_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/cobalt.tcl]]
proc cobalt_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/coliseum.tcl]]
proc coliseum_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/comco.tcl]]
proc comco_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/commonstruct.tcl]]
proc commonstruct_convert_nastran_CONS_DISP_lab {cval} {
proc nastran_convert_commonstruct_CONS_DISP_lab {cval} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/concert3d.tcl]]
proc concert3d_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/crsol.tcl]]
proc crsol_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/crunch.tcl]]
proc crunch_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/csp.tcl]]
proc csp_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/datex.tcl]]
proc datex_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/df2mouse.tcl]]
proc df2mouse_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/diana.tcl]]
proc diana_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/dtf.tcl]]
proc dtf_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/em.tcl]]
proc em_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/exodus.tcl]]
proc exodus_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/fansc.tcl]]
proc fansc_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/fast3d.tcl]]
proc fast3d_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/fastu.tcl]]
proc fastu_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/feast.tcl]]
proc feast_write_input {} {
proc feast_make_bcicon {fam params} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/fenfloss.tcl]]
proc fenfloss_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/fensap.tcl]]
proc fensap_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/fidap.tcl]]
proc fidap_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/fieldview.tcl]]
proc fieldview_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/fire.tcl]]
proc fire_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/firev8.tcl]]
proc firev8_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/flex.tcl]]
proc flex_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/flowCart.tcl]]
proc flowCart_reorder_multigrid {} {
proc flowCart_write_input {} {
proc flowCart_run_solver {} {
proc solution_start {} {
proc flowCart_clic {} {
proc flowCart_update_family_info {result_file} {
proc flowCart_clic_apply {{run_clic 1}} {
proc write_clic_cntl_file {clic_file} {
proc clic_family_params { } {
proc clic_family_params_apply {} {
proc clic_surface_params { } {
proc clic_surface_params_apply {} {
proc clic_all_params {} {
proc clic_all_params_apply {} {
proc clic_get_refparams {} {
proc clic_cp_distribution { } {
proc clic_cp_clear {} {
proc clic_cp_use_cuts {} {
proc set_clic_cpdists {p} {
proc clic_cp_distribution_apply {} {
proc flowCart_sixdof {} {
proc sixdof_update_file_info {tri_file} {
proc select_sixdof_moving_comps {} {
proc set_sixdof_efm { } {
proc sixdof_efm_apply {} {
proc flowCart_sixdof_apply {} {
proc write_sixdof_cntlfile {file} {
proc write_sixdof_logfile {file} {
proc write_sixdof_efmfile {file} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/flowlogic.tcl]]
proc flowlogic_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/fluent.tcl]]
proc fluent_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/fluent6.tcl]]
proc fluent6_write_input {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/fluentAnsys.tcl]]
proc fluentAnsys_write_input {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/gasp.tcl]]
proc gasp_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/gls3d.tcl]]
proc gls3d_write_input {} {
proc gls3d_edit_operation {} {
proc gls3d_edit_iteration {} {
proc gls3d_edit_material {} {
proc gls3d_edit_time {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/gmtec.tcl]]
proc gmtec_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/gsmacDF.tcl]]
proc gsmacDF_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/gust.tcl]]
proc gust_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/g_rampant.tcl]]
proc g_rampant_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/hawk.tcl]]
proc hawk_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/hdf.tcl]]
proc hdf_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/hp.tcl]]
proc hp_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/ibmbem.tcl]]
proc ibmbem_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/icat.tcl]]
proc icat_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/icu.tcl]]
proc icu_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/ideas.tcl]]
proc ideas_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/impns.tcl]]
proc impns_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/inca.tcl]]
proc inca_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/iples.tcl]]
proc iples_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/kiva3.tcl]]
proc kiva3_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/kiva4.tcl]]
proc kiva4_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/laura.tcl]]
proc laura_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/ll_dyna3d.tcl]]
proc ll_dyna3d_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/ls_dyna3d.tcl]]
proc ls_dyna3d_write_input {} {
proc lsdyna_set_beam_section_formulation {node node_name var val} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/macs.tcl]]
proc macs_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/magrec.tcl]]
proc magrec_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/maze.tcl]]
proc maze_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/multiblock.tcl]]
proc multiblock_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/n3snatur.tcl]]
proc n3snatur_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/nastran.tcl]]
proc nastran_write_input {} {
proc nastran_make_bcicon {fam params} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/ncc.tcl]]
proc ncc_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/nekton.tcl]]
proc nekton_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/nopo.tcl]]
proc nopo_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/nparc.tcl]]
proc nparc_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/ns3d.tcl]]
proc ns3d_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/nsu3d.tcl]]
proc nsu3d_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/numeca.tcl]]
proc numeca_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/pab3d.tcl]]
proc pab3d_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/parc.tcl]]
proc parc_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/phoenics.tcl]]
proc phoenics_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/plot3d.tcl]]
proc plot3d_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/pmarc.tcl]]
proc pmarc_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/poly3d.tcl]]
proc poly3d_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/polyflow.tcl]]
proc polyflow_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/popinda.tcl]]
proc popinda_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/precise.tcl]]
proc precise_write_input {} {
proc precise_default_temperature {fam bctype argtitle} {
proc precise_default_density {fam bctype argtitle} {
proc precise_default_massflow {fam bctype argtitle} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/precise_imperial.tcl]]
proc precise_imperial_write_input {} {
proc precise_default_temperature {fam bctype argtitle} {
proc precise_default_density {fam bctype argtitle} {
proc precise_default_massflow {fam bctype argtitle} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/radioss.tcl]]
proc radioss_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/rampant.tcl]]
proc rampant_write_input {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/raven.tcl]]
proc raven_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/rtt.tcl]]
proc rtt_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/sandia.tcl]]
proc sandia_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/sauna.tcl]]
proc sauna_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/scryu.tcl]]
proc scryu_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/sctetra.tcl]]
proc sctetra_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/solver_table.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/specelem.tcl]]
proc specelem_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/spectrum.tcl]]
proc spectrum_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/splitflow.tcl]]
proc splitflow_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/star4.tcl]]
proc star4_write_input {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/starccm.tcl]]
proc starccm_write_input {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/starcd.tcl]]
proc starcd_write_input {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/starcd32.tcl]]
proc starcd32_write_input {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/stars.tcl]]
proc stars_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/stl.tcl]]
proc stl_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/tascflow.tcl]]
proc tascflow_write_input {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/tau.tcl]]
proc tau_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/tdf.tcl]]
proc tdf_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/team.tcl]]
proc team_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/test_solver.tcl]]
proc test_solver_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/tgrid.tcl]]
proc tgrid_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/tno.tcl]]
proc tno_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/tns3dmb.tcl]]
proc tns3dmb_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/tranair.tcl]]
proc tranair_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/trio_u.tcl]]
proc trio_u_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/tsar.tcl]]
proc tsar_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/t_rampant.tcl]]
proc t_rampant_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/ugrid.tcl]]
proc ugrid_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/uh3d.tcl]]
proc uh3d_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/usa.tcl]]
proc usa_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/usm3d.tcl]]
proc usm3d_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/usmkv3v.tcl]]
proc usmkv3v_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/vectis.tcl]]
proc vectis_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/vrml.tcl]]
proc vrml_write_input {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/vsaero.tcl]]
proc vsaero_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/vulcan.tcl]]
proc vulcan_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/wind.tcl]]
proc wind_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/wm.tcl]]
proc wm_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/wpatran.tcl]]
proc wpatran_write_input {} {
proc wpatran_make_bcicon {fam params} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/y237.tcl]]
proc y237_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./icemcfd/output-interfaces/zen.tcl]]
proc zen_write_input {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/common/message.tcl]]
proc mess { Line {Color ""} {Font ""} {Update 1} {ShowTail 1}} {
proc phase_enable {arg1 {arg2 0}} {} 
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/hexa/hexa_graphics.tcl]]
proc CreateGraphics {} {
proc ShowHexaGraphics {x y width height} {
proc UpdateHexaGraphics {x y width height} {
proc HideHexaGraphics {} {
proc Quit {} {
proc Exit {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/hexa/init.tcl]]
proc HexaMain {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/icem_application_glue/graphics_management.tcl]]
proc ::AIEnv::ShowHexa {} {
proc ::AIEnv::ShowMed {} {
proc ::AIEnv::HideMed {} {
proc ::AIEnv::HideHexa {} {
proc ::AIEnv::CreateHexaGraphics {} {
proc ::AIEnv::CreateMedGraphics___NOT_USED {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/init.tcl]]
proc ceil {v} {
proc floor {v} {
proc AIEnvMain {} {
	    proc prof_worst {{what exclusiveRuntime} {funcs ""} {reset 1}} {
proc eval_when_initialized {cmd} {
proc set_initialized {} {
proc SetupHelp {} {
proc help_window_override {x y} { help_book }
proc InitializeLicense {} {
proc CheckEnvVar { EnvVar } {
proc DeterminePlatform {} {
proc InitializeMed {} {
    proc geom_get_objects {type how {only_if_dormant 0}} {
proc InitializeVisual3p {} {
proc SetupMedBatchInterp {} {
proc InitializeMedFonts {} {
proc SetupMedSourceFileDirectories {} {
proc SetupAIEnvSourceFileDirectories {} {
proc UseDevelopmentPaths {} {
proc SourceMedGUIFiles {} {
	    process batch_glue questionbox help toplevel workspace
proc SourceAIEnvFiles {} {
proc InitializeAIEnvGUI {} {
proc InitializeBWidgets {} {
proc SourceUserScripts {} {
proc ss {} {
proc FindUserScripts {Dir} {
proc InitError {Reason} {
proc InitWarning {Reason} {
proc InitLicenseReset {} {
proc SetupVisual3 {} {
proc DoSplash {} {
proc KillSplash {} {
proc KillEmbedSplash {imfm} {
proc HideBuildProgress {} {
proc ShowBuildProgress {} {
proc ResetAIEnvGUI {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/med/globals.tcl]]
proc InitializeMedGlobals {} {
proc  InitializeMedGraphics {} {
    proc gui_$cmd args "\
proc InitGeomDisplaySettings {} {
proc InitUnsMeshDisplaySettings {} {
proc InitBlockDisplaySettings {{reset 0}} {
proc InitStrMeshDisplaySettings {} {
proc SetupBatchGlue {} {
	proc gui_$cmd args "\
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/resource/other/hextris.tcl]]
    proc bell args {}
    proc Usage {} {}
    proc Usage {} {
    proc About {} {
proc ParseArgs {} {
proc Init {{base {}}} {
proc Smoothy {} {
proc SocketInit {} {
proc SocketAccept {sock ipaddr port} {
proc SocketRead {sock} {
proc SocketConnect {host port} {
proc SocketShutdown sock {
proc NewPlayer {sock host ip port} {
proc TellPlayers {args} {
proc UpdatePlayers {args} {
proc MultiPlayer {} {
proc GetInterval {n} {
proc ToggleState {} {
proc AutoPause {} {
proc b {} {
proc Pause {} {
proc Resume {} {
proc GameOver {} {
proc Reset {} {
proc Options {} {
proc SetKey {key var} {
proc Keys {} {
proc Stats {} {
proc MakePiece {w id} {
proc ShowNext {{next -1}} {
proc CreatePiece {} {
proc Cheat {w} {
proc Fall {{a {}}} {
proc Shadow {} {
proc CementPiece {} {
proc Slide {} {
proc Drop {} {
proc Move {dir} {
proc Rotate dir {
proc DropRows {} {
proc AddRows {num} {
proc random {{range 2}} {
proc modmin {list {mod 10}} {
proc modmax {list {mod 10}} {
proc InitPieces {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/resource/other/tetris.tcl]]
    proc bell args {}
    proc Usage {} {}
    proc Usage {} {
    proc About {} {
proc ParseArgs {} {
proc Init {{base {}}} {
proc SocketInit {} {
proc SocketAccept {sock ipaddr port} {
proc SocketRead {sock} {
proc SocketConnect {host port} {
proc SocketShutdown sock {
proc NewPlayer {sock host ip port} {
proc TellPlayers {args} {
proc UpdatePlayers {args} {
proc MultiPlayer {} {
proc SetIntervalLevel {n} {
proc ToggleState {} {
proc AutoPause {} {
proc Pause {} {
proc Resume {} {
proc GameOver {} {
proc Reset {} {
proc Options {} {
proc SetKey {key var} {
proc Keys {} {
proc GameTypes {} {
proc SetGame {level showNext shadow growing growLevel growMax addRows} {
proc Stats {} {
proc InitPieces size {
proc ShowNext {} {
proc CreatePiece {} {
proc Cheat {w} {
proc Fall {{a {}}} {
proc Shadow {} {
proc GrowRows {{now 0}} {
proc CementPiece {} {
proc Slide {} {
proc Drop {} {
proc Left {} {
proc Right {} {
proc Rotate dir {
proc DropRows {} {
proc AddRows {num} {
proc random {{range 2}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aienv_protoGlobals.tcl]]
proc DummyProc {} {
proc shwd { theDEZ } {
proc msg { type theString } {
proc notDone { } {
proc trySavingBatchMeshingData {} {
proc exitProgram {{from_exit 0}} {
proc setGlobalVals {} {
proc setGreyDEZs {} {
proc createPointsRGProc {  } {
proc movePointsRGProc {  } {
proc moveCurveRGProc {  } {
proc moveSurfRGProc {  } {
proc moveBodyRGProc {  } {
proc moveNodesRGProc {  } {
proc moveElemsRGProc {  } {
proc mszCurveRGProc {  } {
proc createNodesRGProc {  } {
proc doMszCurve {} {
proc TestLoadTetinFile {file} {
proc LoadTetinFile {} {
proc LoadDomainFile {} {
proc TestLoadDomainFile {DomainFile} {
proc TestUnloadGeo {} {
proc TestUnloadMesh {} {
proc TetMesh {} {
proc get_fam_visible {fam} {
proc get_uns_type_visible {type} {
proc update_fam_window {args} {
proc update_family_type {map fvar tvar what force} {
proc update_geom_window {args} {
proc update_uns_visible {} {
proc update_uns_available {args} {
proc update_uns_visible_subset {args} {
proc initialize_unstruct_visibility {args} {
proc uninitialize_unstruct_visibility {args} {
proc initialize_struct_visibility {args} {
proc uninitialize_struct_visibility {args} {
proc disp_pack_list {args} {
proc gui_change_visibility {type what on} {
proc add_new_family {f v} {
proc disp_new_stuff {args} {
proc display_update {args} {
proc undo_redo_update {args} {
proc fam_delete_unused_on_unload {args} {
proc get_famnames {args} {
proc struct_comptopo_callback {args} {
proc disp_update_number_list {args} {
proc orient_command {args} {
proc finish_new_elems {} {
proc display_quad_results {} {
proc clear_fam_visible_prev {args} {
    proc run_application_before {} {
    proc run_application_after {ww} {
    proc aie_load_lcs {args} {
    proc aie_set_lcs_current {args} {
proc ::tk_messageBox {args} {
proc ::tk::MessageBox {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_anno.tcl]]
proc aie_modify_anno_pick {type args} {
proc aie_anno_cmd {what args} {
proc update_anno_misc_cmd {what args} {
proc onannoModifyLoad {} {
proc onannoMoveLoad {} {
proc onannoDeleteLoad {} {
proc onannoClearLoad {} {
proc onannoModifyVframeDEZLoad {} {
proc onannoModifyVframeDEZApply {} {
proc onannoModifyTextDEZLoad {} {
proc onannoModifyTextDEZApply {} {
proc onannoModifyUtftextDEZLoad {} {
proc onannoModifyUtftextDEZApply {} {
proc onannoModifyPixmapDEZLoad {} {
proc onannoModifyPixmapDEZApply {} {
proc onannoModifyCmapDEZLoad {} {
proc onannoModifyCmapDEZApply {} {
proc onannoModifyCircleDEZLoad {} {
proc onannoModifyCircleDEZApply {} {
proc onannoModifyBoxDEZLoad {} {
proc onannoModifyBoxDEZApply {} {
proc onannoModifyLineDEZLoad {} {
proc onannoModifyLineDEZApply {} {
proc onannoModifyPolygonDEZLoad {} {
proc onannoModifyPolygonDEZApply {} {
proc onannoModifyMarkDEZLoad {} {
proc onannoModifyMarkDEZApply {} {
proc onannoCreateDEZLoad {} {
proc onannotationDEZLoad {} {
proc onannotationDEZApply {} {
proc onannotationDEZCancel {} {
proc onAnnoCreateTypeModify {args} {
proc aie_annos_iconbar {what args} {
proc aie_toggle_vpcolormap {theTree theNode} {
proc aie_editnode_vpcolormap {theTree theNode id} {
proc aie_vpcolormap_menu {mm theTree theNode id} {
proc aie_vpcolormap_cmd {what node id args} {
proc onvpColorMapDEZLoad {} {
proc onvpColorMapDEZApply {} {
proc aie_modify_vpcmap {what args} {
proc onVpColorMapPreSetModify {args} {
proc onVpCMapMEnValModify {args} {
proc onvpCMapMEnValWroteEntry {oldID newVal} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_bccomp.tcl]]
proc bcc_do_solver {name} {
proc bcc_do_solver_main {name infile basedir solvers} {
proc bcc_do_solver_subname {name infile subname subtitle basedir} {
proc bcc_write_ttk {bcinfo name menufile tabfile dezfile tclfile icondir iconprefix subname} {
proc bcc_nice_name {name uniq} {
proc bcc_make_text_icon {gif text} {
proc old__bcc_make_text_icon {gif text} {
proc bcc_write_dez {dezf tclf dezname bc has_set has_lcs \
proc bcc_write_solver_setup {dezf tclf name ssname sstitle dezname} {
proc bcc_write_solver_input {dezf tclf name ssname sstitle dezname} {
proc bcc_write_solver_run {dezf tclf name ssname sstitle dezname} {
proc bcc_write_load_function {tclf dezname bc default_vals choice_lists \
proc bcc_write_apply_function {tclf dezname bc d default_vals \
proc bcc_write_load_function_active_data {tclf dezname default_vals
proc bcc_write_edit_func {tclf dezname bc has_name short_title default_vals} {
proc bcc_write_parse_func {tclf bc all_args} {
proc bcc_write_icons_func {tclf bc setname symtype symparams symlabel} {
proc bcc_write_get_set_func {tclf bc has_set} {
proc bcc_write_param_dez {dezf tclf dezname pn make_args default_vals \
proc bcc_write_param_load_function {tclf dezname pn make_args \
proc bcc_write_param_apply_function {tclf dezname pn make_args default_vals multnn} {
proc bcc_get_aval {a n} {
proc bcc_write_arg {dezf dezname arg subname} {
proc bcc_write_load_arg {tclf dezname arg} {
proc bcc_write_choice_list_load {tclf chn chl} {
proc bcc_write_apply_arg {tclf dezname arg} {
proc unised__bcc_write_subname_set {solvers dezf tclf} {
proc bcc_write_translators {bcinfo transfile name subname} {
proc tt {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_bccrt.tcl]]
proc bcc_on_apply_to_part {bctype parts values} {
proc bcc_on_apply_to_group {bctype bcname desttype dest values} {
proc bcc_edit_attribute {name dezname bc short_title default_vals} {
proc bcc_update_internal_val {items name1 name2 op} {
proc bcc_trace_update_widget {widgetname ns act args} {
proc bcc_do_multiple_param_node {pn pncat dezname nodename nodename_style defvals} {
proc bcc_add_param_node_to_tree {name parent cat dezname pnname} {
proc bcc_edit_param_node {type name dezname} {
proc bcc_delete_mult_param {type name} {
proc bcc_rename_mult_param {type name {nname ""}} {
proc bcc_edit_table {__dezname __name __title} {
proc bcc_edit_table_1 {dezname name title} {
proc bcc_can_convert_bcs {fromtype totype} {
proc bcc_convert_bcs {fromtype totype fbc_file atr_file} {
proc bcc_convert_params {fromtype totype file} {
proc bcc_convert_bc_pred {a bc fromtype totype bctype} {
proc bcc_convert_bc_prim {a bc fromtype totype bctype} {
proc onSetSolverDEZLoad {} {
proc onSetSolverDEZOK {} {
proc bcc_mesh_import {solver} {
proc bcc_mesh_export {solver} {
proc bcc_do_write_solver_input {name ssname sstitle filename} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_cart.tcl]]
proc onmeshCartBFLoad {} {
proc aie_update_cart_preview {} {
proc onGlobalRefDDModify {dez val} {
proc onmeshCartInit {} {
proc onmeshCartLoad {} {
proc onmeshCartAfterLoad {} {
proc onmeshCartGlobalLoad {} {
proc onmeshCartGlobalUnLoad {} {
proc onmeshCartUnLoad {} {
proc onmeshCartBBoxFinish {} {    
proc aie_compute_cartesian_mesh {} {
proc onGlobalInit2DDModify {dez val} {
proc onGlobalInitDDModify {dez val} {
proc onGlobalEdit2DDModify {dez val} {
proc onGlobalEditDDModify {dez val} {
proc aie_cart_reftype {reftype_name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_common.tcl]]
proc aie_reorient_mesh {} {
proc aie_move_nodes {} {
proc aie_transform_mesh {} {
proc aie_split_mesh {} {
proc aie_smooth_mesh {} {
proc aie_quality_of_mesh {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_contact.tcl]]
proc aie_do_mesh_contacts {how onegroup dist paramname paramvals contlist targlist \
proc aie_create_mesh_contact {} {
proc aie_edit_contact {name} {
proc onContactMeshDEZLoad {} {
proc onContactMeshDEZApply {} {
proc aie_switch_contact {name} {
proc aie_delete_contact {name} {
proc aie_rename_contact {name} {
proc aie_show_contact {name on} {
proc aie_init_contact {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_contexHelp.tcl]]
proc ContextDEZHelp {helpset} { 
proc va_book {} {
proc help_book_old {} {
proc help_book {} {
proc tutorial_book {} {
proc usermanual_book {} {
proc installationmanual_book {} {
proc programmer_book {} {
proc install_book {} {
proc BSMmanual_book {} {
proc legalnotice_book {} {
proc output_interfaces_book {} {
proc ongeoImportCatiaDEZHelp {} { 
proc ongeoImportGemsDEZHelp {} { 
proc ongeoImportIDIDEZHelp {} { 
proc ongeoImportProeDEZHelp {} { 
proc ongeoImportParasolidDEZHelp {} { 
proc ongeoImport3DMDEZHelp {} { 
proc ongeoImportStepDEZHelp {} { 
proc ongeoImportUGDEZHelp {} { 
proc ongeoImportWBDEZHelp {} { 
proc ongeoImportINPUTDEZHelp {} { 
proc ongeoExportIgesDEZHelp {} { 
proc ongeoExport3DMDEZHelp {} { 
proc onimportNastranDEZHelp {} { 
proc onimportLsdynaDEZHelp {} { 
proc onmeshExportLSDynaDEZHelp {} { 
proc onmeshExportANSYSDEZHelp {} { 
proc onwriteFeModelerDEZHelp {} { 
proc onexportSpectralElementsDEZHelp {} { 
proc onhardcopyDEZHelp {} { 
proc onreplicateDEZHelp {} { 
proc oncutPlaneDEZHelp {} { 
proc onmeshReportDEZHelp {} { 
proc oncreateVidDEZHelp {} {
proc onsetGeneralDEZHelp {} {
proc onsetProductDEZHelp {} {
proc onsetSolverDEZHelp {} {
proc onsetSolverSettingsDEZHelp {} {
proc onsetDisplayDEZHelp {} {
proc onsetLightingDEZHelp {} {
proc onsetBackgroundStyleDEZHelp {} {
proc onsetMouseBindingDEZHelp {} {
proc onsetSelectDEZHelp {} {
proc onsetMemoryDEZHelp {} {
proc onsetRemoteDEZHelp {} {
proc onsetSpeedDEZHelp {} {
proc onsetModelOptionsDEZHelp {} {
proc onunitsGeometryDEZHelp {} {
proc onrename_geometryDEZHelp {} {
proc onsetGOptionsDEZHelp {} {
proc onsetImportModelOptionsDEZHelp {} {
proc onhexMeshOptsDEZHelp {} {
proc onsetQualityInfoDEZHelp {} {
proc onsetWorkbenchInputDEZHelp {} {
proc onsetWorkbenchOutputDEZHelp {} {
proc oncreateLCSDEZHelp {} { 
proc onCreatePointsDEZHelp {} { 
proc onCreateCurvesDEZHelp {} {
proc onCreateSurfsDEZHelp {} {
proc onCreateBodyDEZHelp {} {
proc oncreateFacetedDEZHelp {} {
proc onrepairGeomDEZHelp {} {
proc ontransformSurfsToolsDEZHelp {} {
proc onrestoreEntityDEZHelp {} {
proc onDeletePointsDEZHelp {} {
proc onDeleteCurveDEZHelp {} {
proc onDeleteSurfDEZHelp {} {
proc ondeleteBodyDEZHelp {} {
proc ondeleteEntityDEZHelp {} {
proc oncreateBlockDEZHelp {} {
proc onsplitBlkDEZHelp {} {
proc onmergeBVertexDEZHelp {} {
proc oneditBlockMenuDEZHelp {} {
proc oneditProjDEZHelp {} {
proc onmoveBVertexDEZHelp {} {
proc ontransformBlocksToolsDEZHelp {} {
proc oneditEdgeMenuDEZHelp {} {
proc onmParamsDEZHelp {} {
proc onhexQualityDEZHelp {} {
proc onhexSmoothDEZHelp {} {
proc oncheckBlockDEZHelp {} {
proc ondeleteBlockDEZHelp {} {
proc onpipesFromFileDEZHelp {} {
proc onfindWorstElemsDEZHelp {} {
proc onmszCurveDEZHelp {} { 
proc onmszSurfDEZHelp {} { 
proc onmszGlobalDEZHelp {} { 
proc oncreateDensityDEZHelp {} { 
proc onmodifyDensityDEZHelp {} { 
proc ondeleteDensityDEZHelp {} { 
proc onshellDiagnosticsDEZHelp {} { 
proc ondefineConnectorsDEZHelp {} { 
proc onmeshLineDEZHelp {} { 
proc onmeshAutoDEZHelp {} { 
proc onextrudeMeshDEZHelp {} { 
proc onmeshCart3dDEZHelp {} { 
proc onsolRunDEZHelp {} { 
proc onsolPostDEZHelp {} { 
proc onsolTrialsDEZHelp {} { 
proc onsol6DOFDEZHelp {} { 
proc oncreateElemsDEZHelp {} { 
proc onextrudeMeshDEZHelp {} { 
proc oncreateMidSideDEZHelp {} { 
proc oncheckMeshDEZHelp {} { 
proc onqualityMetricsDEZHelp {} { 
proc onsmoothDEZHelp {} { 
proc onsmoothSOEDEZHelp {} { 
proc onrepairMeshDEZHelp {} { 
proc onmergeNodesDEZHelp {} { 
proc onsplitMeshDEZHelp {} { 
proc onmoveNodesDEZHelp {} { 
proc onoffsetMeshDEZHelp {} { 
proc ontransformElemsToolsDEZHelp {} { 
proc onconvertMeshTypeDEZHelp {} { 
proc onadjustMeshDEZHelp {} { 
proc onrenumberMeshDEZHelp {} { 
proc onthicknessMeshDEZHelp {} { 
proc onreorientMeshDEZHelp {} { 
proc ondeleteMidNodesDEZHelp {} { 
proc ondeleteNodesDEZHelp {} { 
proc ondeleteElemsDEZHelp {} { 
proc oncreateMatDEZHelp {} { 
proc oncreateTblDEZHelp {} { 
proc oncreate0DElePropDEZHelp {} { 
proc oncreate1DElePropDEZHelp {} { 
proc oncreate2DElePropDEZHelp {} { 
proc oncreate3DElePropDEZHelp {} { 
proc oncreateSingledisplacementDEZHelp {} { 
proc oncreatePointImpdispDEZHelp {} { 
proc oncreateExistingImpdispDEZHelp {} { 
proc oncreateCurveImpdispDEZHelp {} { 
proc oncreateSurfImpdispDEZHelp {} { 
proc oncreateSubsetImpdispDEZHelp {} { 
proc oncreateMultipledisplacementDEZHelp {} { 
proc oncreateConstrainedNodesDEZHelp {} { 
proc oncreateContactDEZHelp {} { 
proc oncreateExistingContactDEZHelp {} { 
proc oncreateSingleContactDEZHelp {} { 
proc oncreateExistingMpcdispDEZHelp {} { 
proc oncreateExistingConstrainedNodesDEZHelp {} { 
proc oncreateExistingSingleContactDEZHelp {} { 
proc oncreateExistingVelocityDEZHelp {} { 
proc oncreateExistingRigidwallDEZHelp {} { 
proc oncreateExistingForceDEZHelp {} { 
proc oncreateExistingPresDEZHelp {} { 
proc oncreateExistingTmpDEZHelp {} { 
proc oncreateVelocityDEZHelp {} { 
proc oncreateRigidwallDEZHelp {} { 
proc oncreateForceDEZHelp {} { 
proc oncreatePointForceDEZHelp {} { 
proc oncreateCurveForceDEZHelp {} { 
proc oncreateSurfForceDEZHelp {} { 
proc oncreateSubsetForceDEZHelp {} { 
proc oncreatePressureDEZHelp {} { 
proc oncreateSurfPresDEZHelp {} { 
proc oncreateSubsetPresDEZHelp {} { 
proc oncreateTemperatureDEZHelp {} { 
proc oncreatePointTmpDEZHelp {} { 
proc oncreateCurveTmpDEZHelp {} { 
proc oncreateSurfTmpDEZHelp {} { 
proc oncreateBodyTmpDEZHelp {} { 
proc oncreateSubsetTmpDEZHelp {} { 
proc onsetGravityDEZHelp {} { 
proc onsetupNastranRunDEZHelp {} { 
proc onsetupSolverParamDEZHelp {} { 
proc onsubcaseDEZHelp {} { 
proc onwriteNastranDEZHelp {} { 
proc onsolveNastranDEZHelp {} { 
proc onpostNastranDEZHelp {} { 
proc onv3VarsGDEZHelp {} { 
proc onv3TransTimeIDEZHelp {} { 
proc onv3DynamicCutPDEZHelp {} { 
proc onv3DynamicIsoDEZHelp {} { 
proc onv3ProbePtDEZHelp {} { 
proc onv3ImportSfDEZHelp {} { 
proc onv3CreateStrmDEZHelp {} { 
proc onv3AnimateDEZHelp {} { 
proc onannotationDEZHelp {} { 
proc ononedWinDEZHelp {} { 
proc onv3SurfacePropertyDEZHelp {} {
proc onv3SurfIntegalDEZHelp {} {
proc onv3SurfFlowDEZHelp {} {
proc v3SurfVarSVDEZHelp {} {
proc onv3SurfSVarDEZHelp {} {
proc onv3SurfVVarDEZHelp {} {
proc onv3StrmPropertiesDEZHelp {} {
proc onv3StartupDEZHelp {} {
proc onv3NastranVarsDEZHelp {} {
proc onv3AnsysVarsDEZHelp {} {
proc onv3LsDynaVarsDEZHelp {} {
proc onv3LsDynaXYpDEZHelp {} {
proc onvpColorMapDEZHelp {} {
proc onannoModifyVframeDEZHelp {} {
proc onannoModifyCmapDEZHelp {} {
proc ononedLineDEZHelp {} {
proc onv3InterpFileDEZHelp {} {
proc ononedPlotDEZZHelp {} {
proc ononedLegendDEZHelp {} {
proc ononedAxisXDEZHelp {} {
proc ononedAxisYDEZHelp {} {
proc ononedAxisADEZHelp {} {
proc onannoModifyTextDEZHelp {} {
proc onannoModifyPixmapDEZHelp {} {
proc onannoModifyLineDEZHelp {} {
proc onannoModifyCircleDEZHelp {} {
proc onannoModifyBoxDEZHelp {} {
proc onannoModifyPolygonDEZHelp {} {
proc onannoModifyMarkDEZHelp {} {
proc onannoModifyUtftextDEZHelp {} {
proc onv3ReportDEZHelp {} {
proc oncreatePartDEZHelp {} { 
proc onmodifyPartDEZHelp {} { 
proc oncreateGeomSubsetDEZHelp {} { 
proc onmodifyGeomSubsetDEZHelp {} { 
proc oncreateMeshSubsetDEZHelp {} { 
proc onmodifyMeshSubsetDEZHelp {} { 
proc oncreateAssemDEZHelp {} { 
proc onmodifyDistributedDEZHelp {} { 
proc onsetDetailInfoDEZHelp {} { 
proc oncreateBlockSubsetDEZHelp {} { 
proc onmodifyBlockSubsetDEZHelp {} { 
proc onhexcutPlaneDEZHelp {} { 
proc med_context_help {w} {
proc aie_get_sub_helpset {helpset} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_cutplane.tcl]]
proc aie_update_cutplane_wheelzoom {w in {X ""} {Y ""}} {
proc aie_update_cutplane_scan {i args} {
proc aie_cutplane_get {what args} {
proc aie_cutplane_update {args} {
proc aie_cutplane_create {args} {
proc aie_cutplane_clear {uninit} {
proc aie_cutplane_reset {} {
proc aie_cutplane_set {what args} {
proc oncutPlaneDEZApply {} {
proc oncutPlaneDEZLoad {} {
proc oncutPlaneDEZAfterLoad {} {
proc oncutPlaneDEZCancel {} {
proc oncutPlaneDEZUnLoad {} {
proc oncutPlanePnPtFinish {} {
proc oncutPlaneCp1Finish {} {
proc oncutPlaneCp2Finish {} {
proc oncutPlaneCp3Finish {} {
proc aie_cutplane_trace_show {{name ""} {ele ""} {op ""}} {
proc oncutPlaneITLoad {} {
proc oncutPlane3PLoad {} {
proc oncutPlaneSYLoad {} {
proc oncutPlaneSZLoad {} {
proc oncutPlaneSXLoad {} {
proc aie_cutplane_update_mesh {{cur ""}} {
proc aie_cutplane_mesh_subset {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_exampleMeshQuality.tcl]]
proc onExampleMeshQualityLoad {} {
proc onExampleMeshQualityOK {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_fileOperations.tcl]]
proc aie_openFile {file} {
proc aie_saveProject {{ask 0} {only_if_needed 0} {do_exit 0} {send_to_wb2 0}} {
proc aie_save_lsdyna_par_file {} {
proc set_project_dir {dir} {
proc aie_newProject {{prj_file ""} {force_new 0}} {
proc aie_openProject {{prj_file ""}} {
proc aie_openWBProject {{wb_prj_file ""}} {
proc aie_open_journal_file {name} {
proc aie_close_journal_file {} {
proc aie_rename_journal_file {newname prevdir} {
proc aie_afterStuffLoaded {{home 1} {init 0}} {
proc aie_closeProject {{confirm 1} {nquit 0}} {
proc aie_save_geom {{ask 0} {ver 0} {wb2 0}} {
proc aie_saveas_geom {} {
proc aie_import_parameters {{ask 1} {ft ""}} {
proc aie_open_geom {{ask 1} {ft ""} {wb2 0}} {
proc aie_close_geom {{confirm 1} {skip 0}} {
proc aie_open_Mesh {{ask 1} {move_from_orfn ""} {opt ""} {fm ""} {wb2 0}} {
proc aie_after_open_mesh {ask home} {
proc aie_open_str_mesh {{ask 1} {home 1}} {
proc aie_open_str_superdomain_mesh {} {
proc aie_initial_unsmesh_visibility {{home 1} {update 1}} {
proc aie_initial_strmesh_visibility {{home 1}} {
proc aie_save_Mesh {{only_types ""} {only_fams ""} {wb2 0}} {
proc aie_save_mesh_some {} {
proc aie_save_strMesh {} {
proc aie_save_strMeshas {{ask 1}} {
proc aie_save_Meshas {{visible 0}} {
proc aie_renumber_if_necessary {} {
proc aie_close_Mesh {{confirm 1} {skip 0}} {
proc aie_open_attr {{ask 1} {clear 1}} {
proc aie_initialize_tree_props_and_icons {} {
proc aie_saveas_attr {{ask 1}} {
proc aie_save_attr {} {
proc aie_close_attr {{confirm 1} {skip 0}} {
proc aie_open_params {{ask 1} {clear 1}} {
proc aie_load_params_file {par clear} {
proc aie_after_load_params {} {
proc aie_saveas_params {{ask 1}} {
proc aie_save_params {} {
proc aie_close_params {{confirm 1}} {
proc aie_cart3d_load_mesh {} {
proc aie_unused_project_name {{prefix project}} {
proc aie_save_last_view {} {
proc aie_load_last_view {} {
proc aie_import_nastran {{file ""} {do_load 1} {is_mat 0} {rbe3 0} {bars 0} {shell 0} {include 0}} {
proc aie_export_nastran { nas_file domain family_boco solver_params large_format vol_v shell_v bar_v thick_v cont_flag} {
proc aie_export_nastran_materials {nas_file solver_params} {
proc aie_open_blocking {{ask 1} {blk_file ""} {wb2 0}} {
proc aie_merge_blocking {filename} {
proc aie_close_blocking {{confirm 1} {skip 0}} {
proc aie_after_close_blocking {} {
proc aie_save_blocking {{ask 0} {format40 ""} {wb2 0}} {
proc aie_save_multiblock_mesh {} {
proc aie_save_unstruct_mesh {} {
proc aie_import_geo {type} {
    proc_n 1
    proc_n 1
proc aie_mesh_export {format fname {domain_file ""}} {
proc aie_show_legal_notice {} {
proc aie_mesh_to_facets { {ask 1} {sharp_feature 1} } {
proc aie_facets_to_mesh {} {
proc aie_str_mesh_to_cad {} {
proc aie_str_mesh_to_superdomain {} {
proc aie_str_mesh_to_uns {} {
proc aie_export_mesh_lspre {} {
proc aie_save_dez_data {file} {
proc aie_save_user_topo_tolerance {file} {
proc aie_backward_compatibility {} {
proc aie_open_cart {{ask 1} {crt_file ""}} {
proc aie_close_cart {{confirm 1} {skip 0}} {
proc aie_saveas_cart {} {
proc aie_save_cart {{ask 0}} {
proc onexportSpectralElementsDEZLoad {} {
proc onexportSpectralElementsDEZOK {} {
proc aie_print_project_info {} {
proc aie_clear_materials_tables {} {
proc aie_clear_params {} {
proc aie_update_lcs {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_geometry.tcl]]
proc aie_rename_geometry {type} {
proc onrename_geometryDEZOK {} {
proc va_check_data_set_points {List {outtype keep} {fam GEOM} {name P_001}} {
proc va_check_data_set_point {Point {outtype keep} {fam GEOM} {name P_001}} {
proc oncreatePointsDEZOK {}  {
proc oncreatePointsDEZAfterOK {} {
proc onCreatePointsFamModify {dez val} {
proc oncreatePointsDEZLoad {} {
proc oncreatePointsDEZAfterLoad {} {
proc oncreatePointsScrnLoad {} {
proc oncreatePntExpresLoad {} {
proc oncreateCurvePickPick {} {
proc onmodFaceCrvPick_P0Pick {} {
proc onmodFaceCrvPick_C1Finish {} {
proc onmodNURBCrvPick_C3Finish {} {
proc onmodNURBCrvPick_P3Finish {} {
proc onmodFaceCrvPick_P0Finish {} {
proc oncreatePointsDeltLoad {} {
proc oncreatePointsCenLoad {} {
proc oncreatePointsVectLoad {} {
proc oncreatePointCurvEndLoad {} {
proc oncreatePointInterLoad {} {
proc oncreatePointCurvParLoad {} {
proc oncreatePointCurvProjLoad {} {
proc oncreatePointprojSurfLoad {} {
proc oncreatePointsScrnWdgtFinish {} {
proc oncreatePoints3BaseFinish {} {
proc oncreatePointsCentWdgtFinish {} {
proc oncreatePointsCentArcWdgtFinish {} {
proc oncreatePointsParamWdgtFinish {} {
proc oncreateCurveEndsPickFinish {} {
proc oncreateCurveIntersecPickFinish {} {
proc oncreatePointCurveParFinish {} {
proc onpointPickFinish {} {
proc oncreateCurveProjPickFinish {} {
proc onpointPick2Finish {} {
proc oncreatePntOnSurfPickFinish {} {
proc onmodFaceCrv2PPickFinish {} {
proc onmodFaceSrf2PPickFinish {} {
proc onmodCrvPick_0Finish {} {
proc onmodCrvPick_1Finish {} {
proc onmodCrvPick_CFinish {} {
proc onmodCrvExtEndPickFinish {} {
proc onmodCrvPick_2Finish {} {
proc onmodCrvPick_3Finish {} {
proc oncreateCurvesDEZOK {} {
proc oncreateCurvesDEZAfterOK {} {
proc onCreateCurvesFamModify {dez val} {
proc oncreateCurvesDEZLoad {} {
proc oncreateCurvesDEZAfterLoad {} {
proc oncreateSurfsDEZAfterLoad {} {
proc aie_create_surfs_trace_how_modes {name element op} {
proc aie_create_surfs_trace_partial_offset {name element op} {
proc oncreateCurvesDEZUnLoad {} {
proc oncreCrvIntSet1Finish {} {
proc oncreateCrvPntsLoad {} {
proc oncreateCrvArcLoad {} {
proc oncreateCrvCicleLoad {} {
proc oncreateCrvMethodsLoad {} {
proc oncreateIsoUVpickPick {} {
proc onpickEdgePntPick {} {
proc onpickEdgePnt2Pick {} {
proc onpickSrfIsoCurve0Finish {} {
proc onpickSrfIsoCurve1Finish {} {
proc onpickSrfIsoCurve2Finish {} {
proc onpickEdgePntFinish {} {
proc onpickEdgePnt2Finish {} {
proc oncreateIsoUVpickFinish {} {
proc oncreateCrvInterLoad {} {
proc oncreateCrvProjLoad {} {
proc oncreateCrvSegmentLoad {} {
proc oncreateCrvConcatLoad {} {
proc oncreateCrvExtractLoad {} {
proc onmodCrv_3Load {} {
proc oncreateMidCrvLoad {} {
proc oncreateCurvePickFinish {} {
proc oncreateArcWdgt0Finish {} {
proc oncreateArcWdgt1Finish {} {
proc oncreateArcWdgt2Finish {} {
proc oncreatePointsCircleWdgtFinish {} {
proc oncreateCurveIntSet1Pick {} {
proc oncreateCurveIntSet2Pick {} {
proc oncreateCurveIntSet1Finish {} {
proc oncreateCurveIntSet2Finish {} {
proc oncreateCurvProjFinish {} {
proc oncreateCurvProjvecFinish {} {
proc oncreateSurfProjvecFinish {} {
proc oncreateSurfProjFinish {} {
proc onmodifyCurvPntFinish {} {
proc onmodifyCurvSegFinish {} {
proc onmodifyCurvSegcrv1Finish {} {
proc onmodifyCurvSegcrv2Finish {} {
proc onmodifyCurvSeg2Finish {} {
proc onmodifyCurvSeg3Finish {} {
proc onmodifyCurvSeg4Finish {} {
proc onmodifyCurvConcatFinish {} {
proc oncreateBoundCurvesFinish {} {
proc onmodifyCurvFinish {} {
proc onMidLinePickFinish {} {
proc oncreateCrvMidSetPick1Finish {} {
proc oncreateCrvMidSetPick2Finish {} {
proc onsectCurveUnload {} {
proc onsectCurvethrpntLoad {} {
proc onsectCurvethrpntUnload {} {
proc onsectCrvplanepntp1PickPick {} {
proc onsectCrvplanepntp2PickPick {} {
proc onsectCrvplanepntp3PickPick {} {
proc onsectCurvealngLoad {} {
proc onsectCurvealngUnload {} {			
proc oncreateTrimPlane_CLoad {} {
proc oncreateSurStdShapeLoad {} {
proc onrepairSurfaceUntrimLoad {} {
proc onrepairSurfacePickTrimmedFinish {} {
proc onTrimPlaneSurfFinish {} {
proc onTrimPlaneCurveFinish {} {
proc onStdDiscPickFinish {} {
proc onStdPlanePickFinish {} {
proc onModifyCurveDEZLoad {} {
proc onModifyCurveLoad {} {
proc onModifyCurveUnload {} {
proc oncreateMultipleSrfsLoad {} {
proc oncreateSurfsDEZOK {} {
proc onStdHoleCrvChrFinish {} {
proc onStdBoltCrv1ChrFinish {} {
proc onStdHoleLocChrPick {} {
proc onStdBoltLocChr1Pick {} {
proc onStdBoltLocChr2Pick {} {
proc onStdHoleLocChrFinish {} {
proc onStdBoltLocChrFinish {} {
proc onAdjBox1Load {} {
proc onCreateSurfsFamModify {dez val} {
proc aie_trace_c3dshrinkpart {name element op} {
proc oncreateSurfsDEZLoad {} {
proc oncreateSurfsDEZUnLoad {} { 
proc oncreateSurfSimpleLoad {} {
proc oncreateSurfDrvLoad {} {
proc oncreateSurfSweepLoad {} {
proc oncreateSurfRevLoad  {} {
proc oncreateSurfOffsetLoad {} {
proc oncreateSurfMidLoad {} {
proc oncreateSurfMidUnLoad {} {   
proc onsurfsThicknessAdjustLoad {} {
proc oncreateSurfLoftLoad {} {
proc oncreateSurfCurtainLoad {} {
proc oncreateSurfTrimLoad {} {
proc onmodifyMergeSurfLoad {} {
proc oncreateSurfHullLoad {} {
proc onmodifyFacetSurfsLoad {} {
proc oncreateSurModifyLoad {} {
proc onsegPlaneAxisOptionVLoad {} {
proc onsurfNormalPickFinish {} {
proc onsurfNormalPickAnyFinish {} {	
proc oncreateSurfNormalsLoad {} {
proc oncreateSurfEdgPickFinish {} {
proc oncreateSurfSimple4ptsFinish {} {
proc oncreateSurfSimpleCrvsFinish {} {
proc oncreateSurfDrivPickFinish {} {
proc ExtSrfEvaluateProc {} {
proc ExtSrfEval {} {
proc imagesizeProc {} {
proc onExtSrfImagePPick {} {
proc onExtSingleCrvPick {} {
proc onExtSingleCrvFinish {} {
proc onExtSrfImagePFinish {} {
proc oncreateSurfDrivenPickFinish {} {
proc oncreateSurfPDPickFinish {} {
proc oncreateSurfPPickFinish {} {
proc oncreateSurfDCurvePickFinish {} {
proc oncreateSurfCurveDPickFinish {} {
proc oncreateSurfCurvePickFinish {} {
proc oncreateSurfCurvePick2Finish {} {
proc oncreateSurfRevAxisPickFinish {} {
proc oncreateSurfRevCrvPickFinish {} {
proc oncreateSurfOffsetPickFinish {} {
proc oncreatePartMidPickFinish {} {
proc onSurfThickPickFinish {} {
proc onSurfThickPickMidsFinish {} {
proc onSurfThickPickSolidFinish {} {
proc oncreateSurfLoftPickFinish {} {
proc oncreatePairSurfMidPick1Finish {} {
proc oncreatePairSurfMidPick2Finish {} {
proc onCurtSurfCurvPickFinish {} {
proc oncreateCurtSurfSurfPickFinish {} {
proc oncreateSurfTrmCurvePickPick {} {
proc oncreateSurfTrmSurfPickFinish {} {
proc oncreateSurfTrmSurfPick2Finish {} {
proc oncreateSurfTrmCurvePickFinish {} {
proc onsegPlanePointnrm1Pick {} {
proc onsegPlanePointnrm1Finish {} {
proc onsegPlaneAxisPntPlnLoad {} {
proc onsegPlaneAxisThreepntLoad {} {
proc onsegPlanePoint1Pick {} {
proc onsegPlanePoint2Pick {} {
proc onsegPlanePoint3Pick {} {
proc onmodifySurfMergeSurfFinish {} {
proc onreapproxSelSurfFinish {} {
proc onreapproxSelSurf1Finish {} {
proc onreapproxSelCur1Finish {} {
proc onreapproxSelSurf2Finish {} {
proc onreapproxEachSurfFinish {} {
proc onconvexHullSurfPickFinish {} {
proc onStdSphChooserFinish {} {
proc onboxAxesPPickFinish {} {
proc oncylAxisPPickFinish {} {
proc onmodFaceSrfLoad {} {
proc onmodifyfacetPickFinish {} {
proc onPlanePPickFinish {} {
proc oncreateExtSurfEdgeLoad {} {
proc oncreateSurfaceExtendSurfLoad {} {
proc oncreateSurfacePickExtendCFinish {} {
proc oncreateSurfacePickExtendSFinish {} {
proc oncreateExtSurfacEdgeLoad {} {
proc onExtSrfAtEdgeSrfPickFinish {} {
proc onExtSrfAtEdgeCurveEntryFinish {} {
proc oncreateBodyDEZOK {} {
proc oncreateBodyDEZAfterOK {} {
proc onCreateBodyFamModify {dez val} {
proc oncreateBodyDEZLoad {} {
proc oncreateBodyDEZUnLoad {} {
proc oncreateBodyMatPntLoad {} {
proc oncreateBodyTopoLoad {} {
proc oncreateBodyPickFinish {} {
proc onmatptPickFinish {} {
proc onmatptPick2Finish {} {
proc aie_geo_build_material_from_solids {} {
proc aie_geo_remove_solids_without_material {} {
proc aie_geo_autosizing_from_body {} {
proc aie_geo_reduce_number_of_parts {} {
proc oncreateFacetedDEZLoad {} {
proc oncreateFacetedDEZOK {} {
proc onmoveNode_CrvWdgtFinish {} {
proc onmoveNode_SrfWdgtFinish {} {
proc onmodFaceCrv_00Load {} {
proc onmodFaceCrvPick_00Finish {} {
proc onmodFaceCrv_01Load {} {
proc onmodFaceCrv_02Load {} {
proc onmodFaceCrv_03Load {} {
proc onmodFaceCrv_04Load {} {
proc onmodFaceCrv_05Load {} {
proc onmodFaceCrv_06Load {} {
proc onmodFaceCrv_07Load {} {
proc onmodFaceCrv_08Load {} {
proc onmodFaceCrv_09Load {} {
proc onmodFaceCrv_10Load {} {
proc onmodFaceSrf_00Load {} {
proc onmodFaceSrfPick_S0Finish {} {
proc onmodFaceSrf_01Load {} {
proc onmodFaceSrf_02Load {} {
proc onmodFaceSrfPick_P0Finish {} {
proc onmodFaceSrfPick_P2Finish {} {
proc onmodFaceSrf_03Load {} {
proc onmodFaceSrf_04Load {} {
proc onmodFaceSrf_05Load {} {
proc onmodFaceSrf_06Load {} {
proc onmodFaceSrf_07Load {} {
proc onmodFaceSrf_08Load {} {
proc onmodFaceSrf_09Load {} {
proc onmodFaceSrf_10Load {} {
proc onmodFaceSrf_11Load {} {
proc onmodFaceSrf_12Load {} {
proc onmodFaceSrf_13Load {} {
proc onmodFaceSrf_14Load {} {
proc onmodFaceSrf_15Load {} {
proc onmodfacCln_00Load {} {
proc onmodfacCln_01Load {} {
proc onmodfacCln_02Load {} {
proc onmodfacMP_04Load {} {
proc onmodfacMP_05Load {} {
proc onFacCleTrimScrPickPick {} {
proc onFacCleTrimScrPickFinish {} {
proc onmodfacCln_02UnLoad {} {
proc onFacCleRepPickPick {} {
proc onFacCleRepPickFinish {} {
proc onFacChCrv1PickPick {} {
proc onFacChCrv1PickFinish {} {
proc onFacChCrv2PickPick {} {
proc onmodfacCln_03Load {} {
proc onmodfacMP_06Load {} {
proc onmodfacCln_04Unload {} {
proc onmodFaceClnUnload {} {
proc oncreateFacetedDEZCancel {} {
proc onRepairGeomDEZOK {} {
proc onRepairGeomDEZLoad {} {
proc onRepairGeomDEZUnLoad {} {
proc aie_geo_repair_trace_filterflag {name element op} {
proc onBuildTopoMPickFinish {} {
proc onrepairGeoTopoLoad {} {
proc aie_config_repairGeoTopo {args} {
proc onrepairSurfCloseLoad {} {
proc onrepairSurRemoveLoad {} {
proc onrepairSurMatchLoad {} {
proc onrepairSurfaceSplitFoldedLoad {} {
proc onrepairSurfCADClosePickFinish {} {
proc onrepairSurfacePickRemoveFinish {} {
proc onrepairSurfGap2PickFinish {} {
proc onrepairSurfacePickFoldedFinish {} {
proc ontransformSurfsToolsDEZOK {} {
proc aie_get_entities_without_body {type entities body} {
proc onrotateAutoFromLcsLoad {} {
proc onrotateAutoLcsFromFinish {} {
proc onrotateAutoLcsToFinish {} {
proc onrotateAutoFromLcsLoad {} {
proc onrotateAutoFromLcsUnLoad {} {
proc ontransAutoEGILoad {} {
proc ontransAutoEGIUnLoad {} {
proc ShowAllLCSProc {} {
proc ontransformSurfsToolsDEZUnLoad {} {
proc ontransformSurfsToolsDEZLoad {} {
proc ontransformSurfsToolsDEZAfterLoad {} {
proc ontransfmoveSurfs2PPickFinish {} {
proc ondeletePointsDEZAfterLoad {} {
proc ondeletePointsDEZUnLoad {} {
proc ondeletePointsDEZOK {} {
proc ondeletePointsPickFinish {} {
proc ondeleteCurveDEZAfterLoad {} {
proc ondeleteCurveDEZUnLoad {} {
proc ondeleteCurveDEZLoad {} {
proc ondeleteCurveDEZOK {} {
proc ondeleteCurvePickFinish {} {
proc ondeleteSurfDEZOK {} {
proc aie_detect_surface_bodies_to_delete {thelist} {
proc ondeleteSurfPickFinish {} {
proc ondeleteSurfDEZAfterLoad {} {
proc ondeleteSurfDEZUnLoad {} {
proc onmoveBodyDEZLoad {} {
proc ondeleteBodyPickFinish {} {
proc ondeleteBodyDEZOK {} {
proc ondeleteBodyDEZAfterLoad {} {
proc ondeleteBodyDEZCancel {} {
proc ondeleteEntityDEZAfterLoad {} {
proc ondeleteEntityDEZUnLoad {} {
proc ondeleteEntityDEZOK {} {
proc ondeleteEntityPickFinish {} {
proc onRestoreEntityDEZAfterLoad {} {
proc onRestoreCPickPick {} {
proc onRestorePPickPick {} {
proc onRestoreCPickFinish {} {
proc onRestorePPickFinish {} {
proc onRestoreEntityDEZUnLoad {} {
proc onRestoreEntityDEZOK {} {
proc onunitsGeometryDEZLoad {} {
proc onunitsGeometryDEZOK {} {
proc va_proj_point_on_surface {pnt surf new_pnt_fam new_pnt_name} {
proc aie_try_change_entry_configure {group entry option conf_on_0 conf_on_1 args} {
proc aie_try_change_entry_label {group entry newlabel} {
proc aie_on_change_LCS {which names labs args} {
proc aie_set_faceted {faceted type list} {
proc aie_select_move_geo_nodes {type incr} {
proc aie_blank_geometry {what} {
proc aie_unblank_geometry {what} {
proc aie_restrict_geometry {what} {
proc aie_restrict_geometry_by_angle {} {
proc aie_show_attached_geometry {what {which "incident"}} {
proc aie_va_dynamic {what how} {
proc va_do_create_2pts_isocurve {pts srf {set_name ""}} {
proc va_do_create_edge_isocurve {pnt {srf ""} {set_name ""}} {
proc aie_get_scale {} {
proc aie_3_pts_on_line {pts} {
proc aie_geo_modify_movenode {what proj_to args} {
proc aie_delete_exterior_surfaces {fam} {
proc aie_close_crvs_on_plane {fam} {
proc aie_cre_pnt_norm_plane {fam name pnt vec side {circle 0} {crv_only 0}} {
proc aie_get_locations_on_crv {crv end num incr} {
proc aie_get_3pnt_center {p1 p2 p3} {
proc aie_get_3pnt_arc_pnt {c p1 p2 pcheck} {
proc aie_get_csystem_direction {which} {
proc aie_project_crvs_and_trim_srfs {fam crvs_list srfs_list {entname ""} {do_projection 1}} {	
proc aie_update_curve_color_if_on {} {
proc ontransfmoveSurfesPickFinish {} {
proc aie_perCopyAngleRot {var args} {
proc aie_check_names_get_ext {ext type list} {
proc aie_set_part_and_new_names {type list part entname} {
proc aie_preview_cr_corner_curve {} {
proc ic_preview_cr_corner_curve {curve_name n_slice width {width2 ""} \
proc aie_cr_corner_point {p1 p2 add w_l1 w_l2 diff {surf_name ""} {debug 0}} {
proc aie_create_circle_section {p1 p2 r r2 r3 fam int_srf} {
proc aie_mp_final_spline {curve_name {spline_pts ""} {side1_pts ""} {side2_pts ""} {fillet 0} {debug 0}} {
proc aie_create_character_curve {curve_name surf_name part_name n_slice width {fillet 0} \
proc aie_smooth_facet_edge_align_to_curve {{type "edge"} } {
proc aie_smooth_facet_edges {{smooth_tol 1}} {
proc aie_smooth_order_surface_nodes { {surfnodes ""} } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_geometry_utils.tcl]]
proc aie_cr_geom_plane { {method "" } {pntnumber "" } {dez ""} {normal ""} } {
proc aie_update_bridge_curve { args } {
proc aie_curve_from_location {point} {
proc aie_trim_crv_to_crv {curve1 curve2 point {remove 1}} {
proc aie_wait_for_click {{ent entity} {scrn 0} {f9_key 0}} {
proc aie_cut_stl_by_curve {{surf1 ""} {curve1 ""} {proj "0"} {regroup "1"} {merge "0"} {pts ""} {fam ""}} {
proc aie_select_screen_points {{cut ""} {bind 0}} {
proc aie_seg_surf_by_screen {{fam ""}} {
proc va_cr_circle_3p {fam name p1 p2 p3 {s_ang 0} {e_ang 360}} {
proc aie_cr_poly_spline {{fam ""}} {
proc aie_vector_length {v} {
proc aie_vector_nrm {v} {
proc aie_vector_mult {v k} {
proc aie_transp_matrix {M} {
proc aie_mult_matrixes {M1 M2} {
proc aie_set_tri_fam {{surf1 ""} {curves ""} {sel "0"} {m "all"} {pix "3"} {window "1"} {max "0"} {pts ""}} {
proc aie_geo_merge_objects {type srf1 srfs} {
proc aie_cut_stl {{fam ""} } {
proc aie_select_points {{cut ""} {mess ""} {fam ""} {max 0} {bind "all"} } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_geo_evaluate.tcl]]
proc aie_pre_project_nearest_srfs {how srfs coords restrict_dir angle im_name_root} {
proc aie_pre_project_tangent_srfs {how srfs coords srf_tan_dir im_name_root} {
proc aie_pre_get_crv_dir {crv par_list up_coords up_tan_dirs up_from_dirs} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_grouping.tcl]]
proc oncreatePartSelLoad {} {
proc oncreatePartPickFinish {} {
proc onCreatePartNameModify {dez val} {
proc onmodifyPartSelLoad {} {
proc onmodifyPartPickFinish {} {
proc oncreatePartBlkPickFinish {} {
proc onmodifyPartBlkPickFinish {} {
proc onModifyPartDEZApply {} {
proc onCreatePartBlkLoad {} {
proc onCreatePartDEZApply {} {
proc onCreatePartDEZUnload {} {
proc onModifyPartDEZUnload {} {
proc aie_get_num_mesh_elems_in_part {part} {
proc aie_edit_part {name} {
proc aie_info_part {names {what "all"}} {
proc aie_info_all_part {type} {
proc aie_break_up_part { names } {
proc aie_merge_assembly_to_part { names } {
proc aie_create_assembly {{name ""}} {
proc aie_remove_assembly {} {
proc aie_find_base_assemblies {{list ""} } {
proc oncreateAssemDEZLoad {} {
proc oncreateSubAssemDEZLoad {} {
proc oncreateAssemDEZOK {} {
proc oncreateSubAssemDEZOK {} {
proc onCreatePartDEZLoad {} {
proc onCreatePartDEZAfterLoad {} {
proc oncreatePartBlkLoad {} {
proc onModifyPartDEZAfterLoad {} {
proc onmodifyPartBlkLoad {} {
proc onModifyPartDEZLoad {} {
proc aie_rename_part {name {newname ""} {force_newname 1} {not_black ""} {rename_entities 1} {check 1}} {
proc aie_delete_part {names} {
proc aie_delete_blocks_by_parts {parts} {
proc aie_blank_part { names} {
proc aie_unblank_part { names } {
proc aie_update_partbcs_one {part} {
proc aie_color_part {names {new ""}} {
proc aie_move_assembly {name into} {
proc aie_list_parts {fs} {
proc aie_get_parts_and_families {var} {
proc aie_apply_attribute {what bcs nprefix name type objects parts_or_subsets} {
proc aie_edit_attribute {name what dezname} {
proc aie_delete_property {type name} {
proc aie_rename_property {type name {newname ""}} {
proc aie_toggle_all_labels {type name} {
proc aie_convert_part_names_to_families {partnames} {
proc aie_set_group_or_part_vis {type names on update} {
proc aie_reset_icons {part} {
proc aie_reset_icons_subset {map} {
proc aie_reset_fam_visible {vis} {
proc aie_reset_type_visible {vis} {
proc aie_update_parts_vis {{update 1}} {
proc aie_get_bc_argument {fam type what} {
proc aie_list_sets {type} {
proc aie_change_set {type name newset} {
proc aie_get_geometry_in_part {type name} {
proc aie_create_initial_assemblies {{quiet 0} {later 0} {del_empty 1} {init 0}} {
proc aie_new_part {name} {
proc aie_is_group_type_visible {type} {
proc aie_create_parts_in_tree_if_needed {{init 0}} {
proc aie_update_parts_in_tree_if_needed {{force ""} {init 0}} {
proc aie_delete_empty_parts {{message 0}} {
proc aie_unique_parts {{message 0}} {
proc aie_move_parts {{message 0}} {
proc aie_delete_part_if_empty {{names ""}} {
proc aie_is_bctype_used {name {out 0}} {
proc aie_get_boco_type_name {name} {
proc aie_refresh_parts {} { ::AIEnv::GUIManagement::Tree::RefreshParts }
proc aie_new_families_or_elem_types {} {
proc aie_good_colors {by_mat} {
proc aie_show_selected_parts {on} {
proc aie_reverse_parts {{parts ""}} {
proc aie_get_parts_with_field {key} {
proc aie_select_families_with_bcs {what} {
proc aie_get_bc_names {} {
proc aie_part_update_nodes {{parent modelNode} {node partNode} {nodename Parts} {parts ""}} {
proc aie_part_names_from_tree {parts_or_ass {toplevel 1}} {
proc aie_part_change_visibility {ims on parts} {
proc aie_part_set_assemblies {im {node partNode}} {
proc aie_part_check_assemblies {im0 im1 im2 {node partNode}} {
proc aie_part_check_assemblies_with_elements {{node partNode} {assam ""}} {  
proc aie_assembly_exists_with_elements {} {  
proc aie_get_assemblies_with_elements {} {  
proc aie_part_set_boco_icons {partbc im} {
proc aie_prop_check_bocos {partbc im} {
proc aie_set_prop_names_for_part {{parts ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_hexa.tcl]]
proc aie_update_vert_proj {{numbers ""} {move_ogrid 0}} {
proc aie_get_vert_proj {{numbers ""}} {
proc aie_update_vert_proj_edge {edges} {
proc aie_update_association {{what {}}} {
proc aie_change_vertproj {type} {
proc aie_change_meshstyle {type {reset 1}} {
proc aie_change_meshproj {type} {
proc aie_change_domain_shade {type} {
proc aie_change_subface_shade {type} {
proc aie_blank_blocks {do} {
proc aie_blank_free_faces {{do ""}} {
proc aie_unload_blocking {} {
proc aie_hex_update_display {} {
proc aie_hex_index_control {{tearoff 0}} {
proc aie_hex_scan_planes {{tearoff 0}} {
proc aie_convert_str_to_blocking {} {
proc aie_convert_uns_to_blocking {} {
proc atest {n} {
proc block_split {} {
proc block_delete {how} {
proc block_split_face { how } {
proc aie_topo_extract {{show_tree 1}} {
proc switch_topology { new_top } {
proc aie_rename_topo {name {nname ""}} {
proc aie_delete_topo {name} {
proc aie_topo_build_defaults {{reset 1}} {
proc aie_topo_set_default {} {
proc aie_topo_select {text { multiple "" } } {
proc aie_select_unused_topo {{name ""}} {
proc aie_save_topo {subtopo} {
proc aie_copy_topo {name} {
proc aie_merge_topo {name} {
proc oncreateBlockDEZLoad {} {
proc oncreateBlockDEZAfterLoad {} {
proc oncreateBlockDEZUnLoad {} {
proc aie_hex_trace_createblkxdtypeval {name element op} {
proc aie_hex_trace_inherit_part {{name ""} {element ""} {op ""}} {
proc aie_hex_trace_createBlkVal {{name ""} {element ""} {op ""}} {
proc onCreateBlkFamModify {dez val} {
proc oncreateBlkI2DLoad {} {
proc oncreateBlkIniUnLoad {} {
proc oncreateBlk3DMultiZoneLoad {} {  
proc oncreateBlkIniLoad {} {
proc oncreateBlkI3DLoad {} {
proc oncreateBlkI25DLoad {} {
proc oncreateBlkPick1Finish {} {
proc oncreateBlkExtrudeLoad {} {
proc on$ll\Load {} {    
proc oncreateBlkFface$ll\Finish {} {
proc OncreateBlkFface1Pick {} {
proc onextBlkCurvePickFinish {} {
proc onextBlkEndptPickFinish {} {
proc oncreateBlkVerticesLoad {} {
proc onvertPickV6YFinish {} {
proc onvertPickV6Finish {} {
proc onvertPickV4Finish {} {
proc onvertPickV8Finish {} {
proc onvertPickSheetV4Finish {} {
proc onvertPickV3YFinish {} {
proc onvertPickVUnsFinish {} {
proc onvertPickUns3DFinish {} {
proc oncreateBlkEdgesUnsPickFinish {} {
proc oncreateBlkFacesUnsPickFinish {} {
proc oncreateBlkFacesPickFinish {} {
proc onOgridPartsSelectPick {} {
proc aie_mark_hexas_for_ogrid { vol_fams face_fams } {
proc onOgridPartsSelectFinish {} {
proc oncreateBlk2Dto3DLoad {} {
proc oncreateBlk2Dto3DUnLoad {} {
proc oncreateBlk2Dto3DM1Load {} {
proc aie_default_ogrid_parts {} {
proc aie_default_ogrid_offset {ogrid_parts} {
proc oncreateBlockDEZOK {} {
proc aie_hex_sketch_create_blocking_without_geometry {{part SOLID} {apply 0}} {
proc aie_hex_apply_default_settings {{skip 0}} {
proc aie_hex_set_default_bunching_on_all_edges {} {
proc onsplitBlkDEZLoad {} {
proc onsplitBlkDEZAfterLoad {} {
proc aie_hex_trace_splitExtendGGVal {name element op} {
proc onsplitBlkBlkLoad {} {
proc onsplitBlkBlkSelSelBlockFinish {} {
proc onsplitBlkBlkSelSelBlock2Finish {} {
proc onsplitBlkEdgePickFinish {} {
proc onsplitBlkEdgePointPickFinish {} {
proc onsplitBlkEdgeCurvePickFinish {} {
proc onsplitBlkExtendLoad {} {
proc onExtEdgePickFinish {} {
proc onsplitBlkExtendFaceLoad {} {
proc onsplitBlkExtendFaceUnLoad {} {
proc onsplitFaceFacePick {} {
proc onsplitFaceFaceFinish {} {
proc onsplitFaceEdgePickFinish {} {
proc onuncollapseBlkBLoad {} {
proc onuncollapsePickBFinish {} {
proc onConnectionsSelBlockFinish {} {
proc aie_mark_ogrid {} {
proc aie_clear_ogrid_sel {} {
proc onOBlkBlockPickFinish {} {
proc onOBlkFacePickPick {} {
proc onOBlkFacePickFinish {} {
proc onOBlkEdgePickFinish {} { 
proc onOBlkVertPickFinish {} {
proc onSplitUnsBlk3dFace1Finish {} {
proc onSplitUnsBlk3dFace2Finish {} {
proc onSplitUnsBlk3dPick1Finish {} {
proc onSplitUnsBlk3dSheets1Finish {} {
proc onSplitUnsBlk3dPick2Finish {} {
proc onSplitUnsBlk3dSheetsLoop3Finish {} {
proc onSplitUnsBlk3dSheetsLoop4Finish {} {
proc onSplitUnsBlk3dPick4Finish {} {
proc onSplitUnsBlk3dSheets4Finish {} {
proc onImprintSblockPickFinish {} {
proc onImprintSFacePickPick {} {
proc onImprintSFacePickFinish {} {
proc onImprintUnsBlkEdgesFinish {} {
proc onImprintUnsBlkVectorFinish {} {
proc onsplitFaceFace2Finish {} {
proc onOgridBlkBlkLoad {} {
proc onOgridBlkBlkUnLoad {} {
proc onsplitBlkDEZUnLoad {} {
proc onsplitUnsBlkLoad {} {
proc onsplitUnsBlkVertsFinish {} {
proc onSplitUnsBlk3dProjPick1Pick {} {
proc onSplitUnsBlk3dProjPick1Finish {} {
proc onSplitUnsBlk3dProjPick2Finish {} {
proc onSplitUnsBlk3dVectorFinish {} {
proc onSplitUnsBlk3dAlongCFinish {} {
proc onSplitUnsBlk3dUnLoad {} {
proc onImprintUnsBlkUnLoad {} {
proc onselectSplitProject {} {
proc aie_hex_select_split_project {} {
proc onsplitBlkDEZOK {} {
proc aie_hex_split_display_edge_bunching {{edge ""}} {
proc ondeleteBlockDEZLoad {} {
proc ondeleteBlockDEZAfterLoad {} {
proc ondeleteBlkPickFinish {} {
proc ondeleteBlockDEZOK {} {
proc oneditBlockMenuDEZLoad {} {
proc oneditBlockMenuDEZUnLoad {} {
proc oneditBlockMenuDEZAfterLoad {} {
proc onconvertBlocksLoad {} {
proc onconvertBlocksUnLoad {} {
proc convertBlocksPick {} {
proc onsetUBlockMeshTypeLoad {} {
proc onconvertBlocksPick1Finish {} {   
proc onconvertBlocksPick2Finish {} {   
proc onconvertBlocksPick3Finish {} {
proc onconvertBlocksPick4Finish {} {   
proc onconvertBlocksPick5Finish {} {   
proc oneditBlockIJKLoad {} {   
proc oneditBlockIJKM1PickFinish {} {
proc oneditBlockIJKM2PickFinish {} {
proc oneditBlockIJKM3PickFinish {} {
proc oneditBlockRenumberLoad {} {
proc onperiodicBlkBLoad {} {
proc onperiodicVertsPickFinish {} {
proc onperiodicVertsPick2Finish {} {
proc onjoinBlockMethodLoad {} {
proc onjoinBlockMethodUnLoad {} {
proc onjoinBlocksPickFinish {} {
proc onjoinBlockFaceLoad {} {
proc onjoinFacesPickFinish {} {
proc onconvertBlocksFacePickFinish {} {
proc onconvertFreeBlocksFaceFreePickFinish {} {
proc onreverseSBlockPickFinish {} {
proc onjoinBlockDirPickPick {} {
proc onjoinBlockDirPickFinish {} {
proc ontransferBlockMethodLoad {} {
proc ontransferBlockMethodUnLoad {} {
proc ontransferBlocksPickFinish {} {
proc aie_hex_trace_ijk_joinblock {{name ""} {element ""} {op ""}} {
proc aie_hex_trace_free_block_face {{name ""} {element ""} {op ""}} {
proc onjoinFacesPick2Pick {} {
proc onjoinFacesPick2Finish {} {
proc onconvertFreeBlocksFaceFreeMappedPickPick {} {
proc onconvertFreeBlocksFaceFreeMappedPick2Pick {} {
proc onconvertFreeBlocksFaceFreeMappedPickFinish {} {
proc onconvertFreeBlocksFaceFreeMappedPick2Finish {} {
proc onconvertFreeBlocksNodesMappedPickPick {} {
proc onconvertFreeBlocksNodesMappedPickFinish {} {
proc onconvertFreeBlocksNodesMappedPick2Finish {} {
proc onjoinBlockFaceUnload {} {
proc oneditBlockMenuDEZOK {} {
proc onchangeBlockPartDEZLoad {} {
proc onChangeBlockPartDEZModify {dez val} {
proc onchangeBlockPartDEZOK {} {
proc aie_change_part_blocks {blocks part_name {update 1}} {
proc onmergeBVertexDEZLoad {} {
proc onmergeBVertexDEZAfterLoad {} {
proc aie_hex_trace_propagate {name element op} {
proc onmergeBVertexDEZUnLoad {} {
proc ondeleteBlkStationBLoad {} {
proc ondeleteBlkStationPickFinish {} {
proc ondeleteBlkStaBaseChFinish {} {
proc ondeleteBlkStaListChFinish {} {
proc ondeleteBlkStationBTolLoad {} {
proc ondeleteBlkStationBlkLoad {} {
proc onmergeVert2EdgeLoad {} {
proc onmergeVertPickFinish {} {
proc onmergeEdgePickFinish {} {
proc ondeleteBlkStationPick2Finish {} {
proc oncollapseBlkedgePickFinish {} {
proc oncollapseBlkBlkPickFinish {} {
proc onmergeBVertexDEZOK {} {
proc aie_blocking_menu_unload {{mess ""}} {
proc oneditEdgeMenuDEZLoad {} {
proc aie_blocking_factor1 {num {dez ""}} {}
proc aie_blocking_factor2 {num {dez ""}} {}
proc oneditEdgeMenuDEZAfterLoad {} {
proc oneditEdgeMenuDEZUnLoad {} {
proc aie_hex_trace_auto_linear_all {name element op} {
proc oneditEdgeSplitLoad {} {
proc oneditEdgeSplitUnLoad {} {
proc onedgeSplitSplineLoad {} {
proc onedgeSplitLinearLoad {} {
proc onedgeSplitCPLoad {} {
proc onedgeSplitALinearLoad {} {
proc onedgeSplitASplineLoad {} {
proc onedgeSplitTanLoad {} {
proc oneditEdgeSplitEdgeTan2Load {} {
proc onedgeSplitAtVertexLoad {} {
proc editEdgeUnSplitPick {} {
proc oneditEdgeUnSplitLoad {} {
proc oneditEdgeUnSplitEdgeFinish {} {
proc oneditEdgeUnSplitVertexFinish {} {
proc oneditEdgeUnSplitUnLoad {} {
proc oneditEdgeLinkLoad {} {
proc oneditEdgeLinkUnLoad {} {
proc onlinkEdgeDimPickFinish {} {
proc onlinkEdgeSourceIndexFinish {} {
proc onlinkEdgeTargetIndexFinish {} {
proc oneditEdgeUnLinkLoad {} {
proc oneditEdgeUnLinkUnLoad {} {
proc oneditEdgeMenuDEZUnLoad {} {
proc oneditEdgeSplitEdge$ll\Finish {} {
proc oneditEdgeUnSplitEdgeFinish {} {
proc oneditEdgeUnSplitVertexFinish {} {
proc oneditEdgeLinkSEdgeFinish {} {
proc oneditEdgeLinkSEdge2Finish {} {
proc oneditEdgeUnLinkEdgeFinish {} {
proc oneditEdgeLinkTEdgeFinish {} {
proc oneditEdgeLinkTEdge2Finish {} {
proc oneditEdgeLinkDirPickFinish {} {
proc oneditEdgeLinkDirPick2Finish {} {
proc oneditEdgeMenuDEZOK {} {
proc aie_hex_proj_active_surfs {} {
proc onmoveBVertexDEZLoad {} {
proc onmoveBVertexDEZAfterLoad {} { 
proc onmoveBVertexMLoad {} {
proc onmoveBVertexMUnLoad {} {
proc onmoveVertsDirPickFinish {} {
proc onmoveVertPickFinish {} {
proc onmoveBlkNodesOnLineLoad {} {
proc onedgeLenBBLoad {} {
proc onedgeLenBBUnLoad {} {
proc onsetEdgeLengthPickFinish {} {
proc onedgeLenGGPick2Finish {} {
proc aie_get_edge_vec {n1 n2} {
proc onSelLocBMLoad {} {
proc OnSetLoRefLocPick {} {
proc onSelLocBMUnLoad {} {
proc onSLtypeModify {dez val} {
proc onAlignVerBBLoad {} {
proc onAlignVerBBUnLoad {} {
proc onAlignVertexPlane3PtLocPick {} {
proc onAlignVertexPlane3PtLocFinish {} {
proc onAlignVertexEdgeFinish {} {
proc onmoveFaceNodesLoad {} {
proc onmoveFaceNodesUnLoad {} {
proc onalignVertsDirPickFinish {} {
proc onalignVertsPickFinish {} {
proc onmoveBVertexDEZOK {} {   
proc onmoveBVertexDEZUnload {} {
    proc onSetLoRefLoc${i}Finish {} {	
proc onSetLocBVertexSelEdgeFinish {} {
proc oneditProjDEZLoad {} {
proc oneditProjDEZAfterLoad {} {
proc onProjFacBlkFamModify {dez val} {
proc onassocVertLoad {} {
proc onassocVertPick1Finish {} {
proc onassocVertPartFinish {} {
proc onassocVertPick2Finish {} {
proc onassocVertPick3Finish {} {
proc onassocVertPick4Finish {} {
proc onassocVertPointPickFinish {} {
proc onassocVertCurvePickFinish {} {
proc onassocVertPick5Finish {} {
proc onassocVertPart2Finish {} {
proc onassocEdgeLoad {} {
proc onassocEdgePickFinish {} {
proc onassocEdgeCurvePickFinish {} {
proc onassocFacSurfLoad {} {
proc onprojFaceSurfE1Finish {} {
proc onprojFaceSurfE2Finish {} {
proc onprojFaceSurfE3Finish {} {
proc onprojFacePartFinish {} {
proc onprojSWPartsFinish {} {
proc onprojSWSurfFinish {} {
proc onprojFaceSurfE2Finish {} {
proc onprojFaceSurfE2Finish {} {
proc onprojFaceSurfE4Finish {} {
proc onprojFaceSurfsPickFinish {} {
proc ongroupEGILoad {} {
proc ongroupCurvesPickFinish {} {
proc onungroupEGILoad {} {
proc onungroupCurvesPickFinish {} {
proc onprojUpdateVisVertFinish {} {
proc onprojVUpdateLoad {} {
proc onassocEdgeSurfLoad {} {
proc onassocEdgeSurfPickFinish {} {
proc onunsetAssocVertPickFinish {} {
proc onunsetAssocEdgePickFinish {} {
proc onunsetAssocFacePickFinish {} {
proc onFaceKeepMeshPartFinish {} {
proc onUnsFaceAssocSelFinish {} {
proc onassocFacSurfLoad {} {
proc onprojFacBlkSharedWallLoad {} {
proc aie_hex_show_shared_wall_info {{verbose 1}} {
proc onUnsFaceAssocLoad {} {
proc oneditProjDEZOK {} {
proc aie_topo_create_temp_visible {} {
proc aie_topo_delete_temp_visible {name} {
proc oneditProjDEZCancel {} {
proc aie_trace_reset_edge_ass {name element op} {
proc aie_hex_update_mesh_params {} {
proc onmParamsDEZLoad {} {
proc onmParamsDEZAfterLoad {} {
proc onmParamsDEZUnLoad {} {
    proc oneparamCopy${iiii}Load {} {
    proc oneparamCopyPick${iiii}Finish {} {
    proc oneparamCopyPick${iiii}Finish {} {
proc aie_hex_set_law {law} {
proc hexMeshParamsUpdate {{update_all 1} {params ""} {tedge ""}} {
proc aie_hex_lock_edge_nodes {} {
proc lock_edge_nodes {} {
proc aie_hex_eparam_sellink { var_name } {
proc aie_hex_eparam_revlink { var_name } {
proc oneditEdgeParamEdgeFinish {} {
proc trace_change_edge_bunching {name element op} {
proc aie_hex_trace_copyFlag {name element op} {
proc aie_hex_trace_link_spacing {name element op} {
proc trace_change_edge_bunching_apply {name} {
proc mparams_noreset {{on 1}} {
proc trace_display_edge_bunching {name element op} {
proc oneditEdgeLinkPickFinish {} {
proc aie_hex_scale_linkfactor {num {dez ""}} {
proc aie_hex_reverse_link {} {
proc display_edge_bunching {{action ""}} {
proc aie_hex_update_h1h2 {} {
proc onedgeParamS_update_h1h2 {} {
proc onedgeRefDimPickFinish {} {
proc aie_hex_reverse_law { lname } {
proc aie_hex_reverse_params {{apply 1}} {
proc aie_hex_screen_params {} {
proc aie_hex_mesh_law_modified {{a ""} {b ""}} {
proc onedgeParamSLoad {} {
proc onedgeParamSUnLoad {} {
proc aie_hex_apply_mparams {{apply 1}} {
proc aie_hex_is_linked_edge_parallel {h edge} {
proc aie_hex_parallel_edges {edge {only_visible 0} {nearest 0}} {
proc onedgeParamMatchEdgeLoad {} {
proc onedgeParamRefFinish {} {
proc onedgeParamTargetFinish {} {
proc onedgeParamCopyToPickFinish {} {
proc onedgeParamRefinementLoad {} {
proc onmParamsDEZOK {} {
proc aie_hex_graph_params {{law ""}} {
proc onmParamsDEZCancel {} {
proc onCheckBlockDEZLoad {} {
proc onCheckBlockDEZAfterLoad {} {
proc onCheckBlockDEZApply {} {
proc aie_hex_check_fix_inverted {} {
proc onfindWorstElemsDEZLoad {} {
proc onfindWorstElemsDEZAfterLoad {} {
proc onfindWorstElemsDEZApply {} {
proc aie_hex_find_worst_element {} {
proc aie_hex_clear_worst_element {} {
proc aie_hex_next_worst_element {up} {
proc aie_hexa_compare_ratio {a b} {
proc aie_convert_hexa_mesh {type} {
proc aie_hex_write_global_cart {} {
proc aie_write_super_domain {} {
proc aie_convert_hex2_multiblock {{type ""}} {
proc aie_convert_hex2_uns {{file ""}} {
proc aie_hex_mesh_size {{recalculate 1} {block_info 0}} {
proc aie_create_multiblock_file {{prefix ""}} {
proc aie_strdisp_shrink {type} {
proc aie_edit_composite_curve {} {
proc aie_create_vorfn {{force 0}} {
proc aie_delete_vorfn {} {   
proc aie_hex_list_parts {fn} {
proc aie_after_blocking_loaded {{force 0} {after_replay 0}}  {
proc aie_after_rename_blocking {{rename ""}} {
proc aie_hex_load_settings {} {
proc aie_hex_check_families {{force 1}} {
proc onhexQualityDEZLoad {} {
proc onhexQualityDEZAfterLoad {} {
proc onHexQualityDDEModify {dez val} {
proc aie_hex_check_const_radius {} {
proc onhexQualityDEZOK {} {    
proc aie_hex_show_min_quality {} {
proc aie_hex_update_histogram {{title ""} {nbars ""} {min ""} {max ""} {ylim ""} {only_active 1} {only_visible 0} {arguments ""}} {
proc aie_hex_clear_histogram {{del 1}} {
proc hex_select_histo {w intervals arguments solid show color_by_quality} {
proc aie_hex_subset_histogram {} {
proc onhexQualityDEZUnLoad {} {
proc ontransformBlocksToolsDEZLoad {} {
proc ontransformBlocksToolsDEZAfterLoad {} {
proc onrotateBlocksFromLcsLoad {} {
proc onrotateBlocksFromLcsUnLoad {} {
proc ontransBlocksEGILoad {} {
proc ontransBlocksEGIUnLoad {} {
proc ontransformBlocksToolsDEZUnLoad {} {
proc aie_hex_trace_BlkList {{name ""} {element ""} {op ""}} {
proc ontransformBlocksToolsDEZOK {} {
proc aie_hex_check_blocks {} {
proc aie_rotate_blocks {} {
proc aie_init_output_blocks {} {
proc aie_hex_recompute_mesh {} {
proc aie_renumber_blocks {} {
proc renum_p {w x v} {
proc renumber_cmp {v1 v2} {
proc renumber_putrc {i {xpos ""} {ypos ""}} {
proc renumber_setpos {i x y} {
proc renumber_moveup {r c} {
proc renumber_move {i xpos ypos} {
proc oncreateBlockPrimDEZLoad {} {
proc oncreateBlockPrimDEZOK {} {
proc oncreateBlockPrimDEZUnLoad {} {
proc oncreateBlkStartVertsPickFinish {} {
proc oncreateBlkEndVertsPickFinish {} {
proc aie_hex_disp_ext_verts {} {
proc aie_hex_show_inverted {} {
proc onhexMeshOptsDEZLoad {} {
proc onhexMeshOptsDEZAfterLoad {} {
proc onhexMeshOptsDEZUnLoad {} { 
proc onhexMeshOptsDEZOK {} {
proc aie_hex_opts_restore_defaults {} {
proc aie_hex_trace_mgLevel {{name ""} {element ""} {op ""}} {
proc aie_hex_check_multigrid_level {} {
proc aie_hex_find_worse {} {
proc onhexSmoothDEZLoad {} {
proc onHEXchooseQualityDDEModify {dez val} {
proc onhexSmoothDEZAfterLoad {} {
proc onhexSmoothDEZUnLoad {} {
proc aie_hex_trace_partFixList {{name ""} {element ""} {op ""}} {
proc aie_hex_trace_partFirstList {{name ""} {element ""} {op ""}} {
proc onHEXsmoothPremeshbyMultiblockLoad {{name ""} {element ""} {op ""}} {
proc onHEXsmoothPremeshbyMultiblockUnLoad {} {
proc aie_hex_rebunch_edge_active {{rebunch empty}} {
proc aie_hex_treat_unstruct_active {{treat empty}} {
proc onhexSmoothDEZOK {} {
proc aie_hex_save_multiblock_settings {{name ""} {element ""} {op ""}} {
proc aie_hex_load_multiblock_settings {{file ""} {sequence ""} {op ""}} {
proc aie_hex_run_multiblock_settings {} {
proc aie_hex_run_auto_setup {} {
proc aie_hex_trace_choose_direction {{name ""} {element ""} {op ""}} {
proc aie_hex_trace_smooth_dir_params {{name ""} {element ""} {op ""}} {
proc aie_hex_trace_premesh_val {name element op} {
proc aie_hex_trace_use_output_blocks {name element op} {
proc aie_hex_trace_multiblock_settings {name element op} {
proc aie_hex_trace_multiblock_display {name element op} {
proc aie_hex_clear_all_selections {} {
proc aie_hex_settings_reset {} {
proc aie_hex_relaxblocks_update {} {
proc onsmoothHEXSetSelectedParts {what {part_list ""} {reset 0}} {
proc aie_hex_configure_smooth_parts_form {w1 w2 type {w3 ""}} {
proc onHEXfreezeLayersSOESelFinish {{attr ""}} {
proc onHEXfirstLayerSOESelFinish {{attr ""}} {
proc aie_hex_add_or_remove {} {
proc aie_hex_init_multiblock_selections {} {
proc onsmoothRelaxBlockPickPick {} {
proc onsmoothRelaxBlockPickFinish {} {
proc onsmoothEdgeDirPickPick {} {
proc onsmoothEdgeDirPickFinish {} {
proc onsmoothNonRelaxFacePickPick {} {
proc onsmoothNonRelaxFacePickFinish {} {
proc onsmoothNonRelaxFacePickFilter {} {
proc onsmoothHoldCellHeightFacePickPick {} {
proc onsmoothHoldCellHeightFacePickFinish {} {
proc onsmoothHoldCellHeightFacePickFilter {} {
proc onsmoothGlobalVertPickPick {} {
proc onsmoothGlobalVertPickFinish {} {
proc onsmoothLayerVertPickPick {} {
proc onsmoothLayerVertPickFinish {} {   
proc aie_hex_face_picking_finished_all {picked type {skip 0}} {
proc aie_hex_set_first_layer_distance {} {
proc aie_hex_set_selected_first_layer_distance {selected} {
proc aie_hex_multiblock_display_faces {{show_only_icons 0}} {
proc aie_hex_multiblock_display_blocks {{solid 1} {ijk 0}} {
proc aie_hex_multiblock_display_nodes {} {
proc aie_hex_multiblock_display_selections {} {   
proc aie_hex_multiblock_color_to_RGB {color} { 
proc aie_hex_is_seleced_block {block} {
proc aie_hex_prepare_smooth_multi_block {{force_update 0}} {
proc aie_hex_prepare_get_inf {{force_update 0}} {
proc aie_hex_convert_multiblock_settings {{only_temp 0}} {
proc aie_hex_line_width {} {
proc aie_hex_edge_meshing {} {
proc oneditStrMeshIJKPickFinish {} {
proc onreorientStrMeshDEZOK {} {
proc onmoveStrNodesDEZLoad {} {
proc onmoveStrNodesInterLoad {} {
proc onmoveStrNodesDynamicFinish {} {
proc onmoveStrNodesRefLocFinish {} {
proc onmoveStrNodesDEZOK {} {
proc ontransformStrMeshDEZLoad {} {
proc ontransformStrMeshDEZAfterLoad {} {
proc ontransformStrMeshDEZOK {} {
proc onsplitStrMeshDEZLoad {} {
proc onsplitStrMeshSubfaceSelFinish {} {
proc onsplitStrMeshSubfacePartFinish {} {
proc onsplitStrMeshDEZOK {} {
proc onsplitStrMeshDEZUnLoad {} {
proc onsmoothStrMeshDEZLoad {} {
proc onsmoothStrMeshDEZAfterLoad {} {
proc onsmoothStrMeshDEZUnLoad {} {
proc aie_str_start_standalone_smoother {} {
proc aie_str_trace_refEdgeDir {{name ""} {element ""} {op ""}} {
proc aie_str_trace_planeNums {{name ""} {element ""} {op ""}} {
proc aie_str_get_smooth_method_number {type} {
proc aie_str_get_smooth_method_name {number} {
proc aie_str_add_or_remove {} {
proc onsmoothStrRelaxDomainPickPick {} {
proc onsmoothStrRelaxDomainPickFinish {} {
proc onsmoothStrNonRelaxFacePickPick {} {
proc onsmoothStrNonRelaxFacePickFinish {} {
proc onsmoothStrHoldCellHeightFacePickPick {} {
proc onsmoothStrHoldCellHeightFacePickFinish {} {
proc onsmoothStrFixedEdgesPickPick {} {
proc onsmoothStrFixedEdgesPickFinish {} {
proc onsmoothStrFixedDistributionEdgesPickPick {} {
proc onsmoothStrFixedDistributionEdgesPickFinish {} {
proc onsmoothStrGlobalVertPickPick {} {
proc onsmoothStrGlobalVertPickFinish {} {
proc onsmoothStrLayerVertPickPick {} {
proc onsmoothStrLayerVertPickFinish {} {
proc aie_str_set_first_layer_distance {} {
proc aie_str_set_selected_first_layer_distance {selected} {
proc aie_str_display_domains {} {
proc aie_str_display_subfaces {} {
proc aie_str_display_edges {} {
proc aie_str_clear_all_selections {} {
proc aie_str_dist_hosts {} {
proc aie_str_dist_update {hostfile} {
proc aie_str_dist_reset {} {
proc onsmoothStrMeshDEZOK {} {
proc aie_str_is_seleced_domain {n} {
proc aie_str_get_subface_ijk {dom which} {
proc aie_str_selections_pressed_button {b type i} {
proc aie_str_selections_released_button {b type i col} {
proc aie_str_show_all_selections {} {
proc aie_str_save_settings {{name ""} {element ""} {op ""}} {
proc aie_str_load_settings {{file ""} {sequence ""} {op ""}} {
proc aie_str_load_old_settings {load_file} {
proc aie_str_load_new_settings {{file ""}} {
proc aie_str_run_multiblock_settings {} {
proc aie_str_do_diag {} {
proc aie_str_do_histo {{title ""} {nbars ""} {min ""} {max ""}
proc aie_str_plot_histo {w intervals args solid show} {
proc aie_str_clear_histogram {} {
proc onqualityStrMeshDEZLoad {} {    
proc onqualityStrMeshDEZAfterLoad {} {
proc onqualityStrMeshDEZUnLoad {} {    
proc onqualityStrMeshDEZOK {} {
proc aie_str_trace_quality {name element op} {
proc aie_delete_blanked_blocks {} {
proc aie_hex_cutplane_update_mesh {{cur ""}} {
proc onhexcutPlaneDEZApply {} {
proc onhexcutPlaneDEZLoad {} {
proc aie_hex_cut_plane_clear {{clear 0}} {
proc onhexcutPlaneDEZUnLoad {} {
proc onhexcutPlaneITLoad {} {
proc onhexcutPlane3PLoad {} {
proc onhexcutPlaneSYLoad {} {
proc onhexcutPlaneSZLoad {} {
proc onhexcutPlaneSXLoad {} {
proc aie_hex_ref_uns_mesh {} {
proc aie_hex_update_index_form {set_min_max {reset_min_max 0}} {
proc aie_hex_sketching_mode {} {
proc aie_hex_sketch_display_faces {on} {
proc aie_hex_display_marked_blocks {{blocks ""}} {
proc aie_hex_create_display_subset {type {ents ""}} {
proc aie_hex_delete_display_subset {} {
proc aie_hex_split_block3d_absolute {edge num_splits} {
proc aie_hex_get_block_type {block} {
proc aie_hex_show_piping_dez {} {
proc onpipesFromFileDEZLoad {} {
proc onpipesFromFileDEZAfterLoad {} {
proc onpipesFromFilenameFinish {} {
proc aie_hex_display_pipe_params {} {
proc aie_hex_display_pipe_markers {} {
proc onpipesFromFileDEZUnLoad {} {
proc onpipesFromFileDEZApply {} {
proc aie_hex_create_piping_network {} {
proc aie_hex_rm_temp_dir {temp} {
proc aie_hex_clear_pipe_markers {} {
proc on2DBetaLawDEZOK {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_hosts.tcl]]
proc aie_hosts_hostfile {{prefix icemcfd}} {
proc aie_hosts_sysfile {} {
proc aie_hosts_nprocs {hostfile} {
proc aie_hosts_nhosts {hostfile} {
proc aie_hosts_setup {hostfile {exit_proc ""} {smoother 0}} {
proc hosts:center {w par} {
proc hosts:dialog {par title msg} {
proc hosts:quit {w} {
proc hosts:read {hostfile type} {
proc hosts:save {type} {
proc hosts:partitions {} {
proc hosts:update {} {
proc hosts:clear {type} {
proc hosts:buttons {} {
proc hosts:config {type} {
proc hosts:assign {} {
proc hosts:unassign {} {
proc hosts:add {par} {
proc hosts:checkname {} {
proc hosts:delete {par} {
proc hosts:run {par {dir ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_hotkeys.tcl]]
proc InitializeGlobalHotKeys {} {
proc HotKey_CreateBlocksVerts {} {
proc HotKey_InitializeBlocks {} {
proc HotKey_DeleteBlocksPerm {} {
proc HotKey_DeleteBlocks {} {
    proc HotKey_ChangeBlockIJK {} {
    proc HotKey_SetEdgeLength {} {
    proc HotKey_MatchEdges {} {
proc HotKey_RescaleOGrid {} {
proc HotKey_CheckQualityAR {} {
proc HotKey_IndexReset {} {
proc HotKey_ProjectVertsAll {} {
proc HotKey_AlignVerts {} {
proc HotKey_ScaleMeshSize {} {
    proc HotKey_CheckQualityAngle {} {
    proc HotKey_IndexSet {} {
    proc HotKey_AssocFace2Surf {} {
    proc HotKey_GroupCurves {} {
    proc HotKey_IndexControl {} {
    proc HotKey_SetLocation {} {
    proc HotKey_SetEdgeParams {} {
    proc HotKey_CreateOGrid {} {
    proc HotKey_CheckQualityDet {} {
    proc HotKey_UngroupCurves {} {
    proc HotKey_ProjectVerts {} {
proc HotKey_Recompute {} {
proc HotKey_SplitBlocks {} {
proc HotKey_SplitBlocksPropagate {} {
proc HotKey_MergeVerts {} { 
proc HotKey_MergeVertsProp {} {
proc HotKey_MergeBlocks {} {
proc HotKey_FixInverted {} {
proc HotKey_SplitEdge {} {
proc HotKey_UnsplitEdge {} {
proc HotKey_Edge2Curve {} {
proc HotKey_Edge2Surf {} {
proc HotKey_MoveVerts {} {
proc HotKey_MoveVertsMult {} {
proc HotKey_Vert2Point {} {
proc HotKey_UpdateSizes {} {
proc HotKey_MergeFaces {} {
proc HotKey_MergeNodes {} {
proc HotKey_MergeNodesProp {} {
proc HotKey_SplitEdges {} {
proc HotKey_SplitEdgesPropagate {} {
proc HotKey_RemeshBadElements {} {
proc HotKey_RemeshElements {} {
proc Hotkey_MeshFromEdges {} {
proc HotKey_BuildMeshTopo {} {
proc HotKey_Node2Curve {} {
proc HotKey_Node2Surf {} {
proc HotKey_Node2Point {} {
proc HotKey_SnapProjectNodes {} {
proc HotKey_MoveNodes {} {
proc HotKey_MoveNodesMult {} {
proc HotKey_SwapEdges {} {
proc HotKey_Tri2Quad {} {
proc HotKey_AllTri2Quad {} {
proc HotKey_Quad2Tri {} {
proc GlobalHotKey_Diagnostics {} {
proc HotKey_DeleteElements {} {
proc HotKey_MeshQualityMetrics {} {
proc HotKey_SmoothMesh {} {
proc HotKey_CreateElem {} {    
proc HotKey_BuildTopo {} {
proc HotKey_ExtendSurf {} {
proc HotKey_StitchMatch {} {
proc HotKey_DeleteGeom {} {
proc HotKey_DeleteGeomPerm {} {
proc HotKey_SplitCurve {} {
proc HotKey_SplitSurf {} {
proc HotKey_CurtainSurf {} {
proc HotKey_OffsetSurf {} {
proc HotKey_CreateCurve {} {
proc HotKey_Curve2Surf {} {
proc HotKey_ConcatCurves {} {
proc HotKey_CreateSurf {} {
proc HotKey_MergeSurfs {} {
proc HotKey_Point2Curve {} {
proc HotKey_Point2Surf {} {
proc HotKey_MoveGeom {} {
proc HotKey_CopyGeom {} {
proc HotKey_FacetedTools {} {
proc HotKey_FacetMV2NEW {} {
proc HotKey_CreateCylinder {} {
proc HotKey_CreateMeshedCylinder {} {
proc HotKey_CreateBox {} {
proc HotKey_SaveHardCopy {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_javahelp.tcl]]
proc startHlpEngine { {hostName localhost} {portNumber 0} } {
proc win_htmlhelp {chm_htmlfile} {
proc startNormalHelp {{ihelpset ""}} {
proc startVaHelp { } {
proc startTutorialHelp { } {
proc startUserManualHelp { } {
proc startInstallationManualHelp { } {
proc startReleaseNotes { } {
proc startProgrammersGuide { } {
proc startInstallGuide { } {
proc startBSMManualHelp { } {
proc startLegalNoticeHelp { } {
proc get_default_server_port { eshost } {
proc get_server_client_sock { eshost } {
proc getPort {pipe} {
proc startHlpServer {} {
proc EchoClient {host port} {
proc EchoClient_new { eshost port } {
proc hlp_sendcommand { args } {
proc chmhlp_intialize {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_lcs.tcl]]
proc oncreateLCSDEZLoad {} {
proc oncreateLCS1PWdgtFinish {} {
proc oncreateLCS3PWdgtFinish {} {
proc oncreateLCSDEZUnload {} {
proc aie_set_normal_to_screen_lcs {p0} {
proc oncreateLCSDEZApply {} {
proc aie_delete_lcs {type name} {
proc aie_create_csystem_from_nastran {name type p0 p1 p2} {
proc aie_set_lcs_current {type name} {
proc aie_set_lcs_data {name vals} {
proc aie_copy_lcs_to_bocos {} {
proc aie_edit_lcs {name} {
proc aie_load_lcs {} {
proc aie_save_lcs {} {
proc aie_get_lcs_name {num} {
proc aie_get_lcs_num {name} {
proc aie_rename_lcs {name} {
proc aie_flip_axes_lcs {name} {
proc aie_new_lcs_name {{name ""}} {
proc aie_convert_lcs_to_mechanical {lcs} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_meshedit.tcl]]
proc aie_set_uns_subset_visible {name} {
proc ondeleteNodesDEZAfterLoad {} {
proc aie_trace_delete_nodes {name element op} {
proc ondeleteNodesPickPick {} {
proc ondeleteNodesPickFinish {} {
proc ondeleteNodesDEZOK {} {
proc ondeleteNodesDEZUnLoad {} {
proc ondeleteElemsDEZAfterLoad {} {
proc ondeleteElemsDEZUnLoad {} {
proc aie_trace_delete_elems {{name ""} {element ""} {op ""}} {
proc ondeleteElemsPickPick {} {
proc ondeleteElemsPickFinish {} {
proc ondeleteElemsDEZOK {} {
proc onmoveNodesDEZLoad {} {
proc onmoveNodesDEZAfterLoad {} {
proc aie_move_node_proj_trace {name element op} {
proc aie_move_nodes_trace_elems {name element op} {
proc aie_move_nodes_trace_nodes {name element op} {
proc onmoveNodesDEZUnLoad {} {
proc onmoveNodesInterLoad {} {
proc onmoveNodesInterUnLoad {} {
proc onmoveNodesSingleLoad {} {
proc onmoveNodesMultipleLoad {} {
proc onmoveNodesPrismEdgeLoad {} {
proc onmoveNodesExactLoad {} {
proc onoffsetMeshLoad {} {
proc onoffsetMeshUnLoad {} {
proc onmoveNodesProjSurfLoad {} {
proc onmoveNodesProjSurfUnLoad {} {
proc onmoveNodesProjCurveLoad {} {
proc onmoveNodesProjPointLoad {} {
proc onmoveNodesUnProjLoad {} {
proc onmoveNodesProjCurveUnLoad {} {
proc onmoveNodesProjPointUnLoad {} {
proc onmoveNodesUnProjUnLoad {} {
proc onmoveNodesUpProjLoad {} {
proc onmoveNodesUpProjUnLoad {} {
proc onlulockElementsUnLoad {} {
proc onmoveNodesOnLineLoad {} {
proc onmoveNodesOnLineUnLoad {} {
proc onmoveNodesIntactPick {} {
proc onmoveNodesDynamicPick {} {
proc onmoveNodesIntactFinish {} {
proc onmoveNodesDynamicFinish {} {
proc onmoveNodesExPick {} {
proc onmoveNodesExFinish {} {
proc onoffsetElemsPickPick {} {
proc onoffsetElemsPickFinish {} {
proc onmoveNodesIntact2Pick {} {
proc onmoveNodesIntact2Finish {} {
proc onmoveNodesIntact3Pick {} {
proc onmoveNodesIntact3Finish {} {
proc onmoveNodesIntact4Pick {} {
proc onmoveNodesIntact4Finish {} {
proc onprojNodesPointFinish {} {
proc onmoveNodesIntact5Pick {} {
proc onmoveNodesIntact5Finish {} {
proc onmoveNodesIntact6Pick {} {
proc onmoveNodesIntact6Finish {} {
proc onalignDirectionPickFinish {} {
proc onalignNodesPickPick {} {
proc onalignNodesPickFinish {} {
proc onmoveNodesRefLocFinish {} {
proc onmoveNodesDEZOK {} {
proc onmoveNodesDEZCancel {} {
proc onmoveNodesPickFinish {} {
proc onlulockElementsPickPick {} {
proc onlulockElementsPickFinish {} {
proc ontransformElemsToolsDEZLoad {} {
proc ontransformElemsToolsDEZAfterLoad {} {
proc ontransformElemsToolsDEZUnLoad {} {
proc onrotateAutoMeshFromLcsLoad {} {
proc onrotateAutoMeshFromLcsUnLoad {} {
proc ontransAutoMeshEGILoad {} {
proc ontransAutoMeshEGIUnLoad {} {
proc trace_moveElemesCopyGG {name element op} {
proc trace_moveElemList {name element op} {
proc ontransfmoveElemesPickPick {} {
proc ontransfmoveElemesPickFinish {} {
proc ontransformElemsToolsDEZOK {} {
proc onmorphElemsToolsDEZLoad {} {
proc onmorphElemsToolsDEZApply {} {
proc checkMidSideTetraElements {on} {
proc onmergeInterRMLoad {} {
proc onmergeTolRMLoad {} {
proc onmergeNodesDEZLoad {} {
proc onmergeNodesDEZAfterLoad {} {
proc onmergeNodesDEZUnLoad {} {
proc aie_trace_mergeNodeList {name element op} {
proc onmergeNodesDEZOK {} {
proc onmergeNodesPickPick {} {
proc onmergeNodesPickFinish {} {
proc onmergeNodesPick2Finish {} {
proc onmergeNodesDEZCancel {} {
proc oneditElemsDEZLoad {} {
proc onconvertMeshTypeDEZLoad {} {
proc trace_create_mid_side_mid {name element op} {
proc trace_create_mid_side_geo {name element op} {
proc onconvertMeshTypeDEZUnLoad {} {
proc onconvertMeshTypeDEZAfterLoad {} {
proc onconvertMeshTypeDEZOK {} {
proc ontriToQuadLoad {} {
proc onquadToTriLoad {} {
proc ontetToHexaLoad {} {
proc onconvertElemsPickPick {} {
proc onconvertElemsPickFinish {} {
proc onconvertElemsPick2Pick {} {
proc onconvertElemsPick2Finish {} {
proc onconvertElemsPick3Pick {} {
proc onconvertElemsPick3Finish {} {
proc oncreateMidSideSelPick {} {
proc oncreateMidSideSelFinish {} {
proc onconvertElemsPick6Pick {} {
proc onconvertElemsPick6Finish {} {
proc onconvertNodesPick6Pick {} {
proc onconvertNodesPick6Finish {} {
proc onsplitHexNodesPickPick {} {
proc onsplitHexNodesPickFinish {} {
proc ontetToHexDEZOK {} {
proc allToTet {} {
proc ontriToQuadDEZOK {} {
proc ontriToQuadDEZLoad {} {
proc onsplitNode2Load {} {
proc onsplitEdgeLoad {} {
proc onswapEdgeLoad {} {
proc onSplitElemsRGLoad {} {
proc onSplitIntWallLoad {} {
proc onYSplitHexasLoad {} {
proc onSplitPrismsLoad {} {
proc onsplitNodeScrenSelPick {} {
proc onsplitNodeScrenSelFinish {} {
proc onsplitEdgeScrenSelPick {} {
proc onsplitEdgeScrenSelFinish {} {
proc onswapEdgeScrenSelPick {} {
proc onswapEdgeScrenSelFinish {} {
proc oneditElemsScrenSelPick {} {
proc oneditElemsScrenSelFinish {} {
proc oninternalWallPickFinish {} {
proc onysplitHexaNodeSelPick {} {
proc onysplitHexaNodeSelFinish {} {
proc onsplitMeshDEZLoad {} {
proc onsplitMeshDEZAfterLoad {} {
proc onsplitMeshDEZUnLoad {} {
proc onSplitIntWallsLoad {{after 0}} {
proc onselectSplitPropagate {} {
proc aie_select_split_propagate {} {
proc aie_split_mesh_non_manifold {} {
proc onsplitMeshDEZOK {} {
proc onsmoothDEZLoad {} {
proc onsmoothDEZAfterLoad {} {
    proc on$ll\Load {} {
proc trace_qualitydde_default_values {name element op} {
proc trace_advLaplacGGVal_group {name element op} {
proc smooth_update_selection_subset {} {
proc onChooseQualityDDEModify {dez val} {
proc smoothRefreshHistogram {} {
proc aie_refresh_histogram {} {
proc trace_smooth_update_histogram {name element op} {
proc onsmoothDEZOK {} {
proc onsmoothDEZUnLoad {} {
proc onsmoothSOEDEZLoad {} {
proc onsmoothSOEDEZAfterLoad {} {
proc smooth_update_hexahedral_subset {} {
proc onsmoothSOEDEZUnLoad {} {
proc aie_trace_partFixList {{name ""} {element ""} {op ""}} {
proc aie_trace_partFirstList {{name ""} {element ""} {op ""}} {
proc aie_trace_smoothType {{name ""} {element ""} {op ""}} {
proc ai_global_scale_alphaSurf {num {dez ""}} {}
proc ai_global_scale_alphaVol {num {dez ""}} {}
proc ai_global_scale_critAvrChaSurf {num {dez ""}} {}
proc ai_global_scale_critAvrChaVol {num {dez ""}} {}
proc aie_rebunch_edge_active {{rebunch empty}} {
proc aie_treat_unstruct_active {{treat empty}} {
proc onsmoothSOEDEZOK {} {
proc onfreezeLayersSOESelGraFinish {{attr ""}} {
proc onfirstLayerSOESelEllFinish {{attr ""}} {
proc onfreezeLayersSOESelGra2Finish {{attr ""}} {
proc onfirstLayerSOESelEll2Finish {{attr ""}} {
proc onsmoothSOESetSelectedParts {what {reset 0}} {
proc aie_configure_smooth_parts_form {w1 w2 type {w3 ""}} {
proc onqualityMetricsDEZLoad {} {
proc onqualityMetricsDEZAfterLoad {} {
proc onqualityMetricsDEZOK {} {
    proc on${idiag}Load {} {
proc ondiagCustomLoad {} {
proc onqualityMetricsDEZUnLoad {} {
proc aie_mesh_distribution {pt1 pt2 {what Volume}} {
proc aie_mesh_distribution_done {} {
proc onrepairMeshDEZLoad {} {
proc onrepairMeshDEZAfterLoad {} {
proc onrepairMeshRMLoad {} {
proc onrepairMeshRMBLoad {} {
proc onfixHoleMeshLoad {} {
proc oncloseHoleMeshLoad {} {
proc onenforceNodeLoad {} {
proc onstitchEdgeMeshLoad {} {
proc onsmoothLocalMeshLoad {} {
proc onMakeRemPeriodicLoad {} {
proc onMarkBoundedVolumeLoad {} {
proc onrepairMeshElemsPickPick {} {
proc onrepairMeshBadElemsPickPick {} {
proc onfixHoleMeshElemsPickPick {} {
proc oncloseHoleMeshElemsPickPick {} {
proc onstitchEdgeMeshElemsPickPick {} {
proc onsmoothLocalMeshElemsPickPick {} {
proc onmakeManPeriodicPickPick {} {
proc onmakeManPeriodicPick2Pick {} {
proc onmakeAutPeriodicPickPick {} {
proc onrepairMeshElemsPickFinish {} {
proc onrepairMeshBadElemsPickFinish {} {
proc onfixHoleMeshElemsPickFinish {} {
proc oncloseHoleMeshElemsPickFinish {} {
proc onstitchEdgeMeshElemsPickFinish {} {
proc onsmoothLocalMeshElemsPickFinish {} {
proc onmakeManPeriodicPickFinish {} {
proc onmakeManPeriodicPick2Finish {} {
proc onmakeAutPeriodicPickFinish {} {
proc onEnclosedSurfsPickFinish {} {
proc onMarkMatlsPickFinish {} {
proc onsetProjPartLoad {} {
proc onsetAssocElemsPickFinish {} {
proc aie_update_keep_consistent {} {
proc onrepairMeshDEZOK {} {
proc aie_show_leaks {} {
proc onrepairMeshDEZCancel {} {
proc onrepairMeshDEZUnLoad {} {
proc onsmoothLocalMeshUnLoad {} {
proc oncheckMeshDEZLoad {} {
proc oncheckMeshDEZAfterLoad {} {
proc aie_check_mesh_defaults {} {
proc oncheckMeshDEZOK {} {
proc aie_mesh_diag_check { keys which mode {quiet 0}} {
proc onrepairMeshDEZCancel {} {
proc onadjustMeshDEZLoad {} {
proc onadjustMeshDEZAfterLoad {} {
proc oncoarsenMeshLoad {} {
proc oncoarsenSelectedMeshLoad {} {
proc aie_set_refinement_only_by {what} {
proc onadjustMeshDEZOK {} {
proc onrenumberMeshDEZLoad {} {
proc onrenumberMeshDEZAfterLoad {} {
proc aie_trace_renumber_count {name element op} {
proc aie_trace_renumber_mesh {name element op} {
proc onrenumberMeshDEZUnLoad {} {
proc onrenumSelPickFinish {} {
proc onrenumSelPick2Finish {} {
proc onrenumberMeshDEZOK {} {
proc onthicknessMeshDEZLoad {} {
proc onthicknessMeshDEZOK {} {
proc onreorientConsistentLoad {} {
proc onreorientConsElemPickFinish {} {
proc onreorientReverseLoad {} {
proc onreorientElemsPickFinish {} {
proc onreorientMeshDEZLoad {} {
proc aie_reorient_IJKMS0 {name element op} {
proc aie_reorient_IJKMS1 {name element op} {
proc aie_reorient_IJKMS2 {name element op} {
proc aie_reorient_IJKMS {idx} {
proc onreorientMeshDEZAfterLoad {} {
proc onreorientLineLoad {} {
proc onreorientLineUnLoad {} {
proc onreorientLinesPickFinish {} {
proc onreorientMeshDEZOK {} {
proc aie_reorient_mesh_consistent {part type_orig num_orig visib} {
proc onreorientMeshDEZUnLoad {} {
proc onreorientVolIJKLoad {} {    
proc onreorientVolIJKUnLoad {} {
proc onreorientVolIJKM1PickFinish {} {
proc onreorientVolIJKM2PickFinish {} {
proc onreorientVolIJKM3PickFinish {} {
proc reorientVolume {map how_reorient {vert ""}} {
proc onparaMeshDEZOK {} {
proc onmodifyDistributedDEZLoad {} {
proc onmodifyDistributedDEZAfterLoad {} {
proc onmodifyDistributedDEZUnLoad {} {
proc just_one_bcfield_val {field elemList} {
proc onmodifyDistributedPickPick {} {
proc onmodifyDistributedPickFinish {} {
proc aie_modify_distribute_attribute_name {{name ""} {element ""} {op ""}} {
proc onmodifyDistributedDEZOK {} {
proc aie_optms_smooth {} {
proc aie_optms_smooth_defaults {} {
proc aie_optms_smooth_apply {w} {
proc aie_refine_dist_init {} {
proc aie_refine_dist_hosts {} {
proc aie_refine_dist_update {hostfile} {
proc aie_refine_dist_run {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_mesher.tcl]]
proc onmeshLineDEZOK {} {
proc onmeshQuadDEZLoad {} {
proc onmeshQuadDEZAfterLoad {} {
proc onmeshQuadDEZUnLoad {} {
proc aie_quad_trace_elType {name element op} {
proc aie_quad_trace_QuadMethod {name element op} {
proc aie_quad_trace_projection {{name ""} {element ""} {op ""}} {
proc aie_quad_trace_bunch {{name ""} {element ""} {op ""}} {
proc aie_quad_trace_dormant {{name ""} {element ""} {op ""}} {
proc onMeshQuadElTypeModify {dez val} {
proc ondefineSurfMeshPILoad {} {
proc ondefineSurfMeshPIUnLoad {} {
proc ondefineSurfMeshHexLoad {} {
proc ondefineSurfMeshHexUnLoad {} {
proc onmeshQuadDEZOK {} {
proc onmeshTetDEZLoad {} {
proc onmeshTetDEZAfterLoad {} {
proc onmeshTetDEZUnload {} {
proc aie_trace_batchFlag {name element op} {
proc aie_trace_meshTetMethodEG {name element op} {
proc onmeshTetGeomLoad {} {
proc onmeshTetGeomMeshLoad {} {
proc onmeshTetSurfLoad {} {
proc onMeshRemeshMFModify {dez val} {
proc onMeshVolTypeModify {dez val} {
proc onMeshVolTypeModify2 {} {
proc onmeshTetDEZOK {} {
proc aie_mesh_tet_get_existing_subsets {} {
proc aie_mesh_tet_reset_existing_subsets {subsets} {
proc meshHexGUI {} {
proc onmeshHexDomDEZLoad {} {
proc onmeshHexDomDEZApply {} {
proc oncreateElemsDEZLoad {} {
proc onCreateElemsNameModify {dez val} {    
proc oncreateElemsDEZUnLoad {} {
proc oncreateElemsDEZAfterLoad {} {
proc aie_trace_create_elems_automatically {{name ""} {element ""} {op ""}} {
proc aie_trace_create_elems_from_screen {{name ""} {element ""} {op ""}} {
    proc oncreateElemsNodesPick${n}Finish {} {
    proc oncreateElemsPointsPick${n}Finish {} {
    proc oncreateElemsScreenPick${n}Finish {} {
proc oncreateElemsFacesPickFinish {} {
    proc oncreateElemsNodesPick${n}Pick {} {
    proc oncreateElemsPointsPick${n}Pick {} {
proc oncreateElemsElemsPickFinish {} {
proc oncreateElemsEdgePickFinish {} {
proc oncreateElemsCurvePickFinish {} {
proc oncreateElemsDEZOK {} {
proc onextrudeMeshDEZLoad {} {
proc onextrudeMeshDEZAfterLoad {} {
proc aie_extrude_trace_spaceType {name element op} {
proc aie_extrude_trace_elemList {name element op} {
proc onextrudeMeshDEZUnLoad {} {
proc onselectExtrudeMerge {} {
proc aie_select_merge_degen {} {
proc onextMeshCurveLoad {} {
proc onExtrudeMeshVolPartModify {dez val} {
proc onExtrudeMeshSidePartModify {dez val} {
proc onExtrudeMeshTopPartModify {dez val} {
proc onextrudeMeshDEZOK {} {
proc aie_get_subset_families_only_with_dim {subset dim} {
proc aie_extMesh_check_curve_dir {{images ""}} {
proc aie_connectors_attribute_name {} { return "connector" }
proc aie_connectors_boco_name {} { return "CONNECTOR" }
proc aie_md_debug {text} {
proc aie_connectors_get_fams_comprising {handle} {
proc aie_connectors_get_group_comprising {handle} {
proc aie_connectors_get_fams_for_group {groupname} {
proc aie_connectors_get_group_for_fam {famname} {
proc aie_connectors_exist_on_model {} {
proc aie_connnectors_does_group_have_directives {groupname} {
proc aie_connectors_get_directive_of_group {groupname} {
proc aie_connectors_get_directive_of_fam {famnames} {
proc aie_edit_connector {name} {
proc aie_connectors_edit_group_directives {name} {
proc aie_connectors_tree_delete_all_directives {nodes} {
proc aie_connectors_delete_group_directives {groupname} {
proc aie_connectors_create_group_for_existing_fam {fam {sugg_group_name ""}} {
proc aie_connectors_register_resultfams_from_tetin {} {
proc aie_connectors_exec { {which_directives all} {which_fams all} } {
proc aie_connectors_load {} {
proc aie_connectors_unload {} {
proc aie_connectors_activate_all_directives {on} {
proc aie_connectors_display_results {} {
proc aie_connectors_get_group_predominant_entity_type {group} {
proc aie_connectors_create_new_source_group { basename entityList {type_to_use ""} } {
proc aie_connectors_result_group_default {directive} {
proc aie_connectors_register_new_result_group {result} {
proc aie_connectors_register_tree_groups {newgroups} {
proc aie_connectors_update_tree_groups {} {
proc unused_aie_connnectors_is_group_a_connector {groupname} {
proc unused_unused_aie_connnectors_is_group_a_connector_with_directives {groupname} {
proc aie_connectors_get_directive_switch_value {directive} {
proc aie_connectors_get_switch_value_directive {dez_switch_value} {
proc aie_connectors_redefinition_warning {part} {
proc aie_connectors_spotweld_method_list {} {
proc aie_connectors_seamweld_method_list {} {
proc aie_connectors_seamweld_subtype_list {} {
proc aie_connectors_glinka_side_method_list {} {
proc aie_connectors_uniquify_group_name {prefix} {
proc aie_connectors_default_source_group_name {type} {
proc aie_connectors_default_result_group_name {type} {
proc aie_connectors_root_family_names_of_groups {parts} {
proc aie_connectors_root_family_names_of_fams {fams} {
proc aie_connectors_create_groups_for_imported_welds {} {
proc aie_connectors_define_seamwelds_as_quads {{parts all} {reset 0}} {
proc aie_connectors_update_inactive_icons {} {
proc ondefineConnectorsDEZLoad {} {
proc UpdateGlinkaWeldSpacingParams {groupitem} {
proc aie_connector_glinka_get_thickness {surfaces} {
proc onseamWeldSelEG0Ec3Finish {} {
proc ondefineConnectorsPart1Fam3Finish {} {
proc ondefineConnectorsDEZUnLoad {} { 
proc ondefineConnectorsDEZOK {} {    
proc aie_connector_point_embedded {point} {
proc aie_prism_select_parts { } {
proc prism_select_parts_doit {} {
proc onmeshPrismDEZLoad {} {
proc onmeshPrismDEZAfterLoad {} {
proc onMeshPrismVolPartModify {dez val} {
proc onMeshPrismSidePartModify {dez val} {
proc onMeshPrismTopPartModify {dez val} {
proc aie_get_prism_family_params {part {use_def 0}} {
proc onmeshPrismDEZOK {} {
proc aie_read_prism_params {params_file {load 0}} {
proc aie_check_prism_params {{mesher Tetra}} {
proc aie_write_prism_params {} {
proc aie_prism_compute_params {} {
proc aie_autosizing {type {chkmax 0}} {
proc aie_no_autosizing {} {
proc aie_autosizing_old {type} {
proc aie_no_autosizing_old {} {
proc aie_check_application_running {} {
proc aie_check_application_running_and_wait {} {
proc onmeshAutoDEZLoad {} {
proc onmeshAutoDEZAfterLoad {} {
proc aie_wb_trace_tgrid_inflation_state {{name ""} {element ""} {op ""}} {
proc aie_set_automesh_input {} {
proc onmeshAutoSurfLoad {} {
proc aie_surface_mesh_trace_type_method {name element op} {
proc aie_surface_mesh_trace_etype2_emethod2 {name element op} {
proc aie_volume_mesh_trace_hexa_core {name element op} {
proc aie_compute_surface_mesh {{volume_mesh ""}} {
proc onmeshAutoVolumeLoad {} {
proc onmeshTetraOctLoad {} {
proc aie_update_octree_grey {} {
proc onmeshTetOctAllLoad {} {
proc onmeshTetOctVisLoad {} {
proc onmeshTetOctPartLoad {} {
proc onmeshTetOctBatchLoad {} {
proc aie_compute_tetra_octree_mesh {} {
proc onmeshTetraDelLoad {} {
proc onmeshTetraAdvLoad {} {
proc onmeshTetraTGridLoad {} {
proc aie_mesh_fill_volume {mesher {only_parts ""}} {
proc aie_compute_tetra_mesh {method} {
proc onmeshAutoPrismLoad {} {
proc aie_compute_prism_mesh {} {
proc aie_compute_extprism_mesh {} {
proc onmeshHexaCoreLoad {} {
proc aie_compute_hexacore_mesh {} {
proc onmeshHexaDomLoad {} {
proc aie_compute_hexdom_mesh {} {
proc onmeshAutoDEZOK {} {
proc aie_compute_volume_mesh {} {
proc onmeshAutoDEZUnLoad {} {
proc onsurfMeshDefaultsDEZLoad {} {
proc onsurfMeshDefaultsDEZAfterLoad {} {
proc onsurfMeshDefaultsDEZOK {} {
proc aie_get_default_surface_mesh_type {{volume_mesh ""}} {
proc aie_get_default_surface_mesh_method {{volume_mesh ""}} {
proc onmeshVolFromSurfDEZLoad {} {
proc onmeshVolFromSurfDEZAfterLoad {} {
proc onmeshVolFromSurfDEZOK {} {
proc onmeshAdvFrontDEZLoad {} {
proc onmeshAdvFrontDEZAfterLoad {} {
proc onmeshAdvFrontDEZOK {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_meshSize.tcl]]
proc onmszGlobalDEZLoad {} {
proc onmszGlobalDEZAfterLoad {} {
proc onmszGlobalTypeShellLoad {} {
proc aie_global_get_mesh_type_number {type} {
proc aie_global_get_mesh_type_name {type} {
proc aie_global_get_mesh_method_number {method} {
proc aie_global_get_mesh_method_name {method} {
proc aie_global_quad_trace_proj_surf {{name ""} {element ""} {op ""}} {
proc aie_global_quad_trace_bunch_respect {{name ""} {element ""} {op ""}} {
proc aie_global_quad_trace_dormant {{name ""} {element ""} {op ""}} {
proc aie_global_trace_tetra_gui_values {{name ""} {element ""} {op ""}} {
proc aie_global_quad_trace_mesh_method2 {{name ""} {element ""} {op ""}} {
proc aie_global_prism_trace_pre_inflation {{name ""} {element ""} {op ""}} {
proc aie_global_prism_trace_ortho_weight {{name ""} {element ""} {op ""}} {
proc aie_global_trace_periodic_gui_values {{name ""} {element ""} {op ""}} {
proc aie_global_scale_mapping {num {dez ""}} {}
proc aie_global_scale_adjust {num {dez ""}} {}
proc aie_global_scale_try_harder {num {dez ""}} {}
proc aie_global_scale_impr_level {num {dez ""}} {}
proc onmszGlobalIntWallsPick {} {
proc onmszGlobalThinCutsFinish {} {
proc aie_update_thincuts {} {
proc aie_define_thincuts {} {
proc aie_thincut_select {var} {
proc aie_update_global_mesh_params {} {
proc aie_reset_global_mesh_params {} {
proc aie_get_global_mesh_params {var} {
proc aie_set_global_mesh_params {type} {
proc onmxzGlobalTypeTetraLoad {} {
proc aie_global_periodic_convert {} {
proc onmszGlobalDEZOK {} {
proc onMszGlobalDEZUnLoad {} {
proc aie_prism_extra_params {} {
proc aie_prism_extra_params_defaults {} {
proc aie_prism_extra_params_apply {w} {
proc aie_curve_get_bunching_law_name { name } {
proc onmszCurveCopyPickFromFinish {} {
proc onmszCurveCopyPickToFinish {} {
proc onmszCurveMousePickPick {} {
proc onmszCurveMousePickFinish {} {
proc aie_curve_show_directions {{images ""} {off 0}} {
proc aie_curve_reverse_crv {} {
proc aie_curve_display_direction {x y on} {
proc aie_curve_get_dir_image {c {x ""} {y ""}} {
proc aie_curve_display_param {on which only_one} {
proc aie_curve_mouse_dynamic {which} {
proc aie_curve_mouse_dynamic_done {which curves reset_count reset_size} {
proc aie_curve_default_binding {} {
proc aie_curve_dynamic_binding {which curves reset_count reset_size} {
proc aie_curve_mouse_incr_decr_F9 {which curves reset_count reset_size} {
proc aie_curve_mouse_incr_decr {crv clicked which} {
proc aie_curve_mouse_incr_decr_wait {which what b x y t} {
proc aie_curve_mouse_incr_decr_doit {crv click which} {
proc aie_curve_mouse_incr_decr_pos {w x y which reset_size} {
proc onmszCurveDEZLoad {} {
proc onmszCurveDEZAfterLoad {} {
proc onmszCurveDEZUnLoad {} {
proc onmszCurveTypeAdvancedLoad {} {
proc onmszCurveTypeAdvancedUnLoad {} {
proc onmszCurveTypeCopyLoad {} {
proc onmszCurveTypeCopyUnLoad {} {
proc aie_curve_trace_emax_nmax {name element op} {
proc aie_curve_trace_curveList {name element op} {
proc aie_curve_incr_decr_properties {name} {
proc aie_curve_incr_decr_get_space {ratio num len {not_even 0}} {
proc aie_curve_incr_decr_get_ratio {space num len {not_even 0}} {     
proc aie_curve_params_blank {} {
proc aie_curve_params_blank_update {} {
proc aie_curve_params_adjust {ref_crv} {
proc aie_curve_params_copy {} {
proc onmszCurveDEZOK {} {
proc onmszSurfPickFinish {} {
proc onmszSurfDEZLoad {} {
proc onmszSurfDEZAfterLoad {} {
proc onmszSurfDEZUnLoad {} {
proc onmszSurfDEZOK {} {
proc aie_surface_get_mesh_type_number {type} {
proc aie_surface_get_mesh_type_name {type} {
proc aie_surface_get_mesh_method_number {method} {
proc aie_surface_get_mesh_method_name {method} {
proc aie_surface_params_blank_update {} {
proc aie_surface_params_blank {} {
proc onMszBodyDEZOK {} {
proc onMeshPartOptionsDEZLoad {} {
proc onMeshPartOptionsDEZOk {} {
proc aie_density_color {} {
proc aie_density_clear_all {} {
proc aie_density_update_point {n pos} {
proc aie_density_restore {} {
proc oncreateDensityDEZLoad {} {
proc oncreateDensityPointsLoad {} {
proc oncreateDensityPointPtsFinish {} {
proc oncreateDensityEntityLoad {} {
proc oncreateDensityDEZOK {} {
proc oncreateDensityDEZCancel {} {
proc onmodifyDensityDEZLoad {} {
proc onmodifyDensityDEZAfterLoad {} {
proc onmodifyDensityPickFinish {} {
proc onmodifyDensityScreenLoad {} {
proc onmodifyDensityScreenUnLoad {} {
proc onmodifyDensityMoveLoad {} {
proc onmodifyDensityMoveUnLoad {} {
proc onmodifyDensityAddLoad {} {
proc onmodifyDensityAddUnLoad {} {
proc onmodifyDensityDeleteLoad {} {
proc onmodifyDensityDeleteUnLoad {} {
proc onmodifyDensityDEZApply {} {
proc onmodifyDensityDEZCancel {} {
proc onmodifyDensityDEZUnLoad {} {
proc ondeleteDensityDEZLoad {} {
proc ondeleteDensityDEZAfterLoad {} {
proc ondeleteDensityPickFinish {} {
proc ondeleteDensityDEZOK {} {
proc aie_update_mesh_params {type names} {
proc aie_convert_relative {params to_gui {type ""}} {
proc aie_show_params {par {val ""}} {
proc geo_params_edit_allparts {{with_prism 0}} {
proc aie_prism_select_all-none {} {
proc aie_hexa_core_select_all-none {} {
proc aie_params_curve_inflation_parameters {what} {
proc aie_update_mparams_highlight {} {
proc geo_params_show_params {} {
proc geo_params_show_params_done {} {
proc geo_params_edit_allparts_apply {{with_prism 0}} {
proc aie_hexacore_parts_define {} {
proc aie_hexacore_update_params {} {
proc aie_hexacore_parts_apply {} {
proc aie_geo_params_edit_allparts {} {
proc aie_load_prism_params {{from_prj 0}} {
proc aie_mesh_prism_params {} {
proc onadvMeshParamsDEZLoad {} {
proc onadvMeshParamsDEZAfterLoad {} {
proc onadvMeshParamsDEZOK {} {
proc onadvMeshParamsDEZUnLoad {} {
proc aie_prism_update_params {} {
proc aie_edit_prism_parts {} {
proc aie_edit_prism_parts_apply {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_oned.tcl]]
proc ononedLineDEZLoad {} {
proc ononedLineDEZApply {} {
proc ononedWinDEZLoad {} {
proc ononedWinDEZApply {} {
proc aie_new_1d_win {name ax_type {width 500} {height 500} {bg ""} {xtitle ""}} {
proc aie_delete_1d_win {w} {
proc create_xyplot_after_cmd {name w plt vp} {
proc delete_xyplot_after_cmd {w plt vp} {
proc aie_modify_legend {what args} {
proc ononedLegendDEZLoad {} {
proc ononedLegendDEZApply {} {
proc aie_modify_xyplots {what args} {
proc ononedPlotDEZLoad {} {
proc ononedPlotDEZApply {} {
proc ononedAxisADEZLoad {} {
proc ononedAxisADEZApply {} {
proc aie_modify_axis {what x args} {
proc ononedAxisXDEZLoad {} {
proc ononedAxisXDEZApply {} {
proc ononedAxisYDEZLoad {} {
proc ononedAxisYDEZApply {} {
proc aie_oned_iconbar {what args} {
proc aie_oned_tree {what node args} {
proc aie_oned_win_menu {mm theNode win} {
proc aie_oned_plots_menu {mm theNode nodeinfo} {
proc aie_oned_plot_menu {mm theNode plt_id} {
proc aie_oned_legend_menu {mm theNode nodeinfo} {
proc aie_oned_axis_menu {mm theNode c} {
proc aie_oned_axes_menu {mm theNode nodeinfo} {
proc aie_oned_axtitle_menu {mm theNode c} {
proc aie_editnode_onedaxis {theTree theNode nodeinfo} {
proc aie_editnode_onedlegend {theTree theNode nodeinfo} {
proc aie_editnode_onedaxtitle {theTree theNode nodeinfo} {
proc aie_editnode_onedplot {theTree theNode plt_id} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_part_table.tcl]]
proc part_table {w datavar args} {
proc part_table_Browse {w datavar old_in} {
proc aie_update_part_table_value {part param value} {
proc part_table_ResizeColumns {w index width} {
proc part_table_ShowColumns {w datavar index width} {
proc part_table_XScroll {w args} {
proc part_table_YScroll {w args} {
proc part_table_SetArraySilently {datavar index value} {
proc part_table_ReArrange {w datavar col order} {
proc part_table_heading_window {w heading x y} {
proc part_table_ListSortCommand {array method col order a b} {
proc part_table_Destroy {w datavar} {
proc part_table_ArrayTrace {w name1 name2 op} {
proc part_table_Btn1 {w datavar x y {rc ""}} {
proc part_table_prism_law_window {w heading x y} {
proc part_table_KeyPress {w datavar K} {
proc part_table_SetCellBgColor {w index {color ""}} {
proc part_table_Motion1 {w x y} {
proc part_table_Motion {w x y} {
proc aie_part_table_apply {{single_win 0}} {
proc aie_part_table_dismiss {{single_win 0}} {
proc aie_get_prism_grow_law_num {val} {
proc aie_get_prism_grow_law_text {val} {
proc aie_update_part_props {propdim proptype fam newprop} {
proc aie_part_table_sash_Btn1 {w X} {
proc aie_part_table_sash_Motion1 {w xmin xmax X} {
proc aie_part_table_sash_Release1 {w X Xi} {
proc aie_part_table_create {{type meshsizes} {single_win 0}} {
proc aie_part_table_get_data {array {getparts all} {headings all}} {
proc aie_part_table_headings {} {
proc aie_part_table_toggle_inf_params {var} {
proc part_table_ScaleFactor {w datavar} {
proc aie_part_table_setcols {{type meshsizes}} {
proc aie_part_table_setcols_apply {type} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_replay.tcl]]
proc aie_replay_cmd {what args} {
proc replay_after_commands_done {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_smartloops.tcl]]
proc onsmartLoopsDEZLoad {} {
proc onsmartLoopsDEZAfterLoad {} {
proc onsmartLoopsDEZOK {}  {
proc onsmartloopSurfPickLoad {} {
proc onsmartloopSurfPickFinish {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_subset.tcl]]
proc aie_subset_names {} {
proc aie_info_geom_subset {name} {
proc aie_add_to_geom_subset {name} {
proc aie_remove_from_geom_subset {name} {
proc aie_copy_geom_subset {name} {
proc aie_rename_geom_subset {name} {
proc aie_delete_geom_subset {names {could_be_assem 1}} {
proc aie_edit_geom_subset {name} {
proc aie_geom_subset_set_visible {name on} {
proc aie_clear_geom_subset {names} {
proc onCreateGeomSubsetDEZLoad {} {
proc onModifyGeomSubsetDEZLoad {} {
proc aie_subset_add_to_one_side {na el {op ""}} {
proc aie_subset_curvature_spec {num {dez ""}} {}
proc aie_subset_angle_spec {num {dez ""}} {}
proc onCreateGeomSubsetDEZApply {} {
proc onModifyGeomSubsetDEZApply {} {
proc onmodifyGeomSubsetPickFinish {} {
proc onmodifyGeomSubsetSidePickFinish {} {
proc onremoveGeomSubsetPickFinish {} {
proc oncreateGeomSubSelLoad {} {
proc oncreateGeomSubsetPickFinish {} {
proc onmodifyGeomSubSelLoad {} {
proc onCreateGeomSubsetDEZUnload {} {
proc onModifyGeomSubsetDEZUnload {} {
proc GeomSubRestrProc {} {
proc GeomSubRestrEval {} {
proc aie_init_geom_subsets {} {
proc aie_create_mesh_subset {name what} {
proc aie_new_mesh_subset {name} {
proc aie_copy_mesh_subset {name} {
proc aie_rename_mesh_subset {name} {
proc aie_delete_mesh_subset {names} {
proc aie_edit_mesh_subset {name} {
proc aie_mesh_subset_set_visible {name on} {
proc aie_clear_mesh_subset {names} {
proc aie_remove_from_mesh_subset {name} {
proc aie_add_to_mesh_subset {name} {
proc aie_break_by_part_mesh_subset {name} {
proc aie_break_by_connectivity_mesh_subset {name} {
proc aie_info_mesh_subset {name} {
proc aie_promote_to_elset_mesh_subset {name} {
proc aie_promote_to_nset_mesh_subset {name} {
proc aie_mesh_subset_dezbut_clear {} {
proc aie_mesh_subset_dezbut_reset {} {
proc aie_mesh_subset_dezbut_active {} {
proc aie_mesh_subset_worst_element {metric {parts ""} {types ""}} {
proc onCreateMeshSubsetDEZLoad {} {
proc onModifyMeshSubsetDEZLoad {} {
proc onCreateMeshSubsetDEZApply {} {
proc onModifyMeshSubsetDEZApply {} {
proc aie_subset_mesh_shading {{shade ""}} {
proc onmodifyMeshSubsetPickFinish {} {
proc onremoveMeshSubsetPickFinish {} {
proc onmodifyMeshSubsetResPickFinish {} {
proc onmodifyMeshSubSelLoad {} {
proc onremoveMeshSubSelLoad {} {
proc onmodifyMeshSubRestrLoad {} {
proc aie_mesh_subset_scan_plane_incr {i j k} {
proc oncreateMeshSubSelLoad {} {
proc oncreateMeshSubsetPickFinish {} {
proc onmodifyMeshSubSelLoad {} {
proc onmodifyMeshSubsetPickFinish {} {
proc onCreateMeshSubsetDEZUnload {} {
proc onModifyMeshSubsetDEZUnload {} {
proc aie_init_mesh_subsets {} {
proc aie_use_scheme_input {numbers} {
proc aie_mesh_subset_get_element_type {num {extern 0}} {
proc aie_mesh_subset_remove_dim {sub dim} {
proc aie_mesh_subset_remove_parts {sub parts types} {
proc aie_mesh_subset_update_elements {sub elems types parts dim {extern 0}} {
proc aie_subset_put_in_tree {type name} {
proc aie_edit_block_subset {name} {
proc oncreateBlockSubsetDEZLoad {} {
proc oncreateBlockSubsetDEZAfterLoad {} {
proc aie_hex_subset_trace_stype {name element op} {
proc oncreateBlockSubsetDEZApply {} {
proc oncreateBlockSubsetDEZUnLoad {} {
proc aie_rename_block_subset {name} {
proc aie_delete_block_subset {name} {
proc onModifyBlockSubsetDEZLoad {} {
proc onModifyBlockSubsetDEZAfterLoad {} {
proc onModifyBlockSubsetDEZApply {} {
proc aie_info_block_subset {name} {
proc aie_hex_display_named_selection_subset {{what ""}} {
proc aie_init_hex_subsets {} {
proc aie_geom_subsets_into_parts {} {
proc aie_hex_get_display_block_subsets {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_tables.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_tdv.tcl]]
proc aie_refresh_screen {} {
proc aie_unset_all_selection_modes {} {
proc onreplicateDEZLoad {} {
proc onreplicateDEZApply {} {
proc aie_symmetry_view_fm {what args} {
proc aie_dlg_get_plane_coef {w title text defaults {geo +400+400}} {
proc aie_set_grad_bg {t_or_b} {
proc aie_set_background {{t_or_b top}} {
proc aie_dual_monitors {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_translators.tcl]]
proc aie_geo_import_mesh {files {segment 1}} {
proc aie_geo_import_from_mesh {type {infiles ""} {suffix *} {multiple 0}} {
proc aie_geo_import_esf {} {
proc aie_geo_import_parasolid {} {
proc aie_geo_import_parameters {} {
proc aie_geo_map_tetin_global_parameters {{infile ""}} {
proc ongeoImportCatiaDEZLoad {} {
proc ongeoImportCatiaDEZAfterLoad {} {
proc aie_geo_trace_import_catia_filter {name element op} {
proc aie_get_catia4_filter_list {} {
proc ongeoImportCatiaDEZOK {} {
proc ongeoImportCatiaDEZCancel {} {
proc ongeoImportGemsDEZLoad {} {
proc ongeoImportGemsDEZAfterLoad {} {
proc ongeoImportGemsDEZOK {} {
proc ongeoImportStepDEZLoad {} {
proc ongeoImportStepDEZAfterLoad {} {
proc ongeoImportStepDEZOK {} {
proc ongeoImportIgesDEZLoad {} {
proc ongeoImportIgesDEZOK {} {
proc ongeoImportProeDEZLoad {} {
proc ongeoImportProeDEZOK {} {
proc ongeoImportUGDEZLoad {} {
proc ongeoImportUGDEZAfterLoad {} {
proc ongeoImportUGDEZOK {} {
proc aie_mesh_import_from_result {source {source_label ""} {infile ""} {startup_args ""}} {
proc aie_mesh_check_reader_setup { {version aie} {res_dir ""} } {
proc aie_mesh_import {source {opt ""}} {
proc aie_setup_acusolve { {args ""} } {
proc acu_ok_dir_func { {dir ""} } {
proc acu_dir_func { {dir ""} } {
proc aie_acu_ok_dir_func { {dir ""} } {
proc aie_acu_dir_func { {dir ""} } {
proc acu_prb_list {} {
proc acu_run_list {} {
proc acu_set_prb_list {} {
proc acu_set_run_list {} {
proc ongeoExportIgesDEZLoad {} {
proc ongeoExportIgesDEZOK {} {
proc geoExportIgesDoit {} {
proc geoExportDDNDoit {} {
proc geoExportPsDoit {} {
proc geoExportStepDoit {} {
proc geoExportSTLDoit {} {
proc geoExportIgesDEZDoit {} {
proc geoExportStepDEZDoit {} {
proc aie_nastran_file_export_doit {} {
proc aie_import_nastran_new {} {
proc onimportNastranDEZLoad {} {
proc onimportNastranDEZApply { } {
proc onimportLsdynaDEZLoad {} {
proc onimportLsdynaDEZApply { } {
proc onimportUH3DMeshFileDEZLoad {} {
proc onimportUH3DMeshFileDEZApply { } {
proc aie_setup_uh3d { {args ""} } {
proc ongeoImportBGPDEZLoad {} {
proc ongeoImportBGPDEZAfterLoad {} {
proc ongeoImportBGPDEZOK {} {
proc ongeoImport3DMDEZLoad {} {
proc ongeoImport3DMDEZAfterLoad {} {
proc ongeoImport3DMDEZOK {} {
proc ongeoExport3DMDEZLoad {} {
proc ongeoExport3DMDEZAfterLoad {} {
proc ongeoExport3DMDEZOK {} {
proc ongeoImportINPUTDEZLoad {} {
proc ongeoImportINPUTDEZAfterLoad {} {
proc ongeoImportINPUTDEZOK {} {
proc command_set_text {args} {
proc set_title {args} {
proc aie_wb_load_import_wb_readers_gui {} {
proc onsetImportModelOptionsDEZLoad {} {
proc onsetImportModelOptionsDEZAfterLoad {} {
proc onsetImportModelOptionsDEZApply {} {
proc ongeoImportWBDEZLoad {} {
proc ongeoImportWBDEZAfterLoad {} {
proc aie_wb_set_import_defaults {} {
proc aie_wb_reset_import_defaults {} {
proc aie_wb_trace_file_to_convert {{name ""} {element ""} {op ""}} {
proc aie_wb_trace_update_pmdb_state {{name ""} {element ""} {op ""}} {
proc aie_wb_trace_update_gui_state {{name ""} {element ""} {op ""}} {
proc aie_wb_set_empty_solid_state {on} {
proc ongeoImportWBDEZOK {} {
proc aie_wb_import_parameters {file} {
proc aie_wb_import_part_mesh_params {{what ""}} {
proc ongeoImportWBDEZUnLoad {} {
proc ongeoImportParasolidDEZLoad {} {
proc ongeoImportParasolidDEZAfterLoad {} {
proc ongeoImportParasolidDEZOK {} {
proc ongeoImportIDIDEZLoad {} {
proc ongeoImportIDIDEZAfterLoad {} {
proc ongeoImportIDIDEZOK {} {
proc aie_fe_modeler_file_export {} {
proc onwriteFeModelerDEZAfterLoad {} {
proc aie_check_fe_modeler_shell_thicknesses {} {
proc onwriteFeModelerDEZApply {} {
proc aie_write_fe_modeler_file {} {
proc aie_setup_cgns { {args ""} } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_tree.tcl]]
proc aie_tree { action {type ""} {args ""}} {
proc ::AIEnv::GUIManagement::Tree::treeInit { theTree } {
proc ::AIEnv::GUIManagement::Tree::delayedInsert {pos parent name args} {
proc ::AIEnv::GUIManagement::Tree::doInsert {pos parent name args} {
proc ::AIEnv::GUIManagement::Tree::doInsertIfNeeded {name} {
proc ::AIEnv::GUIManagement::Tree::doInsertAll {} {
proc ::AIEnv::GUIManagement::Tree::initModel {win} {
proc ::AIEnv::GUIManagement::Tree::setupBindings {} {
proc ::AIEnv::GUIManagement::Tree::CanDrag {xtree node {topl ""}} {
proc ::AIEnv::GUIManagement::Tree::CanDrop {xtree dummy droploc op dtype node} {
proc ::AIEnv::GUIManagement::Tree::DoDrop {xtree dummy droploc op dtype dummynode} {
proc ::AIEnv::GUIManagement::Tree::getSelection {what} {
proc ::AIEnv::GUIManagement::Tree::clear {what} {
proc ::AIEnv::GUIManagement::Tree::AddTopo {name {vis 0}} {
proc ::AIEnv::GUIManagement::Tree::addMultipleParam {par name tn} {
proc ::AIEnv::GUIManagement::Tree::deleteMultipleParam {type name} {
proc ::AIEnv::GUIManagement::Tree::renameMultipleParam {type name newname} {
proc ::AIEnv::GUIManagement::Tree::treeHighlight {on image node} {
proc ::AIEnv::GUIManagement::Tree::CreateVisibilityFunctionMap {} {
proc ::AIEnv::GUIManagement::Tree::treeSelect {image theNode} {
proc ::AIEnv::GUIManagement::Tree::treeShiftSelect {image theNode} {
proc ::AIEnv::GUIManagement::Tree::treeControlSelect {image theNode} {
proc ::AIEnv::GUIManagement::Tree::treeDoubleClick {image theNode} {
proc ::AIEnv::GUIManagement::Tree::ToggleGeoVisible {geoType treeNode {make_on ""}} {
proc ::AIEnv::GUIManagement::Tree::ToggleMeshVisible {treeNode} {
proc ::AIEnv::GUIManagement::Tree::ToggleUnsMeshVisible {MeshType treeNode {on ""}} {
proc ::AIEnv::GUIManagement::Tree::SaveVisibility {} {
proc ::AIEnv::GUIManagement::Tree::RestoreVisibility {} {
proc ::AIEnv::GUIManagement::Tree::ToggleStrMeshVisibility {type ent {on ""}} {
proc ::AIEnv::GUIManagement::Tree::ToggleBlockingVisibility {type ent {on ""}} {
proc ::AIEnv::GUIManagement::Tree::GetBlockingSubsetVisibility {on} {
proc ::AIEnv::GUIManagement::Tree::IsBlockingSubsetVisible {subset} {
proc ::AIEnv::GUIManagement::Tree::UpdateBlockAncestors {nname} {
proc ::AIEnv::GUIManagement::Tree::ToggleTopoVisibility {type name {on ""}} {
proc ::AIEnv::GUIManagement::Tree::SetPartVisibleIcons {} {
proc ::AIEnv::GUIManagement::Tree::UpdateVisFlag {Node} {
proc ::AIEnv::GUIManagement::Tree::UpdateAncestors {Node} {
proc ::AIEnv::GUIManagement::Tree::OnNodeExpand {NodeID} {
proc ::AIEnv::GUIManagement::Tree::NodeVisibility {node} {
proc ::AIEnv::GUIManagement::Tree::GetVisibility { Type } {
proc ::AIEnv::GUIManagement::Tree::ExpandGeometry {} {
proc ::AIEnv::GUIManagement::Tree::ExpandMesh {} {
proc ::AIEnv::GUIManagement::Tree::treeRightClick { X Y image theNode } {
proc ::AIEnv::GUIManagement::Tree::treeShiftClick {node} {
proc ::AIEnv::GUIManagement::Tree::removeSelectedParent {node} {
proc ::AIEnv::GUIManagement::Tree::removeSelectedChildren {node} {
proc ::AIEnv::GUIManagement::Tree::treeControlClick {node} {
proc ::AIEnv::GUIManagement::Tree::treeAdd {type args} {
proc ::AIEnv::GUIManagement::Tree::treeUpdateFamilies {} {
proc ::AIEnv::GUIManagement::Tree::treeDelete {node args} {
proc ::AIEnv::GUIManagement::Tree::treeClear {} {
proc ::AIEnv::GUIManagement::Tree::treeCollapse {} {
proc ::AIEnv::GUIManagement::Tree::treeOpen {node} {
proc ::AIEnv::GUIManagement::Tree::treeClose {node} {
proc ::AIEnv::GUIManagement::Tree::ShowNames {type} {
proc ::AIEnv::GUIManagement::Tree::ShowWide {type} {
proc ::AIEnv::GUIManagement::Tree::ShowDormant {type} {
proc ::AIEnv::GUIManagement::Tree::ShowProtectPoints {} {
proc ::AIEnv::GUIManagement::Tree::ShowProtectCurves {} {
proc ::AIEnv::GUIManagement::Tree::ShowHardSizeCurves {} {
proc ::AIEnv::GUIManagement::Tree::ShowCurveAttachment {attach} {
proc ::AIEnv::GUIManagement::Tree::CurveColorByCount {} {
proc ::AIEnv::GUIManagement::Tree::CurveComposite {} {
proc ::AIEnv::GUIManagement::Tree::ShowCurveQuadSizes {} {
proc ::AIEnv::GUIManagement::Tree::ShowCurveQuadCount {} {
proc ::AIEnv::GUIManagement::Tree::ShowCurveTetraSizes {} {
proc ::AIEnv::GUIManagement::Tree::ShowCurveHexaSizes {} {
proc ::AIEnv::GUIManagement::Tree::ShowDensityTetraSizes {} {
proc ::AIEnv::GUIManagement::Tree::ShowSurfaceNormalsColor {} {
proc ::AIEnv::GUIManagement::Tree::ShowSurfaceNormals {} {
proc ::AIEnv::GUIManagement::Tree::ShowThickness {} {
proc ::AIEnv::GUIManagement::Tree::ShowOrientation {} {
proc ::AIEnv::GUIManagement::Tree::ShowBodySurfs {} {
proc ::AIEnv::GUIManagement::Tree::ShowShrink {} {
proc ::AIEnv::GUIManagement::Tree::ShowNodes {} {
proc ::AIEnv::GUIManagement::Tree::ShowFaceNormals {} {
proc ::AIEnv::GUIManagement::Tree::ShowNormalsColored {} {
proc ::AIEnv::GUIManagement::Tree::ShowCutPlanes {} {    
proc ::AIEnv::GUIManagement::Tree::ShowInfo {type} {
proc ::AIEnv::GUIManagement::Tree::PutMaterials {mats clear} {
proc ::AIEnv::GUIManagement::Tree::DeleteMaterials {names} {
proc ::AIEnv::GUIManagement::Tree::RenameMaterial {from to} {
proc ::AIEnv::GUIManagement::Tree::CopyMaterial {from to} {
proc ::AIEnv::GUIManagement::Tree::PutMaterialTbls {tbls clear} {
proc ::AIEnv::GUIManagement::Tree::DeleteMaterialTbl {names} {
proc ::AIEnv::GUIManagement::Tree::RenameMaterialTbl {from to} {
proc ::AIEnv::GUIManagement::Tree::PutParams {params clear} {
proc ::AIEnv::GUIManagement::Tree::DeleteParams {names} {
proc ::AIEnv::GUIManagement::Tree::RenameParams {from to} {
proc ::AIEnv::GUIManagement::Tree::PutLsdynaParams {params clear} {
proc ::AIEnv::GUIManagement::Tree::DeleteLsdynaParams {names} {
proc ::AIEnv::GUIManagement::Tree::RenameLsdynaParams {from to} {
proc ::AIEnv::GUIManagement::Tree::PutLCS {lcs clear} {
proc ::AIEnv::GUIManagement::Tree::DeleteLCS {names} {
proc ::AIEnv::GUIManagement::Tree::RenameLCS {from to} {
proc ::AIEnv::GUIManagement::Tree::PutSubcases {scs clear} {
proc ::AIEnv::GUIManagement::Tree::DeleteSubcases {names} {
proc ::AIEnv::GUIManagement::Tree::SortChildren {par} {
proc ::AIEnv::GUIManagement::Tree::GroupExists {type name} {
proc ::AIEnv::GUIManagement::Tree::AddGroup {type name {vis 1} {open 0} {color ""} {index end}} {
proc ::AIEnv::GUIManagement::Tree::AddPartGroup {name} {
proc ::AIEnv::GUIManagement::Tree::NewPart {part} {
proc ::AIEnv::GUIManagement::Tree::RefreshPartVisibility {} {
proc ::AIEnv::GUIManagement::Tree::PartBCExists {bcclass part} {
proc ::AIEnv::GUIManagement::Tree::AddPartBC {bcclass part {vis 0} {open 0} {color "black"}} {
proc ::AIEnv::GUIManagement::Tree::AddPartBCType {type part vis} {
proc ::AIEnv::GUIManagement::Tree::ChangeColor {type name color} {
proc ::AIEnv::GUIManagement::Tree::GetColor {type name} {
proc ::AIEnv::GUIManagement::Tree::DeleteGroup {type name empty_parents} {
proc ::AIEnv::GUIManagement::Tree::RenameGroup {type old new {vis ""}} {
proc ::AIEnv::GUIManagement::Tree::AssemblyChildren {type group} {
proc ::AIEnv::GUIManagement::Tree::DescendantsWithData {tree parent pat} {
proc ::AIEnv::GUIManagement::Tree::GetChildren {par} {
proc ::AIEnv::GUIManagement::Tree::Parts {{what show} {parts ""}} {
proc ::AIEnv::GUIManagement::Tree::ToggleGroupVisibility {type name {on ""} {up_a 0}} {
proc ::AIEnv::GUIManagement::Tree::RefreshParts {} {
proc ::AIEnv::GUIManagement::Tree::NodeVisibleStatus {type name {value ""} {defstatus -1}} {
proc ::AIEnv::GUIManagement::Tree::UpdateGeoVisibility {{type all}} {
proc ::AIEnv::GUIManagement::Tree::UpdateGeomNodes {} {
proc ::AIEnv::GUIManagement::Tree::UpdateMeshNodes {} {
proc ::AIEnv::GUIManagement::Tree::UpdateBlockingNodes {} {
proc ::AIEnv::GUIManagement::Tree::UpdateUnsMeshVisibility {{type all}} {
proc ::AIEnv::GUIManagement::Tree::UpdateStrMeshVisibility {} {
proc ::AIEnv::GUIManagement::Tree::UpdateBlockingVisibility {} {
proc ::AIEnv::GUIManagement::Tree::UpdateElemPropNodes {{on 0}} {
proc ::AIEnv::GUIManagement::Tree::ShowGeometry {vis} {
proc ::AIEnv::GUIManagement::Tree::ShowMesh {vis} {
proc ::AIEnv::GUIManagement::Tree::ShowLCS {image node} {
proc ::AIEnv::GUIManagement::Tree::ShowGroup {types treeNode {on ""}} {
proc ::AIEnv::GUIManagement::Tree::GetAllChildren {par} {
proc ::AIEnv::GUIManagement::Tree::SaveTreeStatus {} {
proc ::AIEnv::GUIManagement::Tree::RestoreTreeStatus {} {
proc ::AIEnv::GUIManagement::Tree::DeleteEmptyGroup {type} {
proc ::AIEnv::GUIManagement::Tree::GetParent {child} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_utils.tcl]]
proc aie_view {type} {
proc aie_toggle_display_origin {} {
proc aie_toggle_tdv_axes {} {
proc aie_updateGeoVis {{type all} {update 1} {force 0} {init 1}} {
proc aie_initGeoVis {{home ""} {turn_off ""} {init 0}} {
proc aie_updateBlockVis {{reset 0}} {
proc aie_update_visible {{turn_off_cut 1}} {
proc aie_disp_toggle_solid {} {
proc aie_changeSurfStyle {{style ""}} {
proc aie_change_body_style {} {
proc aie_change_grey_scale {} {
proc unused__aie_show_params {what type} {
proc domain_newest_file {} {
proc aie_listElementTypes {{type all}} {
proc aie_element_type {uns_type} {
proc aie_updateMeshCouplingsVis {} {
proc aie_updateMeshVis {{type all} {update 1}} {
proc aie_changeMeshDisplay {{option ""} {value ""} {force 0}} {
proc aie_warn_too_many_volume_elements {type parts} {
proc aie_histo_warn_too_many_elements {} {
proc aie_set_color_by_quality_contrast {} {
proc aie_getBatchMeshDisplay {all_updates} {
proc aie_changeStrSharedDisplay {what} {
proc aie_getBatchGeomDisplay {} {
proc aie_viewInfo {type {short 0}} {
proc aie_show_curve_direction {} {
proc aie_test_histogram {} {
proc aie_clear_plot_window {} {
proc aie_make_histogram {title xvals yvals {ylimit 0} {labels ""} {args ""}} {
proc aie_redraw_histogram {} {
proc aie_delete_histogram {{delete 0}} {
proc aie_smooth_update_histogram {{title "Element quality"} {nbars ""} \
proc aie_diag_color_by_quality_update {} {
proc aie_smooth_clear_histogram {} {
proc smooth_show_elements {w intervals args solid show color_by_quality {crit ""} {min ""} {max ""}} {
proc aie_smooth_subset_histogram {} {
proc aie_histo_show_bad_elements {{show 1} {solid 1} {color_by_quality 1}} {
proc aie_histo_delete_bad_elements {} {    
proc aie_delete_colorband {{reset 0}} {
proc aie_get_max_possible_colorband {} {
proc aie_disable_colorband {} {
proc aie_create_colorband {{min 0.0} {max 1.0} {xvals ""} {color_by_quality 1}} {  
proc aie_set_bar_colors {{reverse 0}} {  
proc aie_get_materials {} {
proc aie_build_volumes {} {
proc aie_show_materials {} {
proc aie_delete_materials {} {
proc aie_start_visual3p {v3opts} {
proc med_file_select {what new {def ""} {mess ""} {multiple 0}} {
proc file_selection {args} {
proc aie_product_info {} {
proc aie_customer_number {} {
proc onmpegDEZLoad {} {
proc onmpegDEZOK {} {
proc ongifaDEZOK {} {
proc onhardcopyDEZLoad {} {
proc onhardcopyDEZOK {} {
proc aie_change_workdir {} {
proc onsetSelectDEZLoad {} {
proc onsetSelectDEZOK {} {
proc onsetDisplayDEZLoad {} {
proc onsetDisplayDEZAfterLoad {} {
proc onsetDisplayDEZUnLoad {} {
proc aie_trace_auto_simplify_geom {name element op} {
proc onsetDisplayDEZOK {} {
proc onsetGeneralDEZLoad {} {
proc onsetGeneralDEZAfterLoad {} {
proc aie_trace_n_processors {{name ""} {element ""} {op ""}} {
proc onsetGeneralDEZOK {} {
proc onsetGeneralDEZUnLoad {} {
proc onsetMemoryDEZLoad {} {
proc onsetMemoryDEZOK {} {
proc onsetRemoteDEZLoad {} {
proc onsetRemoteDEZOK {} {
proc onsetSpeedDEZLoad {} {
proc onsetSpeedDEZOK {} {
proc onsetPrismMeshOptsDEZLoad {} {
proc onsetPrismMeshOptsDEZOK {} {
proc onsetQualityInfoDEZLoad {} {
proc onsetQualityInfoDEZOK {} {
proc onsetDetailInfoDEZLoad {} {
proc onsetDetailInfoDEZOK {} {
proc aie_mouse_bindings {} {
proc aie_set_options {} {
proc aie_get_tree_display_options {type} {
proc aie_reset_project_defaults {} {
proc aie_restore_project_defaults {} {
proc aie_save_hexa_controls {file} {
proc aie_undo {{redo 0}} {
proc aie_after_undo {} {
proc aie_get_non_empty_parts {} {
proc aie_undo_clear {} {
proc aie_clear_dez {} {
proc aie_reset_geo_selected {} {
proc aie_print_file {file} {
proc aie_print_file_doit {} {
proc aie_set_title {string} {
proc aie_measure_distance {} {
proc aie_measure_angle {} {
proc aie_location {} { med_check_location }
proc do_center {args} {}
proc aie_thickness {what {from_solid 0} {parts ""} } {
proc aie_update_shell_thicknesses {{part_names ""} {m_thick ""}} {
proc aie_update_icons {{type all}} {
proc aie_update_tabs {} {
proc aie_sync_tabs_viewer {tab} {
proc aie_sync_tabs_viewer {tab} {
proc aie_renumber_everything {} {
proc ai_shade_all {{type full} {flat 0}} {
proc ai_wire_all {{type full}} {
proc onmeshReportDEZLoad {} {
proc onmeshReportDEZAfterLoad {} {
proc aie_trace_meshReportMeshTypes {{name ""} {element ""} {op ""}} {
proc onmeshReportDEZApply {} {
proc onmeshReportDEZUnLoad {} {
proc onsetProductDEZLoad {} {
proc onsetProductDEZOK {} {
proc aie_edit_array {arr {action ""}} {
proc aie_click_button {{mess ""}} {
proc onsetBackgroundStyleDEZLoad {} {
proc onsetBackgroundStyleDEZApply {} {
proc onsetLightingDEZLoad {} {
proc onsetLightingDEZApply {} {
proc aie_set_lighting {what {w ""} args} {
proc aie_reset_default_lighting {} {
proc onsetMouseBindingDEZLoad {} {
proc onsetMouseBindingDEZApply {} {
proc aie_gsview_menu {mm aieTree theNode nodename} {
proc aie_gsview_cmd {tree node what args} {
proc test_aie_gsview_model {} {
proc aie_geo_move_from_orfn_non_material {} {
proc aie_delete_any_space {text {case ""}} {
proc aie_get_arc_data {crv {method arc_ctr_rad}} {
proc aie_get_srf_data {srf vec {add_uv 0}} {
proc aie_run_frontal {} {
proc aie_valid_name {name {no_colon 0}} {
proc aie_get_valid_name {name} {
proc aie_reset_picker {dez picker args} {
proc aie_show_name {item on} {
proc aie_set_crvs_connected {crvs} {
proc aie_select_nodes {{n 0}} {
proc aie_select_vertex {{n 0}} {
proc aie_apply_other_dez {dez args} {
proc aie_remove_header_lines_tetinfile {} {
proc aie_setup_domain_form_list {} {
proc aie_domain_form_done {w} {
proc aie_domain_form_update_number_list {w num} {
proc aie_setup_domain_form_scanplanes {} {
proc aie_scanplanes_trace_cur {name element op} {
proc aie_domain_scanplanes_form_done {} {
proc aie_geom_placement {type names placement args} {
proc aie_titleFrame_B3 {{dez ""} {proc aie_pop_title}} {
proc aie_pop_inherit {} {
proc aie_pop_title {x y args} {
proc status_message {txt {fopts ""} {lopts ""}} {		
proc aie_on_vid_mode {} {
proc aie_check_inherit_fam {{fam ""} {type ""} {list ""}} {
proc onGOptions_PartNameModify {dez val} {
proc onsetGOptionsDEZLoad {} {
proc onsetGOptionsDEZOK {} {
proc aie_set_opt_inherit {} {
proc onsetModelOptionsDEZLoad {} {
proc onsetModelOptionsDEZOK {} {
proc aie_compare_value {v txt} {
proc aie_delAllDorm {} {
proc aie_default_part_name {{part ""}} {
proc aie_geo_set_part_name {{part ""}} {
proc aie_default_topo_tolerance {{option ""} {value 0}} {
proc aie_solver_setup {} { 
proc onsetSolverSettingsDEZLoad {} {
proc onsetSolverSettingsDEZOK {} {
proc aie_outputtab_update {} {
proc onsetSolverDEZLoad {} {
proc onsetSolverDEZAfterLoad {} {
proc onsetSolverDEZOK {} {
proc aie_solution_select {} {
proc onshellDiagnosticsDEZLoad {} {
proc onshellDiagnosticsDEZAfterLoad {} {
proc onshellDiagnosticsDEZUnLoad {} {
proc aie_shell_trace_show_type {{name ""} {element ""} {op ""}} {
proc onshellDiagnosticsDEZOK {} {
proc aie_shell_show_diagnostics {} {
proc aie_createShellDiagnostics {{from_dez 0}} {
proc aie_updateShellDiagnostics {{dez 0}} {
proc aie_existsShellDiagnostics {} {
proc aie_displayShellDiagnostics {on} {
proc aie_deleteShellDiagnostics {{reset 0}} {
proc aie_active_dez {} {
proc aie_update_dez_onerror {} {
proc aie_update_dez_value {dez param value} {
proc aie_geo_set_grey {what on} {
proc aie_gui_get {var} {
proc aie_temporary_reset_record {{how resume}} {
proc aie_val_calc_dialog {} {
proc aie_unset_global {name {field ""}} {
proc aie_set_global {name value {field ""}} {
proc aie_get_global {name {field ""}} {
proc aie_get_global_array_names {name} {
proc aie_get_global_array {name} {
proc aie_update_gui {{what ""}} {
proc aie_mp12_create_temporary_curve {} {
proc aie_mp12_boundary_curve {what {srf ""}} {
proc aie_mp12_seg_surf_by_screen {dist} {
proc aie_mp12_repaire_seg_surf {part name {keep_old 0}} {
proc aie_mp12_set_facets_part_in_Z_dir {part srfs} {
proc aie_mp12_clean {{on 0}} {
proc aie_mp12_set_lcs {{how use_if_exists}} {
proc aie_mp12_set_tag_on_faceted {{tag geo_select_segment} {fsrfs ""}} {
proc aie_mp12_set_screen_lcs {name orig} {
proc aie_mp12_create_2_temporary_curves {} { 
proc aie_mp12_create_more_locations {crv1 crv2 par factors} {
proc aie_mp12_show_presurface {{part ""} {name mp12_tmp_presrf}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_v3p.tcl]]
proc aie_v3dset_win_menu {mm theNode win} {
proc aie_v3dset_tree {what node args} {
proc aie_add_setup_set {args} {
proc aie_edit_setup_sets {what args} {
proc aie_delete_setup_set {args} {
proc aie_v3p_setup_sets {args} {
proc aie_select_dataform {new args} {
proc aie_start_dataform {dform} {
proc onv3StartupDEZLoad {} {
proc aie_start_reader {args} {
proc onv3StartupDEZOK {} {
proc aie_setup_v3p_first {args} {
   proc setup_oned_mg {} { }
   proc setup_anno_mg {} { }
proc aie_v3p_startup_cmd {args} {
proc aie_v3p_startup {what args} {
proc aie_update_v3gui_states {} {
proc aie_v3p_iconbar {what args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_v3pdynamic.tcl]]
proc aie_v3_dynamic_surface {what args} {
proc aie_update_dynamic_scan {i args} {
proc onv3DynamicIsoDEZApply {} {
proc onv3DynamicIsoDEZLoad {} {
proc onV3DynamicIsoVarModify {args} {
proc aie_v3_dynamic_iso {what args} {
proc onv3DynamicCutPDEZApply {} {
proc onv3DynamicCutPDEZLoad {} {
proc onv3DynamicCutSXLoad {} {
proc onv3DynamicCutSYLoad {} {
proc onv3DynamicCutSZLoad {} {
proc onv3DynamicCutITLoad {} {
proc onv3DynamicCut3PLoad {} {
proc aie_v3_dynamic_cut {what args} {
proc onv3SurfThrPlaneDEZLoad {} {
proc onv3SurfThrPlaneDEZApply {} {
proc onv3SurfThrPlaneDEZOK {} {
proc onv3SurfThrPlaneDEZCancel {} {
proc onv3SurfThrCutSXLoad {} {
proc onv3SurfThrCutSYLoad {} {
proc onv3SurfThrCutSZLoad {} {
proc onv3SurfThrCut3PLoad {} {
proc onv3SurfThrCutITLoad {} {
proc aie_v3p_surfthr_cmd {what args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_v3pmisc.tcl]]
proc aie_v3p_interp_select {what what1""} {
proc onv3InterpFileDEZLoad {} {
proc onv3InterpFileDEZApply {} {
proc onCreateAnsComModify {dez val} {
proc load_v3InterpFileDEZ {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_v3pstr.tcl]]
proc onv3CreateStrmSfEXGLoad {} {
proc onv3CreateStrmDEZLoad {} {
proc onv3CreateStrmDEZApply {} {
proc aie_create_stream {what dez_cmd args} {
proc onv3CreateStrm2dDEZApply {} {
proc onv3CreateStrmsfDEZApply {} {
proc onv3CreateStrm2dDEZLoad {} {
proc onv3CreateStrmsfDEZLoad {} {
proc onv3StrmPropertiesDEZLoad {} {
proc aie_edit_v3strmgrp {name} {
proc aie_set_v3strmgrp_v3dset {theTree theNode} {
proc aie_toggle_v3strmgrp {theTree theNode} {
proc aie_toggle_v3strmgrp_root {theTree theNode} {
proc aie_v3strmgrp_root_menu {mm theTree theNode} {
proc aie_v3strmgrp_menu {mm theTree theNode id} {
proc aie_v3strmgrp_tree {what node id args} {
proc aie_modify_streams {what args} {
proc onv3StrmPropertiesDEZApply {} {
proc aie_setup_animate {what args} {
proc aie_update_animate {what args} {
proc onv3AnimateDEZLoad {} {
proc onv3AnimateDEZApply {} {
proc onv3AnimateDEZCancel {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_v3psurf.tcl]]
proc onv3ProbePtDEZOK {} {
proc onv3ProbePtDEZLoad {} {
proc onv3ProbePtDEZCancel {} {
proc aie_surf_probe_file {args} {
proc aie_v3p_surfppts {what args} {
proc aie_v3surfgrp_opts {what args} {
proc onv3SurfacePropertyDEZApply {} {
proc onv3SurfacePropertyDEZLoad {} {
proc aie_v3p_surfvars {what c args} {
proc onv3SurfVarSVDEZLoad {} {
proc onV3SurfVarSGNModify {args} {
proc onV3SurfVarSLNModify {args} {
proc onV3SurfVarVGNModify {args} {
proc onV3SurfVarVLNModify {args} {
proc onv3SurfSVarDEZLoad {} {
proc onV3SurfSVarGNModify {args} {
proc onV3SurfSVarLNModify {args} {
proc onv3SurfVVarDEZLoad {} {
proc onV3SurfVVarGNModify {args} {
proc onV3SurfVVarLNModify {args} {
proc aie_update_integral {args} {
proc onv3SurfIntegalDEZLoad {} {
proc aie_update_surface_flow {what args} {
proc onv3SurfFlowDEZLoad {} {
proc onv3ImportSfDEZLoad {} {
proc onv3ImportSfDEZApply {} {
proc onv3ParamSfSphLoad {} {
proc onv3ParamSfCylLoad {} {
proc onv3ParamSfQuadLoad {} {
proc onv3ParamSfConeLoad {} {
proc onv3ParamSfEqLoad {} {
proc onv3TetinSfLoad {} {
proc onv3TetinSfFamLoad {} {
proc onv3TetinSfSelLoad {} {
proc onv3TetinSfResetLoad {} {
proc aie_v3p_tetin_cmd {what args} {
proc onv3LoadPtsSfLoad {} {
proc onv3LoadDomainSfLoad {} {
proc aie_v3p_user_surf {what args} {
proc aie_edit_v3surface {name} {
proc aie_edit_v3surfgrp {name} {
proc aie_edit_v3surfgrp_root {name} {
proc aie_toggle_v3surfgrp_root {theTree theNode} {
proc aie_toggle_v3surfgrp {theTree theNode} {
proc aie_toggle_v3surface {theTree theNode} {
proc aie_set_v3surfgrp_v3dset {theTree theNode} {
proc aie_v3surfgrp_menu {mm theTree theNode} {
proc aie_v3surfgrp_root_menu {mm theTree theNode} {
proc aie_v3surfgrp_cycle_menu {mm theTree theNode} {
proc aie_v3surface_menu {mm theTree theNode} {
proc aie_v3surfgrp_tree {what node args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_v3pts.tcl]]
proc aie_set_v3pts_v3dset {theTree theNode} {
proc aie_toggle_v3pts_root {theTree theNode args} {
proc aie_toggle_v3pts {theTree theNode args} {
proc aie_v3pts_rootmenu {mm theTree theNode id} {
proc aie_v3pts_menu {mm theTree theNode id} {
proc aie_v3pts_tree {what node id args} {
proc onv3SaveAsDEZLoad {} {
proc onv3SaveAsDEZApply {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_v3pvar.tcl]]
proc aie_calc_panel {cmd dtype var {dez_cmd ""}} {
proc onv3DefSVarDEZLoad {} {
proc onv3DefSVarDEZApply {} {
proc onv3DefSVarDEZCancel {} {
proc onv3DefVVarDEZLoad {} {
proc onv3DefVVarDEZApply {} {
proc onv3DefVVarDEZCancel {} {
proc aie_v3p_defvar {dez_cmd what args} {
proc onv3VarsDEZLoad {} {
proc onv3VarsDEZApply {} {
proc onV3SVarMenuModify {args} {
proc onV3VVarMenuModify {args} {
proc aie_v3p_variables {what args} {
proc onv3VarsGDEZLoad {} {
proc onv3VarsGDEZApply {} {
proc onv3VarsGDEZCancel {} {
proc onv3SelectVarsLoad {} {
proc onv3DefSVarLoad {} {
proc onv3DefVVarLoad {} {
proc onV3TransTimeStepModify {args} {
proc onV3TransTimeIDEZLoad {} {
proc V3TransTimePDEZLoad {} {
proc aie_v3p_update_timesteps {what args} {
proc aie_v3p_compare {what args} {
proc onv3CompareDEZLoad {} {
proc onv3CompareDEZApply {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_v3pvarAnsys.tcl]]
proc onv3AnsysVarsDEZLoad {} {
proc onV3AnsysVarsMdModify {args} {
proc onV3AnsysVarsLdModify {args} {
proc aie_update_ansys_vars {what args} {
proc onV3AnsysSVarModify {args} {
proc onV3AnsysVVarModify {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_v3pvarLsDyna.tcl]]
proc onv3LsDynaVarsDEZLoad {} {
proc aie_update_lsdyna_vars {what args} {
proc onV3LsDynaSVarModify {args} {
proc onV3LsDynaVVarModify {args} {
proc onv3LsDynaXYpDEZload {} {
proc onv3LsDynaXYpDEZApply {} {
proc onV3LsDynaXYplotModify {args} {
proc aie_update_lsdyna_xyp {what args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_v3pvarNastran.tcl]]
proc onv3NastranVarsDEZLoad {} {
proc onV3NastranVarsMdModify {args} {
proc onV3NastranVarsLdModify {args} {
proc aie_update_nastran_vars {what args} {
proc onV3NastranSVarModify {args} {
proc onV3NastranVVarModify {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_v3report.tcl]]
proc onv3DocDEZLoad {} {
proc onv3DocDEZCancel {} {
proc onv3DocDEZOK {} {
proc onv3DocNewLoad {} {
proc onv3DocInfoLoad {} {
proc onv3DocCFDLoad {} {
proc onv3DocEFDLoad {} {
proc onv3DocChapLoad {} {
proc onv3DocSectLoad {} {
proc onv3DocImgLoad {} {
proc onv3DocTextLoad {} {
proc onv3DocTableLoad {} {
proc onv3DocSaveXMLLoad {} {
proc onv3DocSaveHTMLoad {} {
proc onv3DocSavePDFLoad {} {
proc onv3DocDEZApply {} {
proc aie_v3p_doc_cmd {what args} {
proc aie_v3p_doc {what args} {
proc aie_v3p_doc_delete {Tree Node Type args} {
proc aie_v3p_doc_select {Tree Node Type re args} {
proc aie_v3p_doc_nodes {what args} {
proc onv3ReportNewLoad {} {
proc onv3ReportSaveXMLLoad {} {
proc onv3ReportSaveHTMLoad {} {
proc onv3ReportSavePDFLoad {} {
proc onv3ReportDEZLoad {} {
proc onv3ReportDEZApply {} {
proc aie_v3p_report {what args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_val_set_screen_position.tcl]]
proc va_display_set_view {} {
proc va_display_get_view {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_vid.tcl]]
proc oncreateVidDEZUnload {} {
proc oncreateVidDEZLoad {} {
proc oncreateVidDEZOK {} {
proc ontheDesign2Load {} {
proc onVidLoad2_0Unload {} {
proc ontheDesign3Load {} {
proc ontheDesign4Load {} {
proc oncreateCrvLineECFinish {} {
proc oncreateSrfLineECFinish {} {
proc oncreateObjECFinish {} {
proc oncreateVecScrPFinish {} {
proc onparamCh3_0Finish {} {
proc onvidModVecCh_1Finish {} {
proc onvidModVecCh_2Finish {} {
proc onparamCh3_1Finish {} {
proc onparamCh3_2Finish {} {
proc onparamCh3_3Finish {} {
proc onparamCh3_4Finish {} {	
proc vidButtonProc {type name xyz but} {
proc vidMotionProc {type name xyz} {
proc onVidCFileFinish {} {
proc onEZPickGUIParamFinish {} {
proc onEZReplayGUIParamFinish {} {
proc onEZConvertPick3Pick {} {	
proc onEZConvertPick4Pick {} {	
proc onEZConvertPick3Finish {} {
proc onEZConvertPick2Finish {} {
proc onParamListEnModify {dez val} {
proc ondefineEZcadConvertDEZApply {} {
proc VidCreateProc {{names ""}} {
proc VidEditProc {} {
proc aie_vid_edit {file} {
proc aie_vid_show_details {type} {
proc aie_vid_show {{what ""} {method ""} {w .v.plot}} {
proc aie_vid_new_def {name} {
proc aie_vid_new_name {} {
proc vid_show_scr {args} {
proc aie_geo_import_comak {{from ""}} {
proc aie_comak_interp_done {} {
proc aie_vid_c_fix_names {txt} {
proc aie_vid_c_check_name {name} {
proc aie_vid_c_check_txt {txt} {
proc aie_vid_c_interp_evaluate {com name txt} {
proc aie_vid_c_interp {com name txt} {
proc aie_vid_c_POINT_define {part name met data} {
proc vid_wait {args} {
proc vid_ss {{local 0}} {
proc mess_clear {} {
proc mess_set_line {{n 0}} {
proc mess_set_text {n txt} {
proc aie_vid_c_CURVE_define {part name method data} {
proc aie_vid_c_SURFACE_define {part name met data} {
proc aie_vid_c_copy_scale {data} {
proc aie_vid_c_copy_translate {data} {
proc aie_vid_c_get_axis {txt} {
proc aie_vid_c_vector {n} {
proc aie_vid_c_copy_rotate {data} {
proc aie_vid_c_part {name {part ""} {newname ""}} {
proc aie_vid_c_input_key {what txt} {
proc aie_vid_c_get_ddn {keyfile name} {
proc aie_vid_find_ddn_file {ddndir name} {	
proc aie_read_comak_file {from {show 1}} {
proc aie_c_add_v_can {text {ncur ""}} {
proc aie_find_line_by_name {{name ""}} {
proc aie_c_v_can_show {} {
proc aie_comak_interp_do {what} {
proc aie_c_cmd {n {show_msg 0}} {
proc aie_c_set_cmd {n col {move 0}} {
proc aie_c_set_mark {n {move 0}} {
proc vid_create_all {} {
proc vid_create_1 {name {N_times 1}} {
proc vid_GUI {what name {method ""} {def ""}} {
proc vid_create_GUI_images {{method distance}} {
proc vid_create_med_entity {name type method part def} {
proc vid_geo_create {objs} {
proc aie_vid_set_methods {} {
proc aie_vid_va_arc {ps pe dir angle} {
proc aie_vid_get_crv_end {crv how} {
proc aie_vid_reorder_crvs {crvs xyz} {
proc vid_param_list {} {
proc vid_cre_obj_for_long_list {list maxlen name} {
proc vid_try_add_obj_in_part {obj part} {
proc vid_is_obj_in_the_part {obj part} {
proc vid_add_obj_in_the_part {obj part} {
proc vid_check_topo {typename up_pp up_cc up_ss up_ext_ss up_ext_ss_cc up_ext_pp_ss} {
proc vid_move {} {
proc vid_move_end {} {		
proc vid_do_modify {{xyz junk} {when never}} {
proc vid_save_modified {point curve surface} {
proc vid_restore_modified {} {
proc vid_set_modified {pnts} {
proc vid_gui_update {} {
proc vid_gui_confirm {{quest ""} {mess "Press middle button to confirm"} {return_btn 0}} {
proc vid_write_file {f} {
proc vid_read_file {f {show 1}} {
proc old_vid_read_file {f {show 1}} {
proc vid_create_all_vectors {} {
proc vid_try_define_param_and_points {prefix refp points} {
proc vid_try_define_param_with_topo {prefix startp points} {
proc vid_define_param_2_pts {prefix refp p} {
proc vid_pts_show {{how ""} args} {
proc vid_select_move {args} {
proc vid_set_current_virtual_tag {type} {
proc vid_set_new_name {name type} {
proc vid_check_create_param_for {value {prefix ViPar}} {
proc vid_check_create_vector_for {xyz} {
proc onVidRadPickFinish {} {
proc vid_info {what} {
proc aie_vid_replay_file {from {show 1}} {
	proc aie_vidrpl_gui {args} {	
proc vid_mac_set_name {args} {
proc aie_vid_fill_menu {w wfrom entlist {fun ""}} {
proc aie_vid_popmenu {wfrom x y {menus ""}} {
proc aie_vid_popmenu1 {wfrom x y {menus ""}} {
proc aie_vid_show_menu {wfrom x y {menus ""}} {
proc vid_tree_node {node} {
proc vid_set_macro {node} {
proc aie_mtree_restore {} {
proc aie_mtree_replay {args} {
proc aie_vid_pop_do_tree_lib {what w} {
proc aie_vid_pop_do_tree {what w} {
proc aie_vidrpl_interp_activate {} {
proc aie_vidrpl_interp_done {} {
proc aie_vid_procmenu_do {what w} {
proc aie_vid_popmenu_do1 {what w} {
proc aie_vid_popmenu_do {what {w ""}} {
proc old_aie_vid_record {comm args} {
proc aie_vid_record {comm args} {
proc vid_set_macro_entities {} {
proc aie_vid_bset {name} {
proc aie_vidrpl_do {what} {
proc aie_vid_button {{what ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/aie_wb.tcl]]
proc aie_wb_update_project {{opt 0} {do_update 1} } {
proc aie_wb_brep_attach {} {
proc aie_wb_brep_attach_start {} {
proc aie_wb_brep_load {{opt 0} {do_update 0} {gui_init 0}} {
proc aie_wb_brep_load_start {{opt 0} {do_update 0} {gui_init 0} } {
proc aie_wb_tetin_load {{opt 0} {do_update 0} {gui_init 0} {suppress_dialogs 0} } {
proc aie_wb_tetin_load_start {{opt 0} {do_update 0} {gui_init 0} {suppress_dialogs 0}} {
proc aie_wb_dsmesh_load {{opt 0} {do_update 0}} {
proc aie_wb_dsmesh_load_start {{opt 0} {do_update 0}} {
proc aie_wb_saveProject {{ask 0} {only_if_needed 0}} {
proc aie_wb_updateProject { {context ""} {do_update 0} } {
proc aie_wb_updateProject_start { {context ""} {do_update 0} } {
proc aie_wb_get_full_projectname {} {
proc aie_wb_get_projectname {} {
proc aie_wb_update_blocking {} {
proc aie_wb_cleanup {} {
proc aie_wb_copy_mousebindings {} {
proc aie_wb_cd {} {
proc aie_wb_get_pwd {} {
proc aie_create_named_selections {} {
proc aie_create_named_selections_start {} {
proc aie_wb_mess { str {color ""} } {
proc aie_wb2_init_files {} {
proc aie_wb2_exit_icemcfd {} {
proc aie_wb2_refresh_upstream_data {} {
proc aie_wb2_save_project {{already_updated 0}} {
proc aie_wb2_update_upstream_data_filename {{file ""}} {
proc aie_wb2_update_file_names {} {
proc aie_wb2_is_upstream_data_updated {} {
proc aie_wb2_backup_files {from_exit} {
proc aie_wb2_replece_geometry {} {
proc aie_wb2_update {{file ""}} {
proc aie_wb2_set_default_properties {} {
proc aie_wb2_update_properties {properties} {
proc aie_wb2_update_global_properties {properties} {
proc aie_wb2_record_replay {what} {
proc aie_wb2_execute_batch_command {commands} {
proc aie_wb2_run_solver {format1 format2} {
proc aie_wb2_parameter_dialog {NodeID ButtonID ObjectID {title ""}} {
proc aie_wb2_wb_parameter_reset_input {pattern1 pattern2} { 
proc aie_wb2_wb_parameter_input_blocking_edge {{edge ""}} { 
proc aie_wb2_wb_parameter_input_blocking_move_vertices {{vertices ""}} {
proc aie_wb2_wb_parameter_input_geom_curve {{curve ""}} {
proc aie_wb2_wb_parameter_input_geom_surface {{surface ""}} {
proc aie_wb2_wb_parameter_input_geom_density {{density ""}} {
proc aie_wb2_wb_parameter_input_geom_buttons {buttons} {
proc aie_wb2_set_input_name {dez param variable} {   
proc aie_wb2_unset_input_name {dez param} {
proc aie_wb2_parameter_set_part_params {labels} {
proc aie_wb2_parameter_get_part_param {label} {
proc aie_wb2_parameter_part_dialog {ButtonID part TableID row} {
proc aie_wb2_set_input_part {param value} {
proc aie_wb2_unset_input_part {param} {
proc aie_wb2_set_input_part_value {part param value} {
proc aie_wb2_is_input_parameter {NameID ObjectID LabelID} {
proc aie_wb2_nonvalid_input_title {label} {
proc onsetWorkbenchInputDEZLoad {} {
proc onsetWorkbenchInputDEZAfterLoad {} {
proc onsetWorkbenchInputDEZUnLoad {} {
proc aie_wb2_trace_wb_input_parameters {name element op} {
proc onsetWorkbenchInputDEZOK {} {
proc onsetWorkbenchOutputDEZLoad {} {
proc onsetWorkbenchOutputDEZAfterLoad {} {
proc onsetWorkbenchOutputDEZUnLoad {} {
proc aie_wb2_trace_wb_output_parameters {name element op} {
proc aie_wb2_check_periodic {} {
proc onsetWorkbenchOutputDEZOK {} {
proc aie_wb2_update_output_parameters {what} {
proc onsetWorkbenchOutputMeshDimDEZAfterLoad {} {
proc onsetWorkbenchOutputMeshDimDEZOK {} {
proc aie_wb2_show_parametrized {what} {
proc aie_wb2_dummy {} {}
proc aie_wb2_is_running {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/cart3d/aie_cart3d.tcl]]
proc aie_cart3d_update {} {
proc aie_cart3d_check_domain {} {
proc onMeshCart3dDEZApply { } {
proc aie_cart3d_compute_params { } {
proc onMeshCart3dDEZLoad { } {
proc onMeshCart3dDEZAfterLoad {} {
proc onMeshCart3dDEZUnload { } {
proc onCartFilePrefixModify {dez val} {
proc aie_cart3d_load_mesh {} {
proc aie_create_cart3d_bounds {} {
proc aie_delete_cart3d_bounds {} {
proc oncart3dSolveRunLoad {} {
proc oncart3dSolveParamsLoad {} {
proc oncart3dSolveStopLoad {} {
proc oncart3dSolveMonitorLoad {} {
proc onsolRunDEZApply {} {
proc aie_cart3d_visualize {} {
proc onsolPostDEZLoad {} {
proc onsolPostDEZApply {} {
proc aie_cart3d_trials {} {
proc onsolTrialsDEZLoad {} {
proc oncart3dTrialsStopLoad {} {
proc oncart3dTrialsResultsLoad {} {
proc oncart3dTrialsResultsUnload {} {
proc onCart3dComponentModify {dez val} {
proc onsolTrialsDEZApply {} {
proc onsolTrialsDEZUnload {} {
proc aie_cart3d_show_params {} {
proc aie_cart3d_clear_params {} {
proc onsol6DOFDEZLoad {} {
proc onsol6DOFDEZApply {} {
proc aie_sixdof_trajectory {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/cart3d/init.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/cfd/init.tcl]]
proc acusolve_solution_start {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/fea2.0/aie_abaqus.tcl]]
proc set_abaqus_file {} {
proc setup_abaqus_load {} {
proc setup_abaqus_apply {} {
proc onAbaqusModSolvModify {dez val} {
proc set_abaqus_params {} {
proc set_abaqus_solve {} {
proc solve_abaqus_file {} {
proc set_abaqus_post {} {
proc post_abaqus_file {} {
proc update_abaqus_setup {} {
proc aie_generate_abaqus_data {} {
proc abaqus_famboco_edit {} {
proc abaqus_params_edit {} {
proc write_abaqus_file {} {
proc aie_export_abaqus {abaqus_file domain family_boco solver_params} {
proc aie_convert_nastran_abaqus_files {afbc apar} {
proc unused__aie_write_abaqus_bc_constraint {fp fam data} {
proc aie_get_abaqus_step_for_spcset {sid} {
proc aie_write_abaqus_bc_impdisp {fp fam data} {
proc aie_get_abaqus_step_for_loadset {lid} {
proc aie_write_abaqus_bc_force {fp fam data} {
proc aie_write_abaqus_bc_pressure {fp fam data} {
proc aie_get_abaqus_step_for_tempset {tid} {
proc aie_write_abaqus_bc_temperature {fp fam data} {
    proc aie_write_abaqus_bc_element_prop_${i}d {fp fam data} {
proc aie_write_abaqus_bc_element_prop {fp fam data} {
proc abaqus_add_materials {} {
proc abaqus_material_property_order {{type 0}} {
proc abaqus_add_LCS {} {
proc abaqus_reset_transforms {} {
proc abaqus_add_contacts {} {
proc unused__aie_write_abaqus_bc_contact {fp fam data} {
proc abaqus_params_load_solve_data {file} {
proc abaqus_params_save_solve_data {file} {
proc abaqus_params_save_solve_array {fp arr {last0 ""} {list0 ""}} {
proc get_new_last_list {keys llast} {
proc is_solve_level_end {key last} {
proc abaqus_params_begin_level {fp arr last outlist} {
proc abaqus_params_end_level {fp arr last} {
proc get_next_level_key {key} {
proc get_solve_node_name {key} {
proc count_solve_level {str} {
proc aie_import_abaqus {{file ""} {do_load 1}} {
proc aie_nastran_to_abaqus {abaqus proj} {
proc abaqus_params_load_solve_data {file} {
proc abaqus_params_save_solve_data {file} {
proc abaqus_params_save_solve_array {fp arr {last0 ""} {list0 ""}} {
proc get_new_last_list {keys llast} {
proc is_solve_level_end {key last} {
proc abaqus_params_begin_level {fp arr last outlist} {
proc abaqus_params_end_level {fp arr last} {
proc get_next_level_key {key} {
proc get_solve_node_name {key} {
proc count_solve_level {str} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/fea2.0/aie_ansys.tcl]]
proc aie_ansys_solve {} {
proc onwriteAnsysDEZLoad {} {
proc set_ansys_file {} {
proc onAnsysShellModify {dez val} {
proc setup_ansys_load {} {
proc setup_ansys_apply {} {
proc params_ansys_load {} {
proc params_ansys_apply {} {
proc set_ansys_params {} {
	    proc_n 1
proc set_ansys_solve {} {
proc check_ansys_lic_products {product_table {lic_var ""}} {
proc solve_ansys_file {} {
proc set_ansys_post {} {
proc post_ansys_file {} {
proc update_ansys_setup {} {
proc aie_generate_ansys_data {} {
proc ansys_famboco_edit {} {
proc ansys_params_edit {} {
proc write_ansys_file {} {
proc aie_export_ansys {ansys_file domain solver_attr solver_params} {
proc aie_convert_nastran_ansys_files {aatr apar {afbc ""}} {
proc unused__aie_write_ansys_bc_constraint {fp fam data} {
proc aie_get_ansys_loadstep_for_spcset {sid} {
proc aie_write_ansys_bc_impdisp {fp fam data} {
proc aie_get_ansys_loadstep_for_loadset {lid} {
proc aie_write_ansys_bc_force {fp fam data} {
proc aie_write_ansys_bc_pressure {fp fam data} {
proc aie_get_ansys_loadstep_for_tempset {tid} {
proc aie_write_ansys_bc_temperature {fp fam data} {
    proc aie_write_ansys_bc_element_prop_${i}d {fp fam data} {
proc aie_write_ansys_bc_element_prop {fp fam data} {
proc ansys_add_real_set_generic {args} {
proc ansys_add_real_set_shell {fam etshl thk admsua rmi} {
proc ansys_add_real_set_beam {fam etbeam area izz iyy ixx} {
proc ansys_add_section_beam {fam etbeam nastran_type dims vec} {
proc ansys_add_materials {} {
proc ansys_material_property_order {type} {
proc ansys_add_mptemp_node {name data} {
proc ansys_set_tbpt_node {data} {
proc ansys_add_LCS {} {
proc ansys_set_gravity {} {
proc oncreateContactDEZLoad {} {
proc oncreateExistingContactDEZLoad {} {
proc oncreate${i}ContactDEZApply {} {
proc rl {} {
proc unused__applyContact {mue mued ctype auto tie type objects name} {
proc unused__aie_edit_contact {name} {
proc aie_apply_icons_contact {fam obtype vis lvis} {
proc aie_parse_bcs_contact {bcs} {
proc aie_parse_bcs_target {bcs} {
proc unused__aie_write_ansys_bc_contact {fp fam data} {
proc ansys_add_contacts {} {
proc aie_import_ansys {{file ""} {do_load 1}} {
proc aie_do_import_ansys {{file ""} {do_load 1}} {
proc aie_nastran_to_ansys {ansys proj} {
proc get_real_constants_spring {fam spring rnode} {
proc get_real_constants_beam {fam beam rnode} {
proc get_real_constants_shell {fam shell rnode} {
proc get_real_constants_general {fam rnum rnode} {
proc get_average_shell_thickness {fam t1 t2 t3 t4} {
proc ansys_params_load_solve_data {file} {
proc ansys_params_save_solve_data {file} {
proc ansys_params_save_solve_array {fp arr {last0 ""} {list0 ""}} {
proc get_new_last_list {keys llast} {
proc is_solve_level_end {key last} {
proc ansys_params_begin_level {fp arr last outlist} {
proc ansys_params_end_level {fp arr last} {
proc get_next_level_key {key} {
proc get_solve_node_name {key} {
proc count_solve_level {str} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/fea2.0/aie_autodyn.tcl]]
proc set_autodyn_file {} {
proc setup_autodyn_load {} {
proc setup_autodyn_apply {} {
proc set_autodyn_solve {} {
proc solve_autodyn_file {} {
proc update_autodyn_setup {} {
proc write_autodyn_file {} {
proc multiblock_write_autodyn_input {} {
proc autodyn_setup_workbench {autodyn_file {is_batch 0}} {
proc set_autodyn_post {} {
proc post_autodyn_file {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/fea2.0/aie_constraints.tcl]]
proc aie_edit_impdisp {name} {
proc aie_edit_mpcdisp {name} {
proc aie_parse_bcs_impdisp {bcs} {
proc onCreatePointImpdispDEZLoad {} {
proc onCreatePointImpdispDEZApply {} {
proc onCreateCurveImpdispDEZLoad {} {
proc onCreateCurveImpdispDEZApply {} {
proc onCreateSurfImpdispDEZLoad {} {
proc onCreateSurfImpdispDEZApply {} {
proc onCreateSubsetImpdispDEZLoad {} {
proc onCreateSubsetImpdispDEZApply {} {
proc onCreateExistingImpdispDEZLoad {} {
proc onCreateExistingImpdispDEZApply {} {
proc applyImpdisp {CheckUX CheckUY CheckUZ UX UY UZ CheckROTX CheckROTY CheckROTZ ROTX ROTY ROTZ type objects name spcset LCS SPCType nsid} {
proc aie_apply_icons_impdisp {fam obtype vis lvis} {
proc aie_get_impdisp_set {fam} {
proc aie_get_SPCType_num {SPCType} {
proc aie_get_SPCType_name {SPCType} {
proc onCreateSingledisplacementDEZLoad {} {
proc onCreateSingledisplacementDEZApply {} {
proc onCreateMultipledisplacementDEZLoad {} {
proc onCreateMultipledisplacementDEZUnLoad {} {
proc oncreateMPCDependentPickPick {} {
proc oncreateMPCDependentPickFinish {} {
proc oncreateMPCIndependentPickPick {} {
proc oncreateMPCIndependentPickFinish {} {
proc onCreateMultipledisplacementDEZApply {} {
proc onCreateExistingMpcdispDEZLoad {} {
proc onCreateExistingMpcdispDEZApply {} {
proc aie_parse_bcs_mpcdisp {bcs} {
proc applyMpcdisp {type objects name mpcset LCS depdof depcoef indepdof indepcoef dep nsid} {
proc aie_apply_icons_mpcdisp {fam obtype vis lvis {nfam -1}} {
proc aie_get_mpcdisp_set {fam} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/fea2.0/aie_elem_props.tcl]]
proc aie_element_prop_dim__unused {f} {
proc onCreatePointEleFamModify {dez val} {
proc onCreate0DElePropDEZLoad {} {
proc onCreate0DElePropDEZApply {} {
proc onCreateCurveEleFamModify {dez val} {
proc onCreate1DElePropDEZLoad {} {
proc aie_get_1d_subtypes {} {
proc onCreate1DElePropDEZApply {} {
proc onCreate1DElePropDEZUnLoad {} {
proc onCreate1DElePropRBELoad {} {
proc onCreate1DElePropRBEUnload {} {
proc onCreateBeamRBARUnload {} {
proc onCreateBeamRBE2Unload {} {
proc onCreateBeamRBE3Unload {} {
proc onCreateBeamRBARLoad {} {
proc onCreateBeamRBE2Load {} {
proc onCreateBeamRBE3Load {} {
proc onCreate1DElePropPMASSLoad {} {
proc onCreate1DElePropPMASSUnload {} {
proc onCreate1DElePropDAMPLoad {} {
proc onCreate1DElePropDAMPUnload {} {
proc onCreate1DElePropELASLoad {} {
proc onCreate1DElePropELASUnload {} {
proc onCreate1DElePropVISCLoad {} {
proc onCreate1DElePropVISCUnload {} {
proc onCreate1DElePropGapLoad {} {
proc onCreate1DElePropGapUnload {} {
proc onCreate1DElePropCrossSectionLoad {} {
proc onCreate2DElePropDEZLoad {} {
proc aie_get_2d_subtypes {} {
proc onCreate2DElePropDEZApply {} {
proc onCreateSurfEleFamFinish {} {
proc aie_edit_thickness {what} {
proc onCreate2DElePropPcompLoad {} {
proc onCreateVolEleFamModify {dez val} {
proc onCreate3DElePropDEZLoad {} {
proc onCreate3DElePropDEZApply {} {
proc applyEleProp {dimens name pid type part_names lcs props} {
proc aie_average_thickness {parts} {
proc aie_update_bar_orientations {{part_names ""} {x1 ""} {x2 ""} {x3 ""}
proc aie_update_bar_end_release {{part_names ""} {pa ""} {pb ""}} {
proc aie_update_pcomp_pid {{part_names ""}} {
proc aie_parse_bcs_element_prop_0d {bcs} {
proc aie_parse_bcs_element_prop_1d {bcs} {
proc aie_parse_bcs_element_prop_2d {bcs} {
proc aie_parse_bcs_element_prop_3d {bcs} {
proc aie_element_prop_mat_names_from_numbers {bcs} {
proc aie_apply_icons_element_prop_all {dim fam obtype vis lvis} {
proc aie_apply_icons_element_prop_0d {fam obtype vis lvis} {
proc aie_apply_icons_element_prop_1d {fam obtype vis lvis} {
proc aie_apply_icons_element_prop_2d {fam obtype vis lvis} {
proc aie_apply_icons_element_prop_3d {fam obtype vis lvis} {
proc aie_edit_element_prop_0d {name} {
proc aie_edit_element_prop_1d {name} {
proc aie_edit_element_prop_2d {name} {
proc aie_edit_element_prop_3d {name} {
proc aie_element_prop_2d_pcomp_layers {} {
proc aie_pcomp_layers_doit {lid layers} {
proc aie_set_Layers_data {name vals} {
proc aie_element_prop_3d_gasket {{type loading}} {
proc aie_element_prop_1d_cross_section {beam_type} {
proc aie_dcross_section_doit {beam_type lid dims} {
proc aie_set_cross_section_data {name vals} {
proc aie_dcross_section_update {dims cross val} {
proc aie_dcross_section_cancel {} {
proc aie_element_summary {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/fea2.0/aie_loads.tcl]]
proc aie_edit_force {name} {
proc aie_parse_bcs_force {bcs} {
    proc onCreate${i}ForceDEZLoad {} {
    proc onCreate${i}ForceDEZApply {} "\
proc onCreateForceDEZLoad {} {
proc onCreateForceDEZApply {} {
proc applyForce {FX FY FZ MX MY MZ type objects name loadset LCS scale force_type lsdyna_nsid} {
proc aie_apply_icons_force {fam obtype vis lvis} {
proc aie_get_force_set {fam} {
proc aie_edit_pressure {name} {
proc aie_parse_bcs_pressure {bcs} {
    proc onCreate${i}PresDEZLoad {} {
    proc onCreate${i}PresDEZApply {} "\
proc onCreatePressureDEZLoad {} {
proc onCreatePressureDEZApply {} {
proc applyPres {pres_type pres pres2 pres3 pres4 LCS vect1 vect2 vect3 scale_factor type objects name loadset} {
proc aie_apply_icons_pressure {fam obtype vis lvis} {
proc aie_get_pressure_set {fam} {
proc aie_edit_temperature {name} {
proc aie_parse_bcs_temperature {bcs} {
    proc onCreate${i}TmpDEZLoad {} {
    proc onCreate${i}TmpDEZApply {} "\
proc onCreateTemperatureDEZLoad {} {
proc onCreateTemperatureDEZApply {} {
proc applyTmp {temp_type temp scale_factor type objects name loadset lsdyna_nsid} {
proc aie_apply_icons_temperature {fam obtype vis lvis} {
proc aie_get_temperature_set {fam} {
proc onSetGravityDEZLoad {} {
proc onSetGravityDEZApply {} {
proc onCreateDynamicTimeDEZLoad {} {
proc onCreateDynamicTimeDEZApply {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/fea2.0/aie_lsdyna.tcl]]
proc params_lsdyna_apply {} {
proc aie_edit_lsdyna_params {name} {
proc aie_delete_lsdyna_params {name} {
proc aie_rename_lsdyna_params {name} {
proc aie_tree_load_lsdyna_params {} {
proc params_lsdyna_load {} {
proc set_lsdyna_file {} {
proc setup_lsdyna_load {} {
proc setup_lsdyna_apply {} {
proc set_lsdyna_params {} {
proc set_lsdyna_solve {} {
proc solve_lsdyna_file {} {
proc set_lsdyna_post {} {
proc post_lsdyna_file {} {
proc post_lsdyna_file_v3 {} {
proc update_lsdyna_setup {} {
proc aie_generate_lsdyna_data {} {
proc lsdyna_famboco_edit {} {
proc lsdyna_params_edit {} {
proc write_lsdyna_file {} {
proc aie_export_lsdyna {lsdyna_file domain family_boco solver_params} {
proc aie_convert_nastran_lsdyna_files {afbc apar} {
proc unused__aie_write_lsdyna_bc_constraint {fp fam data} {
proc aie_write_lsdyna_bc_impdisp {fp fam data} {
proc aie_write_lsdyna_bc_force {fp fam data} {
proc aie_write_lsdyna_bc_pressure {fp fam data} {
proc aie_write_lsdyna_bc_temperature {fp fam data} {
    proc aie_write_lsdyna_bc_element_prop_${i}d {fp fam data} {
proc aie_write_lsdyna_bc_element_prop {fp fam data} {
proc lsdyna_get_DOF {dof} {
proc lsdyna_combine_DOF {dof1 dof2} {
proc lsdyna_get_xyz_bits {b} {
proc lsdyna_add_element_solid {fam mat ename pid} {
proc lsdyna_add_element_shell {fam mat section ename pid} {
proc lsdyna_add_element_beam {fam mat section element_node mat_list_id} {
proc lsdyna_add_element_mass {fam mass} {
proc lsdyna_get_material_card_data { type } {
proc lsdyna_get_material_property_names {} {
proc lsdyna_add_material {type mat element_node} {
proc lsdyna_add_materials {} {
proc lsdyna_material_property_order {} {
proc lsdyna_add_LCS {} {
proc lsdyna_set_gravity {} {
proc lsdyna_add_parameters {} {
proc unused__aie_write_lsdyna_bc_contact {fp} {
proc lsdyna_add_multiple_contacts {} {
proc aie_write_lsdyna_bcs_single_contact {} {
proc oncreate${i}SingleContactDEZLoad {} {
proc oncreate${i}SingleContactDEZApply {} {
proc applySingleContact {mue mued ctype type objects name} {
proc aie_edit_singlecontact {name} {
proc aie_apply_icons_singlecontact {fam obtype vis lvis} {
proc aie_parse_bcs_singlecontact {bcs} {
    proc oncreate${i}VelocityDEZLoad {} {
proc oncreate${i}VelocityDEZApply {} {
proc applyVelocity {vx vy vz vxr vyr vzr lsdyna_nsid type objects name} {
proc aie_edit_velocity {name} {
proc aie_apply_icons_velocity {fam obtype vis lvis} {
proc aie_parse_bcs_velocity {bcs} {
proc aie_write_lsdyna_bc_velocity {fp fam data} {
    proc oncreate${i}RigidwallDEZLoad {} {
proc oncreate${i}RigidwallDEZApply {} {
proc applyRigidwall {o xt yt zt xh yh zh fr wv lsdyna_nsid type objects name} {
proc aie_edit_rigidwall {name} {
proc aie_apply_icons_rigidwall {fam obtype vis lvis} {
proc aie_parse_bcs_rigidwall {bcs} {
proc aie_write_lsdyna_bc_rigidwall {fp fam data} {
    proc oncreate${i}ConstrainedNodesDEZLoad {} {
proc oncreate${i}ConstrainedNodesDEZApply {} {
proc applyConstrainedNodes {type dof tf weld cid2 npr tfail epsf lsdyna_nsid ent objects name} {
proc aie_edit_constrainednodes {name} {
proc aie_apply_icons_constrainednodes {fam obtype vis lvis} {
proc aie_parse_bcs_constrainednodes {bcs} {
proc aie_write_lsdyna_bc_constrainednodes {fp fam data} {
proc aie_import_lsdyna_new {} {
proc aie_import_lsdyna {{file ""} {do_load 1} {include 0}} {
proc aie_nastran_to_lsdyna {lsdyna proj} {
proc get_max_load_curve_value {id} {
proc lsdyna_params_load_solve_data {file} {
proc lsdyna_params_save_solve_data {file} {
proc lsdyna_params_save_solve_array {fp arr {last0 ""} {list0 ""}} {
proc get_new_last_list {keys llast} {
proc is_solve_level_end {key last} {
proc lsdyna_params_begin_level {fp arr last outlist} {
proc lsdyna_params_end_level {fp arr last} {
proc get_next_level_key {key} {
proc get_solve_node_name {key} {
proc count_solve_level {str} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/fea2.0/aie_materials.tcl]]
proc onCreateMatDEZLoad {} {
proc onCreateMatDEZApply {} {
proc aie_set_material_type {name vals} {
proc aie_set_material_data {name vals} {
proc aie_set_material_dpnd_data {name vals} {
proc aie_material_name_from_number {n} {
proc aie_edit_material {name {edit_type 0}} {
proc aie_delete_material {name} {
proc aie_rename_material {name {newname ""} {quiet 0}} {
proc aie_tree_load_materials {clear} {
proc aie_material_property_order {type} {
proc aie_material_dpnd_property_order {type} {
proc aie_material_from_param {type name} {
proc aie_material_tbl_name_from_number {n} {
proc aie_material_dpnd_from_param {type name} {
proc aie_material_nonlinear_from_param {type name} {
proc aie_update_materials_to_params {} {
proc aie_save_materials_from_params {} {
proc aie_read_materials {} {
proc aie_rename_imported_materials {import} {
proc aie_write_materials {} {
proc oncreateMatTblDEZLoad {} {
proc onCreateMatTblDEZApply {} {
proc oncreateTblDEZLoad {} {
proc onCreateTblDEZApply {} {
proc aie_create_table {} {
proc aie_set_material_tbl_type {tblname vals} {
proc aie_set_material_tbl_data {tblname vals} {
proc aie_edit_material_tbl_old {tblname} {
proc aie_edit_material_tbl {tblname} {
proc aie_delete_material_tbl {tblname} {
proc aie_rename_material_tbl {tblname} {
proc aie_material_table_order {type} {
proc aie_save_tbls {} {
proc aie_load_tbls {clear} {
proc aie_material_tbl_from_param {type tblname} {
proc aie_select_dependent_nodes {} {
proc aie_edit_table_pre {type varname} {
proc aie_edit_table_post  {type varname} {
proc aie_edit_table_pre_new {type varname} {
proc aie_edit_table_post_new  {type varname} {
proc aie_edit_table_doit {} {
proc aie_copy_material {name} {
proc aie_load_materialsLib {} {
proc aie_wb_update_material {mats} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/fea2.0/aie_solver.tcl]]
proc aie_solver_param {} {
proc aie_solver_type {} {
proc onSetupNastranRunDEZLoad {} {
proc onSetupNastranRunDEZApply {} {
proc aie_get_param_cards {} {
proc aie_set_param_cards {vals} {
proc subcaseGetOrSet_old {get {id ""}} {
proc subcaseGetOrSet {get {id ""}} {
proc onSubcaseDEZLoad {} {
proc onSubcaseDEZApply {} {
proc aie_edit_subcase {name} {
proc aie_load_subcase {} {
proc aie_list_subcases {} {
proc aie_delete_subcase {name} {
proc aie_lsdyna_file {} {
proc aie_ansys_file {} {
proc aie_abaqus_file {} {
proc aie_autodyn_file {} {
proc aie_nastran_file {} {
proc aie_nastran_file_export {} {
proc onwriteNastranDEZLoad {} {
proc set_nastran_file {} {
proc onwriteNastranDEZApply {} {
proc write_nastran_file {} {
proc close_write_file {} {
proc aie_nastran_post {} {
proc onpostNastranDEZLoad {} {
proc set_nastran_post {} {
proc onpostNastranDEZOK {} {
proc post_nastran_file {{post_opt ""}} {
proc aie_nastran_op2 {{opt ""}} {
proc aie_nastran_solve {} {
proc onsolveNastranDEZLoad {} {
proc set_nastran_solve {} {
proc onsolveNastranDEZOK {} {
proc solve_nastran_file {} {
proc update_nastran_setup {} {
proc aie_famboco_edit {solver} {
proc aie_params_edit {solver} {
proc aie_set_solver {ch} {
proc aie_check_shell_thicknesses {} {
proc onSetupSolverParamDEZLoad {} {
proc onSetupSolverParamDEZApply {} {
proc onSetupSolverParamDEZCancel {} {
proc aie_set_params_type {name vals} {
proc aie_set_params_type1 {name type} {
proc aie_set_params_data {name vals} {
proc aie_edit_params {name} {
proc aie_delete_params {name} {
proc aie_rename_params {name} {
proc aie_tree_load_params {clear} {
proc aie_tree_load_one_param {type} {
proc aie_params_order {type} {
proc aie_params_from_param {type name} {
proc aie_save_sol_params {} {
proc aie_params_name_from_number {n type} {
proc aie_params1_name_from_number {n type subtype} {
proc aie_params_set_steps {} {
proc aie_tstep_layers_doit {lid layers} {
proc aie_params_set_freqs {} {
proc aie_freq_layers_doit {lid layers} {
proc aie_params_set_dload {} {
proc aie_dload_layers_doit {lid layers} {
proc aie_params_set_sload {} {
proc aie_sload_layers_doit {lid layers} {
proc aie_params_set_spcadd {} {
proc aie_spcadd_layers_doit {lid layers} {
proc aie_params_set_mpcadd {} {
proc aie_mpcadd_layers_doit {lid layers} {
proc aie_load_include_file {{opt 0}} {
proc aie_param_exists {type name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/fea2.0/init.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/flowmatch/init.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/ic3m/aie_ic3m.tcl]]
proc loadIC3M {} {
proc onic3mSettingsDEZLoad {} {
proc onic3mSettingsDEZAfterLoad {} {
proc onic3mSimulationDEZLoad {} {
proc onic3mSimulationDEZAfterLoad {} {
proc onic3mSimulationDEZOK {} {
proc onic3mSimulationDEZApply {} {
proc onic3mParametersDEZLoad {} {
proc onic3mParametersDEZAfterLoad {} {
proc onic3mParametersDEZOK {} {
proc onic3mParametersDEZApply {} {
proc onic3mParametersDEZCancel {} {
proc onic3mIntakeValveProfileDEZLoad {} {
proc onic3mIntakeValveProfileDEZOK {} {
proc onic3mIntakeValveProfileDEZApply {} {
proc onic3mIntakeValveProfileDEZCancel {} {
proc onic3mExhaustValveProfileDEZLoad {} {
proc onic3mExhaustValveProfileDEZOK {} {
proc onic3mExhaustValveProfileDEZApply {} {
proc onic3mExhaustValveProfileDEZCancel {} {
proc onic3mGeometryPreviewDEZLoad {} {
proc onic3mGeometryPreviewDEZAfterLoad {} {
proc onic3mGeometryPreviewDEZOK {} {
proc onic3mGeometryPreviewDEZApply {} {
proc onic3mComputeGeometryDEZLoad {} {
proc onic3mComputeGeometryDEZAfterLoad {} {
proc onic3mComputeGeometryDEZOK {} {
proc onic3mComputeGeometryDEZApply {} {
proc onic3mComputeMeshDEZLoad {} {
proc onic3mComputeMeshDEZAfterLoad {} {
proc onic3mComputeMeshDEZOK {} {
proc onic3mComputeMeshDEZApply {} {
proc onic3mACFluxStationsDEZLoad {} {
proc onic3mACFluxStationsDEZAfterLoad {} {
proc onic3mACFluxStationsDEZOK {} {
proc onic3mACFluxStationsDEZApply {} {
proc onic3mMeshPreviewDEZLoad {} {
proc onic3mMeshPreviewDEZAfterLoad {} {
proc onic3mMeshPreviewDEZOK {} {
proc onic3mMeshPreviewDEZApply {} {
proc onic3mCompressionRatioDEZLoad {} {
proc onic3mCompressionRatioDEZAfterLoad {} {
proc onic3mCompressionRatioDEZApply {} {
proc onic3mCompressionRatioDEZOK {} {
proc onic3mOutputDEZLoad {} {
proc onic3mOutputDEZAfterLoad {} {
proc onic3mOutputDEZOK {} {
proc onic3mOutputDEZApply {} {
proc mw_ic3m_delete_lift_profile {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/ic3m/init.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/meshpro/aie_meshpro.tcl]]
proc loadMESHPRO {} {
proc onmpCoursenDEZAfterLoad {} {
proc onmpCoursenDEZOK {} {
proc onmpCoursenDEZPickFinish {} {
proc onmpTrimSurfDEZLoad {} {
proc onMpTrimSurfFamModify {dez val} {
proc onmpByOnScreenDEZLoad {} {
proc onmpByOnScreenDEZPickOK {} {
proc onmpByOnScreenDEZFinish {} {
proc onmpByCurveLoad {} {
proc onmpBySurfEdgeLoad {} {
proc onmpByOnSurfLoad {} {
proc onmpTrimbyPlaneDEZLoad {} {
proc onmpTrimbyPlaneDEZOK {} {
proc onmpTrimbyPlaneDEZFinish {} {
proc onmpByPlanePickp1Finish {} {
proc onmpByPlanePickPick {} {
proc onmpByPlanePickp3Pick {} {
proc xonmpByPlanePickp3PickFinish {} {
proc onmpTrimbyPlaneDEZUnLoad {} {
proc onmpSmoothEdgesDEZLoad {} {
proc onmpSmEdgeLoad {} {
proc onmpAlToCurveLoad {} {
proc onmpProjNodeLoad {} {
proc onmpTrimCurveDEZLoad {} {
proc onmpTrimCurveDEZAfterLoad {} { 
proc onmpTrimCurveDEZOK {} {
proc onmpmodifyCurvSegPickFinish {} {
proc onmpExtractBoundDEZLoad {} {
proc onMpextCurvesFamModify {dez val} {
proc onmpExtractBoundDEZAfterLoad {} {
proc onmpExtractBoundDEZOK {} {
proc onmpcreateBoundCurvesPickFinish {} {
proc onmpMoveFamilyDEZLoad {} {
proc onmpMoveFamilyDEZApply {} {
proc onmpcreatePartSelLoad {} {
proc onmpcreatePartPickFinish {} {
proc onmpcreatePartSelFacLoad {} {
proc onmpcreatePartSelFacFinish {} {
proc onMpcreatePartNameModify {dez val} {
proc onmpRepDropSurfLoad {} {
proc onmpRepFillSurfLoad {} {
proc onmpDynamicTrkDEZLoad {} {
proc onmpDynamicTrkDEZAfterLoad {} {
proc mp_move_point {} {
proc vid_move_spec {} {
proc onmpCharCurveDEZLoad {} {
proc onmpCharCurveDEZUnLoad {} {
proc onmpCharWinOffsetDEZLoad {} {
proc onmpCharWinOffsetDEZUnLoad {} { 
proc onmpCreateSectionDEZLoad {} {
proc onmpCreateSectionDEZAfterLoad {} {
proc onmpCreateSectionDEZOK {} {
proc onMpCreateSectionFamModify {dez val} {
proc onmpsectplanepntp1PickFinish {} {
proc onmpsectplanepntp3PickPick {} {
proc onmpCreateSectionDEZUnLoad {} {
proc onmpDeletePntsLoad {} {
proc onmpDeleteCrvLoad {} {
proc onmpDeleteSurfLoad {} {
proc onmpDeleteEntLoad {} {
proc onmpDeleteFacLoad {} {
proc onmpDeleteSegLoad {} {
proc onmpAdjStlNormDezLoad {} {
proc onmpGlbMeshParamDEZLoad {} {
proc onmpCrMeshDEZLoad {} {
proc onmpCrMeshDEZOK {} {
proc onmpSmoothDEZLoad {} {
proc onmpMeshQualDEZLoad {} {
proc onmpRefineDEZLoad {} {
proc onmpRotateViewDEZLoad {} {
proc onmpRotateViewDEZOK {} {
proc mp_view {type} {
proc onmpcreateElemsDEZLoad {} {
proc onmpOffsetMeshDEZLoad {} {
proc onmpOffsetMeshDEZOK {} {
proc onMpOffsetPartModify {dez val} {
proc onMpOffsetPartSideModify {dez val} {
proc onmpDynamicTrkDEZOK {} {
proc onmpDynTrkPickPick {} {
proc onmpDynTrkPickFinish {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/meshpro/init.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/post/init.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/pre/init.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/prepost/init.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/refinement/init.tcl]]
proc ::Refinement::SetPrismParams {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/refinement/scripts/init.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/scripts/refinement/scripts/refinement.tcl]]
proc ::Refinement::CreateApp {} {
proc ::Refinement::CreateConsole {w} {
proc ::Refinement::ConfigureConsole {w first last} {
proc ::Refinement::ActivateItems {items var {subcheckbutton ""}} {
proc ::Refinement::SelectSolveType {frame} {
proc ::Refinement::ComputePress {w} {
proc ::Refinement::ComputeRelease {w} {
proc ::Refinement::Mesh {} {
proc ::Refinement::ReportQuality {{metric Quality} {tofile ""} {ftype w} {parts ""} {types ""} {nbars 20}} {
proc ::Refinement::CheckElements {} {
proc ::Refinement::FixUncovered {map text} {
proc ::Refinement::FixMissingInternal {map text} {
proc ::Refinement::CheckSingle {map text} {
proc ::Refinement::StartHelp {} {
proc ::Refinement::SetWorkingDir {w} {
proc ::Refinement::SaveParams {w} {
proc ::Refinement::SetGeom {w} {
proc ::Refinement::SetPrismParamsFile {w} {
proc ::Refinement::SetSolverDir {w} {
proc ::Refinement::SetNumProcessors {w} {
proc ::Refinement::PeriodicityMenu {} {
proc ::Refinement::ConfigurePeriodicMenu {w first last} {
proc ::Refinement::AddPeroidicParts {var} {
proc ::Refinement::ApplyPeroidicParts {var} {
proc ::Refinement::GetParts {geomfile} {
proc ::Refinement::ReadPrismParams {} {
proc ::Refinement::WritePrismParams {input_mesh output_mesh {scale 1.0} {relscale 1.0}} {
proc ::Refinement::WriteToSolver_AcuSolve {mesh name bc} {
proc ::Refinement::WriteToSolver_CFD++ {mesh name bc} {
proc ::Refinement::WriteToSolver_CFX {mesh name bc} {
proc ::Refinement::WriteToSolver_Fluent {mesh name bc} {
proc ::Refinement::FindMaxSize {} {
proc ::Refinement::AdjustNumLayers {max_size law height ratio} {
proc ::Refinement::RunBatch {paramfile} {
proc ::Refinement::CheckPrismReturn {ok logfile prism_dom} {
proc interrupt {what args} {
proc ::Refinement::select_families {parts colors {mess ""} {wpos +300+300} {title ""}} {
proc message_add_button {args} {}
proc message_enable_button {args} {}
proc message_remove_button {args} {}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/tableCode/table_editor.tcl]]
proc ::AIEnv::GUIManagement::Widgets::TableEditor::TableEditor {{Name ""}} {
proc ::AIEnv::GUIManagement::Widgets::TableEditor::TableEditorProc {name {cmd ""} args } {
proc ::AIEnv::GUIManagement::Widgets::TableEditor::_create {Name args} {
proc ::AIEnv::GUIManagement::Widgets::TableEditor::UnMapEditorDataStructure {Name} {
proc ::AIEnv::GUIManagement::Widgets::TableEditor::_destroy {Name} {
proc ::AIEnv::GUIManagement::Widgets::TableEditor::CreateTableEditor {Win Name} {
proc ::AIEnv::GUIManagement::Widgets::TableEditor::CreateTableHeadings {Name} {
proc ::AIEnv::GUIManagement::Widgets::TableEditor::ReadFile {Name} {
proc ::AIEnv::GUIManagement::Widgets::TableEditor::Cut {Name} {
proc ::AIEnv::GUIManagement::Widgets::TableEditor::Copy {Name} {
proc ::AIEnv::GUIManagement::Widgets::TableEditor::Paste {Name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/builder.tcl]]
proc ::AIEnv::GUIManagement::SetDefaultGUIParameters {} {
proc ::AIEnv::GUIManagement::BuildGUI {} {
proc ::AIEnv::GUIManagement::BuildSubcomponent {} {
proc ::AIEnv::GUIManagement::BuildSubcomponentItem {NodeID Action} {
proc ::AIEnv::GUIManagement::BuildGUIItem {NodeID Action} {
proc ::AIEnv::GUIManagement::enterRootBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveRootBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterDataEntryZoneBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveDataEntryZoneBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterTextEntryBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveTextEntryBuild {NodeID} {
proc ::AIEnv::GUIManagement::validateTextEntryInput {NodeID TextID {Input ""}} {
proc ::AIEnv::GUIManagement::enterTextEntry2Build {NodeID} {
proc ::AIEnv::GUIManagement::leaveTextEntry2Build {NodeID} {
proc ::AIEnv::GUIManagement::enterTextEntryEditBuild {NodeID} {
proc ::AIEnv::GUIManagement::EditTextEntry {VariableName} {
proc ::AIEnv::GUIManagement::leaveTextEntryEditBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterTextTableEntryBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveTextTableEntryBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterTableEntryBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveTableEntryBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterColorOptMenuBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveColorOptMenuBuild {NodeID} {
proc ::AIEnv::GUIManagement::SelectColorOptMenuCmd {VarName Proc args} {
proc ::AIEnv::GUIManagement::enterTextOptMenuBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveTextOptMenuBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterBmpOptMenuBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveBmpOptMenuBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterEntryButtonBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveEntryButtonBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterCoordsEntryBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveCoordsEntryBuild {NodeID} {
proc ::AIEnv::GUIManagement::SelectCoordsEntryCmd {VarName} {
proc ::AIEnv::GUIManagement::enterEntityButtonBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveEntityButtonBuild {NodeID} {
proc ::AIEnv::GUIManagement::getSelectionImage {type} {
proc ::AIEnv::GUIManagement::getAddMinusImage {type how} {
proc ::AIEnv::GUIManagement::enterEntityAddRemoverBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveEntityAddRemoverBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterEntityChooserBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveEntityChooserBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterRadioFrameBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveRadioFrameBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterCheckFrameBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveCheckFrameBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterFrameBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveFrameBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterRadioGroupBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveRadioGroupBuild {NodeID} {
proc ::AIEnv::GUIManagement::GetRadioItemRowCol {} {
proc ::AIEnv::GUIManagement::enterRadioItemBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveRadioItemBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterDropDownEntryBuild {NodeID} {
proc ::AIEnv::GUIManagement::DropDownAutoLoad {DropName ListVariable Variable} {
proc ::AIEnv::GUIManagement::leaveDropDownEntryBuild {NodeID} {
proc ::AIEnv::GUIManagement::DropDownWroteEntryCmd {Widget ListVar Name IndVar} {
proc ::AIEnv::GUIManagement::DropDownModifyCmd {Widget ListVar VariableName Name IndVar Mode} {
proc ::AIEnv::GUIManagement::DropDownListVariableMonitor {Widget ListVar IndVar args} {
proc ::AIEnv::GUIManagement::SetDropDown {name value} {
proc ::AIEnv::GUIManagement::DropDownModifyHeight {Widget ListVar} {
proc ::AIEnv::GUIManagement::enterIntegerEntryBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveIntegerEntryBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterIntegerEntryIconBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveIntegerEntryIconBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterIconButtonGroupBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveIconButtonGroupBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterTextButtonBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveTextButtonBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterTableBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveTableBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterGroupBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveGroupBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterCheckItemBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveCheckItemBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterCheckItem2Build {NodeID} {
proc ::AIEnv::GUIManagement::leaveCheckItem2Build {NodeID} {    	
proc ::AIEnv::GUIManagement::ToggleGreyCheckItem2 {NodeID varname args} {
proc ::AIEnv::GUIManagement::enterPickScreenCoordBuild {NodeID} {
proc ::AIEnv::GUIManagement::leavePickScreenCoordBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterDataTableBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveDataTableBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterDialogSpaceBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveDialogSpaceBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterTextLabelBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveTextLabelBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterAmpEntryBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveAmpEntryBuild {NodeID} {
proc ::AIEnv::GUIManagement::AmpEntryCmd {VariableName BarVarName Proc args} {
proc ::AIEnv::GUIManagement::enterAnimatorBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveAnimatorBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterScaleBarBuild {NodeID} {
proc ::AIEnv::GUIManagement::entryScaleBarAfter {ms args} {
proc ::AIEnv::GUIManagement::leaveScaleBarBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterListBoxBuild {NodeID} {
proc ::AIEnv::GUIManagement::ListBoxSelectionCmd {ListBox NodeID ParentObject MListName SelectVName Proc args} {
proc ::AIEnv::GUIManagement::UpdateListBoxSelection {ListBox NodeID ParentObject} {
proc ::AIEnv::GUIManagement::leaveListBoxBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterEntityMoverBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveEntityMoverBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterDataEntryDialogBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveDataEntryDialogBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterMultiSelectBuild { NodeID } {
proc ::AIEnv::GUIManagement::leaveMultiSelectBuild { NodeID } {
proc ::AIEnv::GUIManagement::enterMultiSelectRowsBuild { NodeID } {
proc ::AIEnv::GUIManagement::leaveMultiSelectRowsBuild { NodeID } {
proc ::AIEnv::GUIManagement::enterMultiSelectColumnsBuild { NodeID } {
proc ::AIEnv::GUIManagement::leaveMultiSelectColumnsBuild { NodeID } {
proc ::AIEnv::GUIManagement::enterDialogWindowBuild { NodeID } {
proc ::AIEnv::GUIManagement::leaveDialogWindowBuild { NodeID } {
proc ::AIEnv::GUIManagement::enterDialogWindowRootBuild { NodeID }  {
proc ::AIEnv::GUIManagement::leaveDialogWindowRootBuild { NodeID } {
proc ::AIEnv::GUIManagement::enterGreyGroupBuild {NodeID} {
proc ::AIEnv::GUIManagement::GreyGroupProc {NodeID {Update 1}} {
proc ::AIEnv::GUIManagement::leaveGreyGroupBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterGreyGroupItemBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveGreyGroupItemBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterExclusiveGroupBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveExclusiveGroupBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterExclusiveGroupItemBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveExclusiveGroupItemBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterColumnMultiSelectBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveColumnMultiSelectBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterCMSColumnBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveCMSColumnBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterCMSItemBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveCMSItemBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterRFChooserBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveRFChooserBuild {NodeID} {
proc ::AIEnv::GUIManagement::RFChooserSelect {PathVar NodeID GUITree Entry} {
proc ::AIEnv::GUIManagement::enterFileChooserBuild {NodeID} {
proc ::AIEnv::GUIManagement::FileChooserCmd {Name VarName NodeID GUITree ParentDEZ} {
proc ::AIEnv::GUIManagement::RightJustifyEntry {entry} {
proc ::AIEnv::GUIManagement::leaveFileChooserBuild {NodeID} {
proc ::AIEnv::GUIManagement::FileChooserBrowse {PathVariableName NodeID GUITree} {
proc ::AIEnv::GUIManagement::DEZInsert {RowsRequested {PercentRowSize 1}} {
proc ::AIEnv::GUIManagement::enterHotKeyBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveHotKeyBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterHotKeyZoneBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveHotKeyZoneBuild {NodeID} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/cache.tcl]]
proc ::AIEnv::GUIManagement::TryLoadFromCache {} {
proc ::AIEnv::GUIManagement::WriteCache {} {
proc ::AIEnv::GUIManagement::IsCacheFileValid {CacheFile IncludeFileList EnvironmentVarList} {
proc ::AIEnv::GUIManagement::AddIncludeFile {IncludeFileName} {
proc ::AIEnv::GUIManagement::AddEnvironmentVariable {EnvName EnvValue} {
proc ::AIEnv::GUIManagement::FindValidCache {} {
proc ::AIEnv::GUIManagement::unused__WriteCacheIndex {CurrentCacheFile} {
proc ::AIEnv::GUIManagement::unused__PruneCacheIndex {} {
proc ::AIEnv::GUIManagement::CreateCacheFileName {} {
proc ::AIEnv::GUIManagement::GetResourceList {IncludeFileList} {
proc ::AIEnv::GUIManagement::unused__GetCacheIndexFileName {} {
proc ::AIEnv::GUIManagement::unused__FindSafeCacheFileIndex {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/column_select.tcl]]
proc ::AIEnv::GUIManagement::ColumnMultiSelect::RouterProc {Name Cmd args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::RouterProcImpl {Name Cmd args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::_set {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::SetImpl {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::_get {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::GetImpl {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::_create {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::CreateImpl {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::_clear {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::ClearImpl {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::_build {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::BuildImpl {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::VariableTrace {Name VarName Index Op} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::CreateUnderlineFont {TemplateFont} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::HighlightLabel {Win Highlight} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::SelectColumn {Win Name ColLabel} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::_unselect {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::_select {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::UnSelectImpl {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::SelectImpl {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::_query {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::QueryImpl {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::_grey {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::GreyImpl {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::_ungrey {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::UngreyImpl {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::_widgetgrey {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::WidgetGreyImpl {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::_widgetungrey {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::WidgetUngreyImpl {Name args} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::GetParentType {Name} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::GetTitle {Name} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::GetNodeID {Name} {
proc ::AIEnv::GUIManagement::ColumnMultiSelect::GetParent {Name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/dez_environment.tcl]]
proc ::AIEnv::GUIManagement::WriteDEZData {fp} {
proc ::AIEnv::GUIManagement::InNamespaceResetGUI {ResourceFilePath} {
proc ::AIEnv::GUIManagement::DEZ::RouterProc {DEZ {Cmd "proc"} args} {
proc ::AIEnv::GUIManagement::DEZ::_enabletrace {Name args} {
proc ::AIEnv::GUIManagement::DEZ::TraceFunc {Name Name1 Name2 op} {
proc ::AIEnv::GUIManagement::DEZ::SetClean {Name} {
proc ::AIEnv::GUIManagement::DEZ::SetDirty {Name} {
proc ::AIEnv::GUIManagement::DEZ::SetCleanOthers {Name} {
proc ::AIEnv::GUIManagement::DEZ::SetDirtyOthers {Name} {
proc ::AIEnv::GUIManagement::DEZ::_init {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_isbuilt {Name} {
proc ::AIEnv::GUIManagement::DEZ::_gettree {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_setclean {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_setdirty {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_setclean_others {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_setdirty_others {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_addtracebutton {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_addtracebutton_others {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_addloadproc {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_deleteloadproc {Name args} {
proc ::AIEnv::GUIManagement::DEZ::DestroyAll {} {
proc ::AIEnv::GUIManagement::DEZ::_set {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_get {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_proc {Name args} {
proc ::AIEnv::GUIManagement::DEZ::ExtractGlobalVariablesFromUserProc {UserProc} {
proc ::AIEnv::GUIManagement::DEZ::_apply {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_accept {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_cancel {Name args} {
proc ::AIEnv::GUIManagement::DEZ::ExecuteUserProc {Name CandidateFunctionSuffixes {DefaultProc ""}} {
proc ::AIEnv::GUIManagement::DEZ::_create { DEZName args} {
proc ::AIEnv::GUIManagement::DEZ::_exist {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_build {Name args} {
proc ::AIEnv::GUIManagement::DEZ::CheckInitializeEG {name {node node1}} {
proc ::AIEnv::GUIManagement::DEZ::_load {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_unload {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_show {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_hide {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_help {Name args} {
proc ::AIEnv::GUIManagement::DEZ::_path {DEZName Name {node ""}} {
proc ::AIEnv::GUIManagement::DEZ::_pathIgnoreErrors {DEZName Name {node ""}} {
proc ::AIEnv::GUIManagement::DEZ::_getGuiType {DEZName Name key {node ""}} {
proc ::AIEnv::GUIManagement::DEZ::getTypeKeyVars {DEZName type key} {
proc ::AIEnv::GUIManagement::DEZ::addTypeKeyVars {GUITree Node type key} {
proc ::AIEnv::GUIManagement::DEZ::ChangeLabel {DEZName Label} {
proc ::AIEnv::GUIManagement::DEZ::DefaultApply { DEZName } {
proc ::AIEnv::GUIManagement::DEZ::DefaultAccept { DEZName } {
proc ::AIEnv::GUIManagement::DEZ::DefaultHelp { DEZName } {
proc ::AIEnv::GUIManagement::DEZ::DefaultCancel { DEZName } {
proc ::AIEnv::GUIManagement::DEZ::DefaultLoad { DEZName } {
proc ::AIEnv::GUIManagement::DEZ::DefaultUnLoad { DEZName } {
proc ::AIEnv::GUIManagement::DEZ::DefaultAfterLoad { DEZName } {
proc ::AIEnv::GUIManagement::DEZ::ExecuteAdditionalLoadProcs { Name LoadPoint } {
proc ::AIEnv::GUIManagement::DEZShow { DEZName } {
proc ::AIEnv::GUIManagement::DEZHide {} {
proc ::AIEnv::GUIManagement::DEZ::_remove {Name args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/dropdown_button.tcl]]
proc ::AIEnv::GUIManagement::Widgets::DropdownButton::DropdownButton {{name ""}} {
proc ::AIEnv::GUIManagement::Widgets::DropdownButton::DropdownProc {name {cmd ""} args} {
proc ::AIEnv::GUIManagement::Widgets::DropdownButton::_add {name args} {
proc ::AIEnv::GUIManagement::Widgets::DropdownButton::_create {name ParentToolbar} {
proc ::AIEnv::GUIManagement::Widgets::DropdownButton::_destroy {name} {
proc ::AIEnv::GUIManagement::Widgets::DropdownButton::ButtonDown {name} {
proc ::AIEnv::GUIManagement::Widgets::DropdownButton::ButtonUp {name {X ""} {Y ""} {event ""} {but ""} {state ""}} {
proc ::AIEnv::GUIManagement::Widgets::DropdownButton::OnSelectButton {name index {skip 0}} {
proc ::AIEnv::GUIManagement::Widgets::DropdownButton::MbMotion {name X Y} {
proc ::AIEnv::GUIManagement::Widgets::DropdownButton::MbRelease {name X Y but state} {
proc ::AIEnv::GUIManagement::Widgets::DropdownButton::MbPress {name W X Y but state} {
proc ::AIEnv::GUIManagement::Widgets::DropdownButton::ArrowPress {name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/entity_mover.tcl]]
proc ::AIEnv::GUIManagement::NodeMover::RouterProc {Name Cmd args} {
proc ::AIEnv::GUIManagement::NodeMover::RouterProcImpl {Name Cmd args} {
proc ::AIEnv::GUIManagement::NodeMover::_set {Name args} {
proc ::AIEnv::GUIManagement::NodeMover::SetImpl {Name args} {
proc ::AIEnv::GUIManagement::NodeMover::_get {Name args} {
proc ::AIEnv::GUIManagement::NodeMover::GetImpl {Name args} {
proc ::AIEnv::GUIManagement::NodeMover::_move {Name args} {
proc ::AIEnv::GUIManagement::NodeMover::MoveImpl {Name args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/exclusive_group.tcl]]
proc ::AIEnv::GUIManagement::ExclusiveGroup::Clean {Name} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::RouterProc {Name Cmd args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::RouterProcImpl {Name Cmd args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::_set {Name args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::SetImpl {Name args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::_get {Name args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::GetImpl {Name args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::_insertItem {Name args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::InsertItemImpl {Name args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::_buildInit {Name args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::BuildInitImpl {Name args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::BuildRadio {Name} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::BuildDropdown {Name} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::BuildIcon {Name} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::BuildCheck {Name} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::CreateGroupItemFrames {Name} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::_buildFinal {Name args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::BuildFinalImpl {Name args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::_getItemFrame {Name args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::GetItemFrameImpl {Name args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::DropDownHandler {Name Variable} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::GetCurrentGroupName {Name} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::GetGroupItemWidget {ParentName ThisName} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::OnLoad {WidgetName GroupItemName} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::OnUnLoad {WidgetName GroupItemName} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::RadioHandler {Name Value} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::CheckHandler {Name Value} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::MonitorGroupChange {Name VarName Entry op} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::IconHandler {Name Value Variable} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::_widgetgrey {Name args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::WidgetGreyImpl {Name args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::_widgetungrey {Name args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::WidgetUnGreyImpl {Name args} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::GreyIcon {Name State} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::GreyRadio {Name State} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::GreyCheck {Name State} {
proc ::AIEnv::GUIManagement::ExclusiveGroup::GreyDropDown {Name State} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/globals.tcl]]
proc InitGlobals {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/gui_manager.tcl]]
proc ::AIEnv::GUIManagement::SetTreeFrame {win} {
proc ::AIEnv::GUIManagement::SetAIEnvZones {} {
proc ::AIEnv::GUIManagement::SetCATRootDir {Dir} {
proc ::AIEnv::GUIManagement::InitializeGUIBuilder {} {
proc ::AIEnv::GUIManagement::DestroyGUIBuilder {} {
proc ::AIEnv::GUIManagement::Error {ErrorReason} {
proc ::AIEnv::GUIManagement::ShowMessage {Type Message} {
proc ::AIEnv::GUIManagement::SetIconZoneWidths {CommonIconZoneWidth TabbedIconZoneWidth} {
proc ::AIEnv::GUIManagement::DEZHelp {NodeID} {
proc ::AIEnv::GUIManagement::TabbedIconPageRaise {{tName ""}} {
proc ::AIEnv::GUIManagement::TabbedIconPageExist {tName} {
proc ::AIEnv::GUIManagement::MultilineEntityChooser {ListVariableName} {
proc ::AIEnv::GUIManagement::TableEditor {NodeID} {
proc ::AIEnv::GUIManagement::ValidateUserInput {DEZName VariableName Widget Type {LowerBound ""} {UpperBound ""}} {
proc ::AIEnv::GUIManagement::GetFileNameImpl {InFileName OutFileName ErrorReason} {
proc ::AIEnv::GUIManagement::GetFileName {FileName} {
proc ::AIEnv::GUIManagement::RuntimeError {Reason} {
proc ::AIEnv::GUIManagement::WidgetProc {WidgetName args} {
proc ::AIEnv::GUIManagement::InvokeUserActions {actions} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/icon_builder.tcl]]
proc ::AIEnv::GUIManagement::ComputeIconButtonDimensions {} {
proc ::AIEnv::GUIManagement::GetIconToolbarLayout {NumButtons MaxWidth} {
proc ::AIEnv::GUIManagement::ComputeNumberOfTextButtonColumns {MaxWidth} {
proc ::AIEnv::GUIManagement::GetTextButtonRowAndColumn {} {
proc ::AIEnv::GUIManagement::enterTabbedIconZoneBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveTabbedIconZoneBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterIconZoneBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveIconZoneBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterTabbedIconBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveTabbedIconBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterIconBarBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveIconBarBuild {NodeID} {
proc ::AIEnv::GUIManagement::toolBarSelect {win tool {done 0}} {
proc ::AIEnv::GUIManagement::toolBarIconInvoke {tool} {
proc ::AIEnv::GUIManagement::enterIconButtonBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveIconButtonBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterIconToggleBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveIconToggleBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterIconDropBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveIconDropBuild {NodeID} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/layout.tcl]]
proc ::AIEnv::GUIManagement::MainWindowInit {} {
proc ::AIEnv::GUIManagement::Layout {} {
proc ::AIEnv::GUIManagement::CreateConsole {} {
proc ::AIEnv::GUIManagement::SetupGraphicsBasic {} {
proc ::AIEnv::GUIManagement::SetupGraphics {w} {
proc ::AIEnv::GUIManagement::Redraw {w} {
proc ::AIEnv::GUIManagement::FinalGraphicsInit {} {
proc ::AIEnv::GUIManagement::SendCommand {} {
proc ::AIEnv::GUIManagement::OutputMessage { Line {Color ""} {Font ""} {Update 1} {ShowTail 1}} {
proc ::AIEnv::GUIManagement::AIEnvInWB_FixEvents {} {
proc ::AIEnv::GUIManagement::AIEnvInWB_SetupFixEvents {} {
proc ::AIEnv::GUIManagement::InNamespaceBuildAIEnv {FullResourceFilePathName} {
proc ::AIEnv::GUIManagement::DeleteWindowProtocol {} {
proc ::AIEnv::GUIManagement::SetupWindowDestroy {} {
proc ::AIEnv::GUIManagement::ConfigureConsoleZone {on} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/layout_manager.tcl]]
proc onLayoutManagerOK {} {
proc onLayoutManagerLoad {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/menu_builder.tcl]]
proc ::AIEnv::GUIManagement::enterMenuZoneBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveMenuZoneBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterPopupMenuBuild {NodeID} {
proc ::AIEnv::GUIManagement::leavePopupMenuBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterPopupZoneBuild {NodeID} {
proc ::AIEnv::GUIManagement::leavePopupZoneBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterMenuBarBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveMenuBarBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterTopMenuBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveTopMenuBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterMenuBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveMenuBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterMenuItemBuild {NodeID} {
proc ::AIEnv::GUIManagement::Popup {PopupName X Y args} {
proc ::AIEnv::GUIManagement::leaveMenuItemBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterMenuCheckBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveMenuCheckBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterMenuRadioBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveMenuRadioBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterSeparatorBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveSeparatorBuild {NodeID} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/multi_select.tcl]]
proc ::AIEnv::GUIManagement::MultiSelect::RouterProc {Name Cmd args} {
proc ::AIEnv::GUIManagement::MultiSelect::RouterProcImpl {Name Cmd args} {
proc ::AIEnv::GUIManagement::MultiSelect::_set {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::SetImpl {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::_get {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::GetImpl {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::_clear {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::ClearImpl {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::_build {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::BuildImpl {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::SetParentDirty {Name n1 n2 op} {
proc ::AIEnv::GUIManagement::MultiSelect::CreateUnderlineFont {f} {
proc ::AIEnv::GUIManagement::MultiSelect::HighlightLabel {w Highlight} {
proc ::AIEnv::GUIManagement::MultiSelect::SelectRow {w Name RowNumber} {
proc ::AIEnv::GUIManagement::MultiSelect::SelectColumn {w Name ColNumber} {
proc ::AIEnv::GUIManagement::MultiSelect::_query {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::QueryImpl {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::_grey {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::GreyImpl {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::_ungrey {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::UnGreyImpl {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::_select {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::SelectImpl {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::_unselect {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::UnSelectImpl {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::_widgetgrey {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::WidgetGreyImpl {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::_widgetungrey {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::WidgetUnGreyImpl {Name args} {
proc ::AIEnv::GUIManagement::MultiSelect::GetColumnLabels {Name} {
proc ::AIEnv::GUIManagement::MultiSelect::GetRowLabels {Name} {
proc ::AIEnv::GUIManagement::MultiSelect::GetParentType {Name} {
proc ::AIEnv::GUIManagement::MultiSelect::GetParent {Name} {
proc ::AIEnv::GUIManagement::MultiSelect::SetMainFrameTitle {Name} {
proc ::AIEnv::GUIManagement::MultiSelect::GetTitle {Name} {
proc ::AIEnv::GUIManagement::MultiSelect::GetNodeID {Name} {
proc ::AIEnv::GUIManagement::MultiSelect::GetExclusivity {Name} {
proc ::AIEnv::GUIManagement::MultiSelect::GetDirtyFlag {Name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/object_management.tcl]]
proc ::AIEnv::GUIManagement::BeginObjectDefinition {Name {Type ""}} {
proc ::AIEnv::GUIManagement::EndObjectDefinition {} {
proc ::AIEnv::GUIManagement::BeginPredefinedObject {Name} {
proc ::AIEnv::GUIManagement::EndPredefinedObject {} {
proc ::AIEnv::GUIManagement::RegisterObjectImpl {Name Type} {
proc ::AIEnv::GUIManagement::BeginTypeDefinition {Type} {
proc ::AIEnv::GUIManagement::EndTypeDefinition {} {
proc ::AIEnv::GUIManagement::CreateVariable {VariableName {type ""}} {
proc ::AIEnv::GUIManagement::GetFullyQualifiedVariableName {VariableName} {
proc ::AIEnv::GUIManagement::GetLocalVariables {ObjectName} {
proc ::AIEnv::GUIManagement::GetNamespace {Type Name} {
proc ::AIEnv::GUIManagement::GetObject {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/parser.tcl]]
proc ::AIEnv::GUIManagement::ParseError {Reason} {
proc ::AIEnv::GUIManagement::ParseResourceFile {ResFileName} {
proc ::AIEnv::GUIManagement::ParseComment {} {
proc ::AIEnv::GUIManagement::ParseInclude {} {
proc ::AIEnv::GUIManagement::ParseIncludePattern {} {
proc ::AIEnv::GUIManagement::EatWhite {} {
proc ::AIEnv::GUIManagement::RecordName {Name NodeID} {
proc ::AIEnv::GUIManagement::RegisterEOLErrorMessage {Msg} {
proc ::AIEnv::GUIManagement::CheckEOL {Token Quantity} {
proc ::AIEnv::GUIManagement::CheckDefaultName {Token Widget} {
proc ::AIEnv::GUIManagement::CheckNumber {Token Quantity} {
proc ::AIEnv::GUIManagement::Parse {} {
proc ::AIEnv::GUIManagement::ParseUnknown {Token} {
proc ::AIEnv::GUIManagement::ParseEOF {} {
proc ::AIEnv::GUIManagement::ParseDataEntryZoneVariable {} {
proc ::AIEnv::GUIManagement::ParseIconZoneVariable {} {
proc ::AIEnv::GUIManagement::ParseMenuZoneVariable {} {
proc ::AIEnv::GUIManagement::ParseTabbedIconZoneVariable {} {
proc ::AIEnv::GUIManagement::CheckMatchingEnd {Type} {
proc ::AIEnv::GUIManagement::ParseIfDef {} {
proc ::AIEnv::GUIManagement::ParseIfNDef {} {
proc ::AIEnv::GUIManagement::ParseEndIf {} {
proc ::AIEnv::GUIManagement::FlushUntilMatchingEndif {} {
proc ::AIEnv::GUIManagement::ShowName {dez item show} {
proc ::AIEnv::GUIManagement::ResetPicker {dez picker args} {
proc ::AIEnv::GUIManagement::ParseWinMenu {} {
proc ::AIEnv::GUIManagement::ParsePopupMenu {} {
proc ::AIEnv::GUIManagement::ParseHotKey {} {
proc ::AIEnv::GUIManagement::ParseMenuItem {} {
proc ::AIEnv::GUIManagement::ParseTopMenu {} {
proc ::AIEnv::GUIManagement::ParseMenu {} {
proc ::AIEnv::GUIManagement::ParseMenuCheck {} {
proc ::AIEnv::GUIManagement::ParseMenuRadio {} {
proc ::AIEnv::GUIManagement::ParseSeparator {} {
proc ::AIEnv::GUIManagement::ParseTabbedIconBar {} {
proc ::AIEnv::GUIManagement::ParseIconBar {} {
proc ::AIEnv::GUIManagement::ParseIconButtonGroup {} {
proc ::AIEnv::GUIManagement::ParseIconButton {} {
proc ::AIEnv::GUIManagement::ParseIconToggle {} {
proc ::AIEnv::GUIManagement::ParseIconDrop {} {
proc ::AIEnv::GUIManagement::ParseGroup {} {
proc ::AIEnv::GUIManagement::ParseTextEntry {} {
proc ::AIEnv::GUIManagement::ParseTextEntry2 {} {
proc ::AIEnv::GUIManagement::ParseTextEntryEdit {} {
proc ::AIEnv::GUIManagement::ParseTextTableEntry {} {
proc ::AIEnv::GUIManagement::ParseTableEntry {} {
proc ::AIEnv::GUIManagement::ParseColorOptMenu {} {
proc ::AIEnv::GUIManagement::ParseTextOptMenu {} {
proc ::AIEnv::GUIManagement::ParseBmpOptMenu {} {
proc ::AIEnv::GUIManagement::ParseEntryButton  {} {
proc ::AIEnv::GUIManagement::ParseEntityButton {} {
proc ::AIEnv::GUIManagement::ParseCoordsEntry {} {
proc ::AIEnv::GUIManagement::ParseEntityAddRemover {} {
proc ::AIEnv::GUIManagement::ParseEntityChooser {{add_rem 0}} {
proc ::AIEnv::GUIManagement::ParseFrame {} {
proc ::AIEnv::GUIManagement::ParseRadioFrame {} {
proc ::AIEnv::GUIManagement::ParseCheckFrame {} {
proc ::AIEnv::GUIManagement::ParseRadioGroup {} {
proc ::AIEnv::GUIManagement::ParseRadioItem {} {
proc ::AIEnv::GUIManagement::ParseDropDownEntry {} {
proc ::AIEnv::GUIManagement::ParseIntegerEntry {} {
proc ::AIEnv::GUIManagement::ParseIntegerEntryIcon {} {
proc ::AIEnv::GUIManagement::ParseTextButton {} {
proc ::AIEnv::GUIManagement::ParseTable {} {
proc ::AIEnv::GUIManagement::ParseCheckItem {} {
proc ::AIEnv::GUIManagement::ParseCheckItem2 {} {
proc ::AIEnv::GUIManagement::ParseDialogSpace {} {
proc ::AIEnv::GUIManagement::ParseDataEntryDialog {} {
proc ::AIEnv::GUIManagement::ParseDialogWindow {} {
proc ::AIEnv::GUIManagement::ParsePickScreenCoord {} {
proc ::AIEnv::GUIManagement::ParseDataTable {} {
proc ::AIEnv::GUIManagement::ParseGreyGroup {} {
proc ::AIEnv::GUIManagement::ParseGreyGroupItem {} {
proc ::AIEnv::GUIManagement::ParseWizard {} {
proc ::AIEnv::GUIManagement::ParseWizardPage {} {
proc ::AIEnv::GUIManagement::ParseWizardColumn {} {
proc ::AIEnv::GUIManagement::ParseTextLabel {} {
proc ::AIEnv::GUIManagement::ParseAmpEntry {} {
proc ::AIEnv::GUIManagement::ParseAnimator {} {
proc ::AIEnv::GUIManagement::ParseScaleBar {} {
proc ::AIEnv::GUIManagement::ParseListBox {} {
proc ::AIEnv::GUIManagement::ParseEntityMover {} {
proc ::AIEnv::GUIManagement::ParseMultiSelect {} {
proc ::AIEnv::GUIManagement::ParseMultiSelectRows {} {
proc ::AIEnv::GUIManagement::ParseMultiSelectColumns {} {
proc ::AIEnv::GUIManagement::ParseExclusiveGroup {} {
proc ::AIEnv::GUIManagement::ParseExclusiveGroupItem {} {
proc ::AIEnv::GUIManagement::ParseColumnMultiSelect {} {
proc ::AIEnv::GUIManagement::ParseCMSColumn {} {
proc ::AIEnv::GUIManagement::ParseCMSItem {} {
proc ::AIEnv::GUIManagement::ParseRFChooser {} {
proc ::AIEnv::GUIManagement::ParseFileChooser {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/parser_debug.tcl]]
proc ::AIEnv::GUIManagement::DisplayTree {NodeID} {
proc ::AIEnv::GUIManagement::WriteCompareFile {NodeID Action} {
proc ::AIEnv::GUIManagement::enterRootDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveRootDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterMenuZoneDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveMenuZoneDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterMenuBarDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveMenuBarDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterMenuDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveMenuDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterMenuItemDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveMenuItemDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterMenuCheckDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveMenuCheckDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterMenuRadioDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveMenuRadioDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterSeparatorDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveSeparatorDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterTabbedIconZoneDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveTabbedIconZoneDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterIconZoneDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveIconZoneDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterTabbedIconDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveTabbedIconDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterIconBarDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveIconBarDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterIconButtonDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveIconButtonDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterIconToggleDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveIconToggleDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterIconDropDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveIconDropDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterDataEntryZoneDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveDataEntryZoneDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterTextEntryDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveTextEntryDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterTextTableEntryDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveTextTableEntryDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterTableEntryDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveTableEntryDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterEntityChooserDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveEntityChooserDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterFrameDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveFrameDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterRadioGroupDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveRadioGroupDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterRadioItemDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveRadioItemDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterDropDownEntryDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveDropDownEntryDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterIntegerEntryDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveIntegerEntryDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterIntegerEntryIconDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveIntegerEntryIconDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterTextButtonDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveTextButtonDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterTableDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveTableDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterCheckItemDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveCheckItemDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterDialogSpaceDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveDialogSpaceDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterDataEntryDialogDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveDataEntryDialogDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterDialogWindowDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveDialogWindowDebug {NodeID} {
proc ::AIEnv::GUIManagement::enterDialogWindowRootDebug {NodeID} {
proc ::AIEnv::GUIManagement::leaveDialogWindowRootDebug {NodeID} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/refresher.tcl]]
proc ::AIEnv::GUIManagement::SetState {w state} {
proc ::AIEnv::GUIManagement::ToggleGrey {Entity {GreyFlag -1}} {
proc ::AIEnv::GUIManagement::ToggleGreyByNodeID {NodeID {GreyFlag -1} {Update 0}} {
proc ::AIEnv::GUIManagement::ItemToggleGrey { NodeID Action GreyFlag } {
proc ::AIEnv::GUIManagement::enterRootToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveRootToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterTabbedIconZoneToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveTabbedIconZoneToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterIconZoneToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveIconZoneToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterMenuZoneToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveMenuZoneToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterDataEntryZoneToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveDataEntryZoneToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterDialogWindowRootToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveDialogWindowRootToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterMenuBarToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveMenuBarToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterMenuToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveMenuToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterMenuItemToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveMenuItemToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterMenuCheckToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveMenuCheckToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterMenuRadioToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveMenuRadioToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterSeparatorToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveSeparatorToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterTabbedIconToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveTabbedIconToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterIconBarToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveIconBarToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterIconButtonToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveIconButtonToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterIconToggleToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveIconToggleToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterIconDropToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveIconDropToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterTextEntryToggleGrey { NodeID GreyFlag } {
proc ::AIEnv::GUIManagement::leaveTextEntryToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterTextTableEntryToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveTextTableEntryToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterTableEntryToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveTableEntryToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterEntityChooserToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveEntityChooserToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterPickScreenCoordToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leavePickScreenCoordToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterGroupToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveGroupToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterGreyGroupToggleGrey { NodeID GreyFlag } {
proc ::AIEnv::GUIManagement::leaveGreyGroupToggleGrey { NodeID GreyFlag } {
proc ::AIEnv::GUIManagement::enterGreyGroupItemToggleGrey { NodeID GreyFlag } {
proc ::AIEnv::GUIManagement::leaveGreyGroupItemToggleGrey { NodeID GreyFlag } {
proc ::AIEnv::GUIManagement::enterFrameToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveFrameToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterRadioGroupToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveRadioGroupToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterRadioItemToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveRadioItemToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterDropDownEntryToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveDropDownEntryToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterIntegerEntryToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveIntegerEntryToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterIntegerEntryIconToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveIntegerEntryToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterTextButtonToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveTextButtonToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterDataTableToggleGrey { NodeID GreyFlag } {
proc ::AIEnv::GUIManagement::leaveDataTableToggleGrey { NodeID GreyFlag } {
proc ::AIEnv::GUIManagement::enterDialogSpaceGrey { NodeID GreyFlag } {
proc ::AIEnv::GUIManagement::leaveTableToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterTextLabelToggleGrey { NodeID GreyFlag } {
proc ::AIEnv::GUIManagement::leaveTextLabelToggleGrey { NodeID GreyFlag } {
proc ::AIEnv::GUIManagement::anyToggleGreyOn {w} {
proc ::AIEnv::GUIManagement::anyToggleGreyOff  {w} {
proc ::AIEnv::GUIManagement::enterAnyToggleGrey {NodeID GreyFlag } {
proc ::AIEnv::GUIManagement::leaveAnyToggleGrey { NodeID GreyFlag } {
proc ::AIEnv::GUIManagement::enterCheckItemToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveCheckItemToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterCheckItem2ToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveCheckItem2ToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterDialogSpaceToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveDialogSpaceToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterDataEntryDialogToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveDataEntryDialogToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterDialogWindowToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::leaveDialogWindowToggleGrey { NodeID GreyFlag } { 
proc ::AIEnv::GUIManagement::enterListBoxToggleGrey { NodeID GreyFlag } {
proc ::AIEnv::GUIManagement::leaveListBoxToggleGrey { NodeID GreyFlag } {
proc ::AIEnv::GUIManagement::enterEntityMoverToggleGrey {NodeID GreyFlag} {
proc ::AIEnv::GUIManagement::leaveEntityMoverToggleGrey {NodeID GreyFlag} {
proc ::AIEnv::GUIManagement::enterMultiSelectToggleGrey {NodeID GreyFlag} {
proc ::AIEnv::GUIManagement::leaveMultiSelectToggleGrey {NodeID GreyFlag} {
proc ::AIEnv::GUIManagement::enterMultiSelectRowsToggleGrey {NodeID GreyFlag} {
proc ::AIEnv::GUIManagement::leaveMultiSelectRowsToggleGrey {NodeID GreyFlag} {
proc ::AIEnv::GUIManagement::enterMultiSelectColumnsToggleGrey {NodeID GreyFlag} {
proc ::AIEnv::GUIManagement::leaveMultiSelectColumnsToggleGrey {NodeID GreyFlag} {
proc ::AIEnv::GUIManagement::enterExclusiveGroupToggleGrey {NodeID GreyFlag} {
proc ::AIEnv::GUIManagement::leaveExclusiveGroupToggleGrey {NodeID GreyFlag} {
proc ::AIEnv::GUIManagement::enterExclusiveGroupItemToggleGrey {NodeID GreyFlag} {
proc ::AIEnv::GUIManagement::leaveExclusiveGroupItemToggleGrey {NodeID GreyFlag} {
proc ::AIEnv::GUIManagement::enterFileChooserToggleGrey {NodeID GreyFlag} {
proc ::AIEnv::GUIManagement::leaveFileChooserToggleGrey {NodeID GreyFlag} {
proc ::AIEnv::GUIManagement::CheckAutoGreying {NodeID GreyFlag} {
proc ::AIEnv::GUIManagement::GetGreyFlag {Entity} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/selection_logic.tcl]]
proc ::AIEnv::GUIManagement::Picker::RouterProc {Name Cmd args} {
proc ::AIEnv::GUIManagement::Picker::RouterProcImpl {Name Cmd args} {
proc ::AIEnv::GUIManagement::Picker::_set {Name args} {
proc ::AIEnv::GUIManagement::Picker::SetImpl {Name args} {
proc ::AIEnv::GUIManagement::Picker::_get {Name args} {
proc ::AIEnv::GUIManagement::Picker::GetImpl {Name args} {
proc ::AIEnv::GUIManagement::Picker::Highlight {Name color} {
proc ::AIEnv::GUIManagement::Picker::_pick {Name args} {
proc ::AIEnv::GUIManagement::Picker::_cancelpick {Name args} {
proc ::AIEnv::GUIManagement::Picker::CancelPickImpl {Name args} {
proc ::AIEnv::GUIManagement::Picker::PickImpl {Name args} {
proc ::AIEnv::GUIManagement::Picker::CheckUserCancel {Name} {
proc ::AIEnv::GUIManagement::Picker::_showItems {Name args} {
proc ::AIEnv::GUIManagement::Picker::ShowItemsImpl {Name args} {
proc ::AIEnv::GUIManagement::Picker::SelectPointOrXYZ {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectVIDParam {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectPoint {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectCurve {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectCurveOrCompcurve {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectSurf {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectBody {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectDensity {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectPoint0dEl {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectCurve1dEl {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectSurf2dEl {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectBody3dEl {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::Select1dEl {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::Select2dEl {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::Select3dEl {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectAnyEntity {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectNode {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectElem {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectEdge {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectEndpoint {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectGeometry {DEZName ListVariableName NumberOfEntities UseExactNumber GeometryType Add} {
proc ::AIEnv::GUIManagement::Picker::SelectGeometryImpl {DEZName ListVariableName NumberOfEntities UseExactNumber GeometryType Add} {
proc ::AIEnv::GUIManagement::Picker::SelectAnyGeometry {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectAnyGeometryImpl {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectGeometryOrMesh {DEZName ListVariableName NumberOfEntities UseExactNumber GeometryType Add} {
proc ::AIEnv::GUIManagement::Picker::SelectSubset {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectPart {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectPart0d {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectPart1d {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectPart0d1d {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectPart0d1d2d {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectPart2d {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectPart3d {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectPartPrism {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectPartVolume {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectHexCompcurve {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectHexVertex {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectHexEdge {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectHexFace {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectHexBlock {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectStrDomain {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectStrSubFace {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectStrEdge {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectStrVertex {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectStrNode {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectSubpart {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectGeometryOrMeshImpl {DEZName ListVariableName NumberOfEntities UseExactNumber GeometryType Add} {
proc ::AIEnv::GUIManagement::Picker::SelectSubsetImpl {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectPartImpl {DEZName ListVariableName NumberOfEntities UseExactNumber Add Dimens} {
proc ::AIEnv::GUIManagement::Picker::SelectSubpartImpl {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectMesh {DEZName ListVariableName NumberOfEntities UseExactNumber MeshType Add} {
proc ::AIEnv::GUIManagement::Picker::SelectMeshImpl {DEZName ListVariableName NumberOfEntities UseExactNumber MeshType Add} {
proc ::AIEnv::GUIManagement::Picker::SelectVIDParamScreen {DEZName ListVariableName NumberOfEntities UseExactNumber PickType Add} {
proc ::AIEnv::GUIManagement::Picker::SelectScreen {DEZName ListVariableName NumberOfEntities UseExactNumber PickType Add} {
proc ::AIEnv::GUIManagement::Picker::SelectScreenImpl {DEZName ListVariableName NumberOfEntities UseExactNumber PickType Add} {
proc ::AIEnv::GUIManagement::Picker::SelectHexCompcurveImpl {DEZName ListVariableName NumberOfEntities UseExactNumber Add} {
proc ::AIEnv::GUIManagement::Picker::SelectHexEntity {DEZName ListVariableName NumberOfEntities UseExactNumber type {Add 0}} {
proc ::AIEnv::GUIManagement::Picker::SelectHexEntityImpl {DEZName ListVariableName NumberOfEntities UseExactNumber type} {
proc ::AIEnv::GUIManagement::Picker::SelectStrEntity {DEZName ListVariableName NumberOfEntities UseExactNumber type {Add 0}} {
proc ::AIEnv::GUIManagement::Picker::SelectStrEntityImpl {DEZName ListVariableName NumberOfEntities UseExactNumber type} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/text_editor.tcl]]
proc ::AIEnv::GUIManagement::Widgets::TextEditor::TextEditor {{Name ""}} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::TextEditorProc { name { cmd "" } args } {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::_create {name args} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::_destroy {Name Args} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::_loadlist {Name Args} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::_setlistvariable {Name Args} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::_runaftersave {Name Args} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::UnMapEditorDataStructure {Name} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::CreateReadOnly {Name Window} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::CreateEditable {Name Window} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::CreateReadOnlyMenu {Name Window} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::CreateReadOnlyToolbar {Name Window} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::CreateReadOnlyText {Name Window} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::CreateEditableMenu {Name Window} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::CreateEditableToolbar {Name Window} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::CreateEditableText {Name Window} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::InitializeMonitor {Name t} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::MonitorTextWidget {Name TextWidgetProc args} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::UpdateUI {Variable Index Op} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::New {Name} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::Open {Name {FileName ""} {Skip 0}} {
proc  ::AIEnv::GUIManagement::Widgets::TextEditor::LineNumbers {Name} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::Save {Name} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::SaveAs {Name} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::Print {Name} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::Exit {Name} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::FormatReturnData {Name} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::Undo {Name} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::Redo {Name} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::Cut {Name} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::Copy {Name} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::Paste {Name} {
proc ::AIEnv::GUIManagement::Widgets::TextEditor::GetName {Name VarName} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/tokenizer.tcl]]
proc ::AIEnv::GUIManagement::ReadFile {ResFileName} {
proc ::AIEnv::GUIManagement::ReadLine {} {
proc ::AIEnv::GUIManagement::SplitLine {Line List} {
proc ::AIEnv::GUIManagement::CheckQuote {Str} {
proc ::AIEnv::GUIManagement::GetToken {} {
proc ::AIEnv::GUIManagement::PeekToken {} {
proc open_with_encoding {name mode} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/wizard_builder.tcl]]
proc ::AIEnv::GUIManagement::enterWizardRootBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveWizardRootBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterWizardBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveWizardBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterWizardPageBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveWizardPageBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterWizardColumnBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveWizardColumnBuild {NodeID} {
proc ::AIEnv::GUIManagement::enterWizardColumnNameBuild {NodeID} {
proc ::AIEnv::GUIManagement::leaveWizardColumnNameBuild {NodeID} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ai_env/techTK/wizard_environment.tcl]]
proc  ::AIEnv::GUIManagement::Wizard::RouterProc {Wizard {Cmd "proc"} args} {
proc ::AIEnv::GUIManagement::Wizard::_set {Name args} {
proc ::AIEnv::GUIManagement::Wizard::_get {Name args} {
proc ::AIEnv::GUIManagement::Wizard::_proc {Name args} {
proc ::AIEnv::GUIManagement::Wizard::_show {Name args} {
proc ::AIEnv::GUIManagement::Wizard::_next {Name args} {
proc ::AIEnv::GUIManagement::Wizard::_prev {Name args} {
proc ::AIEnv::GUIManagement::Wizard::_finish {Name args} {
proc ::AIEnv::GUIManagement::Wizard::_querynext {Name args} {
proc ::AIEnv::GUIManagement::Wizard::_setnext {Name args} {
proc ::AIEnv::GUIManagement::Wizard::_destroy {Name args} {
proc ::AIEnv::GUIManagement::Wizard::_cancel {Name args} {
proc ::AIEnv::GUIManagement::Wizard::_compute_size {Name args} {
proc ::AIEnv::GUIManagement::Wizard::_create {Name args} {
proc ::AIEnv::GUIManagement::Wizard::_addpage {Name args} {
proc ::AIEnv::GUIManagement::Wizard::_getpageframe {Name args} {
proc ::AIEnv::GUIManagement::Wizard::ExecuteUserProc {Name CandidateFunctionSuffixes {DefaultProc ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/anno_auto.tcl]]
proc annotation_form {} {
proc annotation_update {} {
proc annotation_add {type} {
proc annotation_create {type cmd} {
proc annotation_remove {type} {
proc annotation_edit {type} {
proc annotation_clear {type} {
proc annotation_create_logo {} {
proc annotation_save {file} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/autohex.tcl]]
proc check_advanced_mesher_ok {} {
proc cad_get_menu {pos} {
proc tool_command {} {
proc tool_setup {} {
proc add_mesh_button {r c {where model}} {
proc make_tool_windows {} {
proc about_autohexa {} {
proc ceil {v} {
proc floor {v} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/autohex_start.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/bocos_auto.tcl]]
proc auto_bocos_edit {} {
proc auto_bocos_save {} {
proc auto_list_families {add_flag} {
proc auto_bocos_families {} {
proc auto_bocos_setpids {{full full} {reduced reduced}} {
proc object_family_list_with_bocos {obj} {
proc highlight_object_sides_in_family {fam} {
proc get_object_sides_in_family {fam dim} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/cad_auto.tcl]]
proc cad_form {} {
proc cad_build_topo {} {
proc cad_clear {ask} {
proc cad_reset_data {} {
proc cad_load_tetin {} {
proc cad_save {what} {
proc cad_edit_icemcfd {} {
proc cad_file_is_tetin {tet} {
proc cad_load_extra_widgets {mat d} {
proc cad_load_extra_widgets_iges {mat d} {
proc cad_already_there_warning {} {
proc cad_load_iges {{iges ""}} {
proc cad_load_dwg {{dwg ""}} {
proc cad_load_acis {{acis ""}} {
proc cad_load_mesh {type name} {
proc cad_do_load_tetin {tetin rescale got_units} {
proc cad_rescale {} {
proc cad_load_tetin_for_current {} {
proc cad_clear_current {ask} {
proc cad_shape_from_tetin {shape file noisy} {
proc cad_shape_from_bsplines {shape objs} {
proc cad_simplify_current {} {
proc cad_edit_material_points {} {
proc cad_extract_corners {} {
proc cad_import_iges_surf {type name job scale} {
proc cad_init {} {
proc cad_make_shape {} {
proc cad_clear_bsplines {sh} {
proc cad_put_shape {sh newf data} {
proc cad_set_shape {} {
proc cad_to_shape {types how for_obj only_2d obtype} {
proc cad_split_surfaces {ss planes} {
proc cad_new_surf {type n} {
proc cad_set_small {nb} {
proc cad_surfs_to_shape {types makenew for_obj surfs name only_2d def_type} {
proc cad_surfs_to_cad_object {surfs} {
proc cad_assign_face_families {obj sh surfs} {
proc cad_create_multiple {how {def_type ""}} {
proc cad_regenerate {} {
proc cad_toggle_show {} {
proc cad_blank_below_minfeature {} {
proc cad_before_delete {obj} {
proc cad_edit_options {full} {
proc cad_blank_surface {} {
proc cad_unblank_surface {} {
proc cad_change_family {} {
proc cad_select_surfaces {} {
proc cad_edit_families {} {
proc cad_update_families {} {
proc cad_delete_surface {} {
proc cad_delete_unused_family {} {
proc cad_get_bbox {} {
proc cad_convert_iges_tetin {name tetin iparta} {
proc cad_convert_step_tetin {name tetin} {
proc cad_convert_tetin_step {tin step do_iges} {
proc cad_convert_dwg_tetin {name tetin} {
proc cad_convert_acis_tetin {name tetin} {
proc cad_save_unused {} {
proc cad_reload_unused {} {
proc object_show_geo_selected {im on} {
proc cad_set_create_menu {single menu} {
proc get_fam_visible {v}  { 
proc get_geom_visible {v} { 
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/check_auto.tcl]]
proc model_check {{noisy 1} {from_meshing 0}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/commands_autohex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/copymove_auto.tcl]]
proc edit_move_set_units {prefix} {
proc edit_move_object_or_group {copy} {
proc edit_move {copy {collection ""} {colltype ""}} {
proc copy_move_close {} {
proc make_transform_form {d prefix all_options_variable} {
proc apply_transformation {obj prefix} {
proc apply_transformation_shape {shape prefix} {
proc get_transformation_cmds {prefix} {
proc edit_move_apply {form copy {settings ""}} {
proc edit_move_exprs {sh how args} {
proc edit_move_object_location_exprs {obj how args} {
proc do_object_transformation {obj prefix} {
proc move_whole_object {obj off} {
proc transform_object_coords {obj pref suff info} {
proc transform_side_name {name sh how arglist} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/csv_auto.tcl]]
proc flotherm_data_equivalent { title } {
proc default_csv_output_params {} {
proc csv_export_simple_object_parameters { o } {
proc csv_export_simple_shape_geometry { o } {
proc csv_export_object_geometry { file } {
proc csv_save_object_titles {fo key namelist obtype} {
proc title_from_object_params { val obj_type } {
proc csv_save_objects {fo key namelist} {
proc extra_parameter_data_from_prefix {prefix group} {
proc csv_group_params_set {indices ex_frame} {    
proc csv_group_params_unset {indices ex_frame} {
proc choose_next_csv_output_params {id} {
proc csv_output_select_all {val ex_frame num_vars} {
proc csv_file_export_object_geometry {} {    
proc csv_file_import_object_geometry {} {
proc csv_get_ob_types {} {
proc csv_choose_object_type {} {
proc csv_load_object_groups  { file } {
proc csv_get_data_type {} {
proc csv_get_sep_char {} {
proc csv_get_length_options {} {
proc csv_unit_get_options {unit} {
proc edit_csv_export_params { {edit_choices 0} } {
proc compare_export_arrays { ary1 ary2 } {
proc file_add_separating_character {d} {
proc csv_shapes_get_options {} {
proc get_shape_params_with_type { type } {
proc csv_object_get_column_headers {} {
proc csv_get_column_headers { col_vals {nverts ""} {changes ""}} {
proc transform_shape_length_scale { sh_data } {
proc check_for_blank_int_or_float_data { i sh_data } {
proc add_diff_flag_to_shape_data { sh_data } {
proc make_all_new_objects {titles} {
proc update_existing_ob_with_csv_data {old_ob {sh_data ""} {ob_data ""} {notes_val ""}} {
proc create_new_ob_from_csv_data {{sh_data ""} {ob_data ""} notes_val ob_name} {
proc update_existing_and_create_new_objects {titles} {
proc csv_make_objects {} {
proc skip_to_choose_next_data {} {
proc csv_load_objects  { } {
proc csv_sync_listboxes {w option_lists default_headers value_lists tabdata {fixed_option_list ""}} {
proc csv_sync_listboxes_update {w} {
proc csv_sync_listboxes_yview {pref ncols args} {
proc get_csv_sides_data {key} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/diff_auto.tcl]]
proc diff_job {jobname} {
proc diff_contents {cont1 cont2 name1 name2} {
proc diff_object {obj1 obj2 name1 name2} {
proc diff_object_value {obj1 obj2 name1 name2 title val} {
proc diff_shapes {sh1 sh2 name1 name2} {
proc diff_shape_value {sh1 sh2 name1 name2 title val} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/domainfile.tcl]]
proc dmess {s} {
proc load_domain {filename {pref full} {suff ""} {map_group_numbers_to ""}} {
proc domain_count_elements {file} {
proc domain_count_nodes {file} {
proc save_domain {file pref gpref} {
proc domain_name_id_mapping {file list} {
proc domain_check_structured_couplings {file} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/dxf.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/edit_auto.tcl]]
proc make_edit_window {} {
proc edit_set_subform {w} {
proc edit_make_model_window_bottom {} {
proc edit_scroll_key {dir} {
proc edit_update_mtype {type} {
proc fix_shape_data {var sub op} {
proc fix_diff_flag_label {args} {
proc edit_object_form {w} {
proc edit_select_action {w pos} {
proc edit_selection_set {obj {list ""}} {
proc edit_selection_put_type {type} {
proc edit_selection_add {obj {list ""}} {
proc edit_selection_delete {obj {list ""}} {
proc edit_selection_rename {oname nname {list ""} {resort 1}} {
proc edit_listsort_compare {p1 p2} {
proc edit_selection_sort {{list ""}} {
proc edit_motion_form {w} {
proc edit_buttons_form {w} {
proc edit_back_to_top {on} {
proc edit_update_active {obj {a ""}} {
proc edit_toggle_current_active {{obj ""} {reverse 0} {undo 1}} {
proc edit_toggle_current_visible {{obj ""} {reverse 0}} {
proc edit_object_to_var {obj var uvar} {
proc edit_modify_params {{ask_if_cancel 1}} {
proc edit_modify_params_sub {ask_if_cancel} {
proc edit_rename_object {obj on nn} {
proc edit_update_object {obj} {
proc set_model_data_and_obj {var val} {
proc set_model_data_and_obj_units {var val} {
proc edit_check_outside {obj undo_if_cancel} {
proc edit_reset_params {{both 1}} {
proc edit_reset_one_param {var} {
proc edit_modify_object {obj obp {shtype ""} {shp ""}} {
proc edit_modify_shape {obj name params} {
proc edit_modify_object_units {obj units} {
proc edit_modify_shape_units {obj name units} {
proc edit_multiple_objects {obtype objects} {
proc edit_set_params {type genus section shape nowin} {
proc edit_shape_list_names {} {
proc edit_shape_get_by_name {name} {
proc edit_put_top_menus {type genus section stype nogeo} {
proc edit_current_options {what} {
proc edit_set_category {what option {put_undo 1}} {
proc edit_set_shape {obj sh {sect cur} {initialize 1}} {
proc edit_do_set_shape {obj sh sect initialize} {
proc edit_buttons {form type} {
proc edit_sub_buttons {form} {
proc edit_done {type} {
proc edit_form_is_up {} {
proc edit_current_object {{group_obtype ""}} {
proc update_current_transparency {var args} {
proc edit_current_shapedata {} {
proc edit_model_form {d type {only_genus ""}} {
proc edit_model_form_raise {nb} {
proc edit_model_form_shapetype {notebook d type sname stitle shapes create} {
proc edit_model_form_shapetype_create {d type shapes} {
proc edit_check_sections_changed {} {
proc edit_put_shape {shape nowin obtype genus} {
proc edit_entry_advance {form num dir} {
proc edit_win_label {w text var dir basevar} {
proc edit_win_label_configure {w text var dir basevar} {
proc edit_win_align {var dir basevar {dirname ""} {offsetval ""} {offsetsign ""}} {
proc edit_select_point {w vars basevar label} {
proc edit_win_align_point {vars basevar} {
proc edit_get_component {mess dir var uvar} {
proc get_3pts {} {
proc edit_circ_from_3pts {} {
proc edit_shapes_possible {obj genus section} {
proc edit_objects_with_shape {sht} {
proc edit_copyfrom {} {
proc edit_clean_up_all {} {
proc edit_create_button {type drag {but ""}} {
proc drag_current_object_move {xr yr} {
proc drag_current_object_end {but oldm oldr} {
proc app_domain_autoscale {{factor 1.0} {complain 1}} {
proc app_domain_set {bmin bmax diff} {
proc app_initialize_domain {obj shape sectname domain} {
proc get_domain_bbox {{scale 1} {except ""} {inc_slack 1}} {
proc fix_model_data {var sub op} {
proc edit_plane_widgets_model {w r allow_none} {
proc fix_diff_flag_label_model {args} {
proc put_diff_model_menu {w r incl {col 1}} {
proc update_edit_window_model_quad {w nv {update_cmd ""}} {
proc app_make_edit_window_model_quad {w {update_cmd ""}} {
proc update_edit_window_model_hexa {w nv} {
proc app_make_edit_window_model_hexa {w} {
proc texture_list {} {
proc texture_select {var} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/edit_subforms.tcl]]
proc put_plane_widgets {w varname row col also_none
proc put_axis_widgets {w varname row col} {
proc edit_container_win {w} {
proc update_container_bbvars {} {
proc edit_container_form {w type varname row} {
proc edit_hexa_win {w} {
proc edit_hexa_win_bot {w} {
proc edit_hexa_form {d type varname row} {
proc edit_ellipse_win {w} {
proc edit_ellipse_form {w type varname row} {
proc edit_sphere_win {w} {
proc edit_sphere_win_bot {w} {
proc edit_sphere_form {w type varname row} {
proc edit_cad_win {w} {
proc edit_cad_do_scale {} {
proc edit_cad_do_trans {} {
proc edit_cad_form {w type varname row} {
proc edit_repack_cad_win {{w ""}} {  return
proc correct_edit_cyl_win {w} {
proc edit_cyl_win_bot {w} {
proc edit_repack_cyl_win {{w ""}} {
proc edit_cyl_form {w type varname row} {
proc edit_circ_win {w} {
proc edit_circ_win_bot {w} {
proc edit_circ_form {w type varname row} {
proc edit_none_win {w} {
proc update_edit_none_win {w nv} {
proc edit_none_form {d type varname row} {
proc edit_quad_win {w} {
proc edit_quad_win_bot {w} {
proc update_edit_quad_win {w nv} {
proc edit_quad_form {w type varname row {change_plane_callback ""}} {
proc edit_incline_win {w} {
proc edit_incline_win_bot {w} {
proc update_edit_incline_win {w nv} {
proc edit_incline_form {d type varname row} {
proc edit_oval_win {w} {
proc edit_oval_win_bot {w} {
proc edit_oval_form {w type varname row} {
proc edit_polygon_win {w} {
proc edit_polygon_form {d type varname row} {
proc edit_poly_win_populate {w {varname shape_data}} {
proc edit_poly_win_select {w varname choice} {
proc edit_screen_select_polygon {sh} {
proc update_edit_polygon_win {w nv {varname shape_data}} {
proc edit_poly_win_add {w {varname shape_data}} {
proc edit_poly_win_remove {w {varname shape_data} {varunits shape_data_units}} {
proc edit_poly_changes {{varname shape_data}} {
proc edit_polygon_pick {w} {
proc edit_pipe_win {w} {
proc edit_pipe_form {d type varname row} {
proc edit_pipe_win_populate {w {varname shape_data}} {
proc edit_pipe_pick {w} {
proc edit_pipe_win_select {w choice} {
proc edit_screen_select_pipe {sh} {
proc update_edit_pipe_win {w nv} {
proc edit_pipe_win_add {w} {
proc edit_pipe_win_remove {w} {
proc edit_pipe_changes {} {
proc edit_plane_widgets {w r allow_none} {
proc edit_axis_widgets {w r} {
proc edit_angle_widgets {w r c} {
proc edit_sign_widgets {w r c} {
proc put_diff_menu {w r incl {col 1}} {
proc make_diff_frame {w varname numopts geo} {
proc update_diff_flag {varname} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/expression.tcl]]
proc expression_evaluate {expr {defval 0} {defunits ""} {param_func expression_param}} {
proc expression_param {name defval} {
proc expression_rename_param {oldname newname objlist} {
proc expression_find_affected {} {
proc expression_no_shapes_in_trial {} {
proc expression_update_from_range {v} {
proc expression_object_changes_in_trials {obj} {
proc expression_object_changes_in_trials_setup_materials {} {
proc expression_edit_setup {} {
proc expression_edit_appropriately {} {
proc expression_edit {} {
proc expression_edit_finish {{only ""}} {
proc expression_new {scr} {
proc expression_currently_used {} {
proc expression_list_trials {{all 1}} {
proc expression_param_random_order {all} {
proc expression_trial_no_geo_change {tr1 tr2} {
proc expression_trials {} {
proc expression_set_list {w y} {
proc expression_check_trials {} {
proc expression_set_trial {vals {fast 0} {noisy 1}} {
proc expression_delete_trial {tr i} {
proc expression_update_shapes {} {
proc expression_cur_trial {} {
proc expression_foreach_trial {cmd {before_start_cmd ""}} {
proc expression_count_trials {} {
proc expression_summarize {trialpref usetrialpref} {
proc expression_print_usedby {n} {
proc expression_set_some {vals} {
proc expression_set_some_file {file} {
proc expression_edit_values_and_trials {{which ""}} {
proc expression_edit_values_form {pa names} {
proc expression_edit_values_new {} {
proc expression_edit_values_cleanup {} {
proc expression_edit_values_add {pa i n objs} {
proc expression_edit_trials_form {d names} {
proc expression_edit_trials_new {} {
proc expression_set_trial_names {force forcerestart} {
proc check_for_duplicated_trial_names {} {
proc expression_edit_trials_reset {force} {
proc expression_edit_select_all {} {
proc expression_edit_put_trial {tr name} {
proc expression_edit_possible_restarts {except} {
proc expression_edit_do_reset {} {
proc expression_write_values {file tr} {
proc expression_set_random_trials {names vals restartid order set replace} {
proc expression_ensure_variable_has_value {var val} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/file_auto.tcl]]
proc file_notes {} {
proc file_subgeo {form but} {
proc file_import_points_lines {what} {
proc file_import_surfaces_curves {what} {
proc file_import_new_job {what} {
proc file_import_extra_widgets_points_lines {d} {
proc file_import_extra_widgets_new_job {d} {
proc file_save {ask {version ""} {part ""} {switch_version 1} \
proc file_save_extra_widgets {d} {
proc get_print_cmd {file which} {
proc file_quit {{ask 0}} {
proc do_quit {} {
proc file_shell {} {
proc file_pguide {} {
proc update_parameters_and_remesh {file} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/fluent_uns.tcl]]
proc write_fluent_uns {fp} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/global_auto.tcl]]
proc grid_set_type_global {} {
proc edit_grid_global {d} {
proc grid_runonce_global {gfile mfile efile pfile mapfile do_part suff inc_others} {
proc grid_run_global_region {rname mfile} {
proc global_merge_files {mfile suffixes mapfile} {
proc merge_domain_files {args} { puts $args }
proc objrange_cmp {r1 r2} {
proc write_cart_file {file rname mapfile mfile} {
proc global_stations {rname dir ask trans} {
proc global_loc_to_index {sub loc dir} {
proc global_spacing {rname count_var start_var end_var incr_var
proc grid_edit_global_perobject {} {
proc grid_global_perobject_type {sh} {
proc grid_global_perobject_one {obj sh} {
proc grid_global_perobject_toshape {sh} {
proc grid_global_perobject_toshape_region {p1 p2} {
proc grid_global_perobject_copyto {} {
proc grid_global_perobject_chbut {sh but on} {
proc grid_global_perobject_copy_toshape {sh} {
proc list_ratios {} {
proc grid_edit_global_ratios {} {
proc ratio_newline {} {
proc ratio_addline {name} {
proc ratio_delete {d num name} {
proc list_subgrids {} {
proc grid_edit_global_subgrids {} {
proc subgrid_newline {} {
proc subgrid_addline {name} {
proc subgrid_delete {d num name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/grid_auto.tcl]]
proc edit_grid {has_mesher has_tetra has_global has_hexa has_iceboard} {
proc grid_mesh_type_form {w c1 c2} {
proc grid_update_type_specific {} {
proc edit_grid_check_meshers {} {
proc grid_generate {{prefix full} {type ""}} {
proc grid_runonce {grid_type gfile mfile efile pfile mapfile \
proc grid_which_mesh_separate {} {
proc grid_get_sizes {do_part} {
proc grid_get_objects_inside_and_outside {for_auto_mesher do_part inc_others use_sep} {
proc grid_make_couplings_from_separate_meshes {outer_numbers} {
proc grid_stop_mesher {} {
proc grid_write_mapping {mapfile suff} {
proc grid_object_description {num} {
proc grid_warn_roundoff {part dir} {
proc grid_reload {{force 0} {prefix ""} {full full} {check_qual 1}} {
proc grid_load_mapping {mapping offset suff} {
proc grid_load_domain {file prefix suffices map_tos} {
proc grid_set_exists {on} {
proc en_comp_function {en1 en2} {
proc edit_grid_debug {} {
proc grid_solver_group_toggle {var en op} {
proc grid_cutplane_move {dir} {
proc grid_one_element {} {
proc grid_adj_elements {} {
proc grid_clear_elements {} {
proc should_reload_grid {} {
proc grid_clear {pref {keep_mapping 0}} {
proc grid_update_cutplane {{on 1}} {
proc grid_form_done {} {
proc grid_showmap {m} {
proc grid_update_images {do_cut {err 1}} {
proc grid_update_images_proc {do_cut} {
proc grid_special {{name ""}} {
proc grid_showelems {args} {
proc grid_get_worst {{how depends}} {
proc grid_warn_bad_mesh {} {
proc grid_compute_quality {how noisy} {
proc grid_plot_histo {title bars minv maxv maxh how} {
proc grid_highlight_cmd {w ints arguments solid} {
proc grid_qualmap {create} {
proc set_planecut_units {post} {
proc grid_form_planecut {d geo act set_func color_var} {
proc grid_form_planecut_settype {set_func} {
proc planecut_coeffs_from_ptnorm {} {
proc planecut_ptnorm_from_coeffs {} {
proc planecut_pct_from_ptnorm {} {
proc planecut_update_from_pct {reset_norm} {
proc planecut_animate {} {
proc grid_area_fraction {obj section side {pref reduced}} {
proc grid_area_object {obj section side {pref reduced}} {
proc grid_connectivity {{which full}} {
proc grid_invalidate_connectivity {{which full}} {
proc unused__grid_conformalize {how} {
proc grid_has_only_hexas {} {
proc grid_split_faces {} {
proc grid_dom_to_object {dom} {
proc grid_get_object_list {for_auto_mesher do_part inc_others use_sep} {
proc adjacent_objects {obj} {
proc set_flood_flags_for_shape {shapes which_group {reset 1} {value 1}} {
proc set_flood_flags_for_shape_faces {shapes which_group {reset 1} {value 1}} {
proc grid_locate_cutouts {} {
proc grid_check_for_junk {file} {
proc find_containing_shape_for_created_material {pid} {
proc grid_mark_no_split_faces {} {
proc grid_get_default_fluid_map {} {
proc object_bbox_check_overlap {omin omax imin imax tol_f} {
proc find_point_in_mesh {pos} {
proc grid_vector_to_nearest_centroid {pos} {
proc get_shape_volume_from_mesh {sh} {
proc get_object_volume_from_mesh {obj} {
proc get_object_area_from_mesh {obj} {
proc reload_or_generate_grid {} {
proc grid_make_wire_groups {} {
proc grid_export_ideas {} {
proc grid_export_ideas_get {type name} {
proc grid_export_ideas_set {type name val} {
proc grid_export_ansys {} {
    proc_n 1
proc grid_error_report {command output args} {
proc convert_grid_meshing_units_params { varname oval val } {
proc perobject_form_done_cmd {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/grid_params_table.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/grid_perobject.tcl]]
proc grid_edit_perobject_params {} {
proc grid_perobject_color {obj} {
proc grid_perobject_object_type {obj} {
proc grid_perobject_disable_all {} {
proc grid_edit_perobject_one {what obj} {
proc grid_edit_perobject_params_select {what obj on} {
proc grid_edit_perobject_from_shape {sh tt} {
proc grid_edit_perobject_to_shape {{sh ""} {verbose 0}} {
proc grid_perobject_shape_type {sh} {
proc app_special_perobject_params_generic_compound {what args} {
proc app_special_perobject_params_copy_to_shapes {obj} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/group_auto.tcl]]
proc coll_edit {which} {
proc coll_edit_parameters {con} {
proc coll_reconfigure_visible {} {
proc coll_create {which {name ""}} {
proc coll_put {which name} {
proc coll_list_click {which {name ""}} {
proc coll_putname {which name} {
proc coll_set_current {which con} {
proc coll_makenew {which name {objs ""}} {
proc coll_setname {which name} {
proc coll_rename {} {
proc coll_done {which} {
proc coll_pattern {which op} {
proc coll_region {which op} {
proc coll_delete_action {which} {
proc coll_delete {which coll} {
proc coll_merge_action {which} {
proc coll_merge {to from} {
proc coll_move {which} {
proc coll_copy {which} {
proc coll_op {which op} {
proc coll_add_action {which coll {sh ""} {recundo 1}} {
proc coll_add_object {coll objects {recundo 1}} {
proc coll_remove_action {which coll {sh ""} {recundo 1}} {
proc coll_remove_object {coll obj {recundo 1}} {
proc coll_in {coll obj} {
proc coll_out_without_selection {coll obj} {
proc coll_out {coll obj} {
proc coll_done_action {args} {
proc coll_act_all {which on} {
proc coll_del_all {which} {
proc coll_create_part {which} {
proc coll_save_as_job {} {
proc coll_write {fp obj} {
proc coll_copy_props {which cur_obj_sel} {
proc coll_add {which name obj {sort_tree 0}} {
proc coll_setparam {which name param val} {
proc coll_remove {which name obj} {
proc coll_remove_from_all {obj} {
proc coll_of_object {which obj} {
proc coll_contents {which name {recursive 0}} {
proc coll_contents_object {which obj} {
proc coll_other_contents_object {which obj} {
proc coll_list {which} {
proc coll_new_name {which {pref ""}} {
proc coll_properties {which} {
proc db_objects_in_group_of_object {obj} {
proc db_put_in_groups {obj oldgroups newgroups} {
proc centroid_of_objects {objects} {
proc bbox_of_objects {objects {from_sh ""}} {
proc put_in_entity {obj old new} {
proc app_summary_group_brief {obj} {
proc app_summary_entity_brief {obj} {
proc app_summary_group_detailed {obj} {
proc app_summary_entity_detailed {obj} {
proc coll_summary_brief {what obj} {
proc coll_summary_detailed {what obj} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/hardcopy_auto.tcl]]
proc print_hardcopy {{top .v} {sub ""} {startcmd ""} {endcmd ""}
proc picture_option_form {{top .v} {sub ""} {startcmd ""} {endcmd ""}
proc picture_file_save_extra_widgets {d} {
proc file_hardcopy {{def_name ""} {top .v} {sub ""} {startcmd ""} {endcmd ""} \
proc hardcopy_defaults {} {
proc hardcopy_create { {print_type ""} } {
proc hardcopy_write_file {args} {
proc blt_hardcopy_create { {print_type ""} } {
proc animate_okay {type} {
proc auto_animation_form {form title slab sval elab eval varname
proc animation_file_extra_widgets {slab sval elab eval varname \
proc animation_file_extra_widgets_form {slab sval elab eval varname \
proc auto_animate_subform {aoptf {type default} {ptrace 0}} {
proc auto_animate_stop {type} {
proc check_then_animate {varname update_func suff type} {
proc auto_animate_initialize_vars {type} {
proc auto_do_animate {varname update_func outfile suff type} {
proc create_animation_frame {pref how scale i {x 0} {y 0}  {width 0} {height 0} } {
proc create_fli_html_file {ppm_width ppm_height outfile loopy del} {
proc create_animation {how loopy del infiles outfile {width 0} {height 0}} {
proc file_hardcopy_ps_form {} {
proc print_hardcopy_ps_form {} {
proc hardcopy_win_form {} {
proc p_hardcopy_defaults {} {
proc f_hardcopy_defaults {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/hexa_auto.tcl]]
proc grid_set_type_hexa {} {
proc edit_grid_hexa {d} {
proc grid_runonce_hexa {gfile mfile efile pfile mapfile do_part suff inc_others} {
proc grid_any_hexa_params_used {sh} {
proc grid_set_all_hexa_enabled {on} {
proc grid_edit_hexa_perobject {} {
proc grid_hexa_perobject_type {sh} {
proc grid_hexa_perobject_one {obj sh} {
proc grid_hexa_params {sh} {
proc grid_hexa_sizes_out {} {
proc grid_hexa_sizes_in {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/iceboard_meshing.tcl]]
proc grid_set_type_iceboard {} {
proc edit_grid_iceboard {d} {
proc grid_runonce_iceboard {gfile mfile efile pfile mapfile do_part suff inc_others} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/iges_autohex.tcl]]
proc iges_minmax {x y z} {
proc iges_handle_one_entity {w et pl} {
proc iges_handle_110 {w p1 p2 label level {mkpts 1}} {
proc iges_handle_116 {w p1 label level} {
proc iges_handle_126 {w polynomial k m uknot_list weight_list \
proc iges_handle_128 {w polynomial k1 m1 k2 m2 uknot_list vknot_list \
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/interact_auto.tcl]]
proc tdv_select_action {w button double shape spec geopos pos x y} {
proc tdv_move_action {w button pos x y} {
proc translate_compound_object {obj offset} {
proc tdv_release_action {w button pos x y {what_mod 1}} {
proc anno_select_action {w button double x y} {
proc anno_move_action {w button x y} {
proc anno_release_action {w button x y} {
proc tdv_app_pick_annotation {w x y} {
proc tdv_app_move_annotation {im w ox oy nx ny} {
proc tdv_app_release_annotation {im w} {
proc graph_highlight {obj on {color red}} {
proc auto_get_location {{varname ""} {unitvar ""} {only_endpoints 0}
proc select_shape_feature {type part exclude color} {
proc edit_alignment {how full} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/job_auto.tcl]]
proc job_unload {clear_post clear_form {force 0} {cancel_forms 1}} {
proc job_switch_version {vers clear_post clear_form {force 0}} {
proc job_load {jn version} {
proc job_name_is_valid {jn} {
proc job_load_files {} {
proc save_default_param_values {} {
proc reset_default_param_values {} {
proc update_title {} {
proc job_save {dir version {part ""}} {
proc write_job_file {file} {
proc write_problem_file {file} {
proc write_problem_param {fp what} {
proc fix_problem_units {} {
proc process_exists {pid} {
proc read_array_from_problem_file {file array} {
proc read_variable_from_problem_file {file var} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/library_auto.tcl]]
proc tarfile_open {fname} {
proc tarfile_header {fp} {
proc tarfile_locate {tarfile name} {
proc tarfile_extract {tarfile mask {outdir ""}} {
proc tarfile_read {tarfile name} {
proc library_read_tarfile {dir f} {
proc library_dir {lib} {
proc library_load_all {} {
proc library_list {lib} {
proc library_is_ok {dir} {
proc library_name_and_info {dir} {
proc library_set_name_and_info {dir name info} {
proc unused__library_get_browser {dir} {
proc library_list_sub {dir} {
proc library_project_info {name f {data ""}} {
proc library_object_info {dir file} {
proc library_load_object {dir file part obtype {name ""}} {
proc library_load_part {jobdir bbstart name} {
proc library_save_objects {objects lib {parent_node ""}} {
proc library_copy_library_objects {objects lib parent_node} {
proc file_libraries {create_new} {
proc file_libraries_setup_form {inc_buts d} {
proc file_libraries_init_form {} {
proc file_libraries_edit_accept {d all} {
proc file_libraries_edit_lookup_info {args} {
proc file_libraries_select {name} {
proc file_libraries_update {} {
proc file_libraries_new {} {
proc file_libraries_delete {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/library_browser.tcl]]
proc library_browse_local {dir fields} {
proc library_browse_tarfile {dir tarfile fields} {
proc library_browse_one {dir fields} {
proc library_browse_fields {dir fields data title notes} {
proc library_browse_with_constraints {dirs fields constraints newfields_proc} {
proc library_browse_form {name title constraints display dirs1 newfields_proc \
proc library_browse_select_one {name double numsel} {
proc library_browse_create {name} {
proc library_browse_search {name dirs newfields_proc} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/local_coords.tcl]]
proc model_local_coords {} {
proc model_local_coords_update_objects {one_cs} {
proc model_local_coords_update_one_object {obj} {
proc model_local_coords_set_shape {sh cs} {
proc model_local_coords_list {} {
proc model_local_coords_new_name {already_there} {
proc model_local_coords_set {var ent} {
proc model_local_coords_edit_one {which} {
proc model_local_coords_view {name} {
proc model_local_coords_from_shape {sh} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/macro_auto.tcl]]
proc macro_save {var dir names} {
proc macro_load {var dir names} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/material.tcl]]
proc add_td {title name utype for_types} {
proc model_matentry {w var type tabgeo {act ""} {inc_default 1}} {
proc material_entry_pick_by_name {w vkey mtype ch cur} {
proc mat_edit_definition {cur mtype} {
proc mat_create_custom {vkey mtype} {
proc mat_copy_current {} {
proc mat_get_or_copy_default {name type args} {
proc vdep_res_create_material {from vdep const curve flowlen basearea} {
proc mat_print_to_mess {obj} {
proc list_materials {type} {
proc material_get_primary {obj} {
proc get_material {name {which ""} {error 1}} {
proc list_materials_for_menu {type inc_default} {
proc load_materials {} {
proc reload_materials {} {
proc get_constant_matval {param which matname} {
proc get_constant_matval_object {obj pref} {
proc curve_locate_value {curve tv} {
proc material_build_from_properties {to_cont from_cont} {
proc material_update_object_from_properties {obj} {
proc objects_with_material {matname} {
proc rename_materials_after_loading {objects} {
proc mat_rename {old new} {
proc material_get_default {which} {
proc material_uns_param {mat field} {
proc material_vel_dep_cond {mat} {
proc material_uns_definition {matname mattype {override_vals ""}} {
proc close_var_mat {prefix} {
proc app_make_form_material {d} {
proc accept_if_not_blank_curve {prefix} {
proc material_var {prefix title fieldtype also_vel} {
proc material_text_editor {title prefix utype} {
proc material_graph_editor {title prefix utype} {
proc app_clean_up_material {obj} {
proc mat_composite_conductivity {metal_mat insul_mat layers barea ithick} {
proc mat_edit_form {} {
proc mat_edit_new {} {
proc mat_edit_delete {} {
proc mat_edit_update_type {} {
proc mat_edit_update_subtype {} {
proc mat_write_library {} {
proc mat_append_to_library {objs lib} {
proc mat_read_library {} {
proc mat_get_used_by_object_types {} {
proc mat_change_object_materials {obj mat} {
proc mat_save_from_libraries {} {
proc mat_save_back_to_library {lib} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/med_autohex.tcl]]
proc cad_get_menu {pos} {
proc post_clear {} {}
proc ff_invalidate {} {}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/mesher_auto.tcl]]
proc grid_set_type_auto {} {
proc grid_edit_unit_form {d geo} {
proc edit_grid_auto {d} {
proc grid_get_ttol {{part ""} {dir ""}} {
proc grid_get_ttol_units {{part ""} {dir ""}} {
proc grid_get_sepvals {from_part} {
proc grid_edit_parameters {d} {
proc grid_set_default_sizes {} {
proc creation_order_cmp {obj1 obj2} {
proc objname_cmp {obj1 obj2} {
proc grid_runonce_auto {gfile mfile efile pfile mapfile do_part suff inc_others} {
proc grid_convert_multiblock {} {
proc grid_smooth_auto {} {
proc grid_load_params {pfile ifgreater map_group_numbers_to} {
proc grid_write_input {gfile do_part suff inc_others for_auto_mesher} {
proc grid_write_object_list {fp objects flatten_to_shape do_round from_part} {
proc grid_flush_lines {fp from_part} {
proc grid_write_object {obj flatten_to_shape from_part} {
proc grid_write_shape {sh obj shkey shnames flatten_to_shape from_part} {
proc grid_flatten_to_shape {sh hexa} {
proc grid_any_params_used {sh} {
proc grid_set_all_enabled {on} {
proc grid_edit_perobject {} {
proc grid_perobject_type {sh} {
proc grid_perobject_one {obj sh} {
proc grid_perobject_toshape {sh tt verbose} {
proc grid_perobject_copyto {tt} {
proc grid_perobject_chbut {sh but tt on} {
proc grid_enforce_min_sep {line sepvals ispart part} {
proc grid_enforce_min_sep_coords {coords sepvals obnum ispart part} {
proc grid_min_sep_name {num} {
proc grid_min_sep_mess {num1 num2 dir p1 p2 ispart part} {
proc grid_enforce_min_sep_one {dir new ttol obnum ispart part} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/meshface.tcl]]
proc reduce_mesh_groups {full reduced} {
proc mesh_face_set_marks_and_pids {full reduced keys vol_keys} {
proc sort_by_object {n1 n2} {
proc grid_make_coupling_data {} {
proc coarsen_surface_mesh {pref prefg tol} {
proc delete_unused_quads {full} {
proc ensure_correct_surface_orientation {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/meshinfo.tcl]]
proc mesh_volume_next_to_surface {family} {
proc mesh_boundary_surface_families {} {
proc mesh_adjacent_volume_thickness {family} {
proc mesh_local_coord_system_for_surface {family} {
proc mesh_surface_family_stats {family {dim 2}} {
proc mesh_wire_family_diam {fam} {
proc mesh_display_local_coord_system {family on cent xvec yvec zvec {dim 2}} {
proc mesh_show_pml_box {on xmin xmax ymin ymax zmin zmax} {
proc mesh_show_pml_single {on xmin xmax ymin ymax zmin zmax} {
proc shapes_in_family {fam} {
proc shapes_and_sides_in_family {fam} {
proc family_is_on_only_2d_objects {fam} {
proc mesh_groups_in_family {family dim} {
proc mesh_families_near_groups {groups dim} {
proc wire_local_coord_system {fam} {
proc order_bars_according_to_wires {} {
proc num_sides_for_surface_family {family} {
proc families_with_bocos {bctypes} {
proc count_nodes_with_bocos {bctypes {not_bctypes ""} {also_families ""}} {
proc mesh_area_of_shape {sh {only_side ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/misc.tcl]]
proc print_file {filename} {
proc numsort {names} {
proc lfirst {list} {lindex $list 0}
proc llast {list} {lindex $list [expr {[llength $list] - 1}]}
proc max { a b } { return [expr ($a > $b)? $a : $b] }
proc old_lreplace {list index new} {
proc ldelete {list elem} {
proc lmember {list elem} {
proc first_existing_font {fonts} {
proc read_token {f} {
proc locate_useful_programs {} {
proc get_path {what {check 0}} {
proc static {args} {
proc random {limit} {
proc determine_memory {} {
proc run_background {cmd dir wait {finish_string ""} {ignore_pats ""} \
proc run_background_terminate {} {
proc run_background_extra_check {fp cmd} {
proc run_background_line {fp} {
proc license_server_lost {mess exiting} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/model_auto.tcl]]
proc object_defaults {obtype {which ""}} {
proc object_default_units {obtype} {
proc object_possible_values {obtype param} {
proc edit_new_button {type} {
proc edit_new {{obtype ""} {name ""} {put_undo 1} {shapetypes ""}
proc copy_object_parameters {old new} {
proc copy_shape_parameters {old new excl} {
proc edit_delete {{put_undo 1} {obj ""} {dirty 1}} {
proc edit_delete_1 {obj dirty} {
proc edit_delete_2 {obj} {
proc clear_contents {con} {
proc edit_unselect {} {
proc create_shapes {obj {from_obj ""} {shapetypes ""} {only_sect ""} 
proc set_label_for_shape {sh} {
proc clear_shapes {obj delete} {
proc delete_shape {sh} {
proc relabel_shapes {obj} {
proc shape_configure {sh {obj ""} {initialize 0} {real_shape ""} {recursive 1}} {
proc model_section_fix {} {
proc model_shape_fix {} {
proc make_visible {obj on {recursive 1}} {
proc make_shape_visible {obj shape on {recursive 1}} {
proc make_selected {obj only_sh on} {
proc reconfigure_object {obj {recursive 1}} {
proc update_all_decorations {} {
proc update_decorations {sh {visible 1} {sel 0} {recursive 1}} {
proc model_graph_options_changed {{also_decorations 1}} {
proc model_graph_options_changed_one {obj also_decorations} {
proc model_snap_grid {} {
proc model_do_snap_grid {objects st0 st1 st2 incr0 incr1 incr2} {
proc snap_one_value {start incr val} {
proc change_geometric_values {sh stuff {undo 1}} {
proc update_mtype {{mt ""}} {
proc model_set_current {obj {force 0} {quiet 0}} {
proc shapes_enclose {sh} {
proc model_write {fp {objects ""}} {
proc model_write_object {fp obj indent} {
proc value_is_default {type key val} {
proc unit_is_default {type key un} {
proc model_read {file {check 1} {sort_tree 0}} {
proc skip_rest_of_object {fp} {
proc regular_model_read {fp check only_geo} {
proc names_string_checksum {string} {
proc model_edit_priority {} {
    proc app_clean_up_domain {obj} {
proc clean_up_all_objects {} {
proc do_macro {cmd {vals ""}} {
proc change_object_type {objs type} {
proc change_object_priority {this before} {
proc make_object_type_params_ignore {} {
proc db_list_objects {{type ""} {container ""} {sortmode alpha}} {
proc db_list_for_selection {{type ""} {container ""}} {
proc db_list_objects_recursive {{type ""} {container ""} {sortmode alpha} {also_inactive 0} {stop_when_mesh_sep 0}} {
proc db_list_predicate {predicate} {
proc db_list_all {{type ""} {container ""} {stop_at_mesh_separate ""}} {
proc db_foreach_shape {cmd {cont ""}} {
proc db_new_name {type} {
proc db_ensure_new_name {name} {
proc db_get_name {name {container ""}} {
proc db_shapes {obj {which ""} {shname ""}} {
proc db_sidenames {obj {also_all 1}} {
proc db_shape_sidenames {sh} {
proc db_shape_sidenums {sh} {
proc db_get_sideinfo {sh name {out 1}} {
proc db_shape_from_side {src num} {
proc db_side_name_from_number {sh num} {
proc db_side_number_from_name {sh name} {
proc db_direction_from_side_number {sh snum} {
proc db_side_number_from_direction {sh dir} {
proc db_get_shape {obj} {
proc db_shape_type {obj} {
proc db_side_area {sh sidename} {
proc db_copy {old {newname ""} {container ""} {tree_sort_children 0}} {
proc db_reinit_model {} {
proc db_delete_object {container obj} {
proc db_list_active_types {{for_objface 0}} {
proc db_canon_typename {typename} {
proc db_dirty {which} {
proc db_check_dirty {which} {
proc db_bbox_of_object {obj} {
proc db_size_of_object {obj} {
proc db_subtypes {obj name} {
proc get_object_mass {obj} {
proc simplify_shape_type {obj volc} {
proc shape_currently_uses_param {sh p} {
proc object_currently_uses_param {obj p} {
proc check_advanced_mesher {obj} {
proc has_non_standard_shapes {count_wires objs} {
proc select_shapes_by_screen_region {p1 p2 want_objects} {
proc object_serial_type_number {obj} {
proc check_name_conflicts {} {
proc profile_copymove_object {obj cmds} {
proc profile_changepos_object {obj oldpos newpos} {
proc write_object_documentation {file} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/named_point.tcl]]
proc named_point_update_version {} {
proc named_point_update_xyz {name} {
proc named_point_entry {w var geo act {unitsvar none} {white_dot 1}} {
proc named_point_val_focus {var in {unitsvar ""} {white_dot 1}} {
proc named_point_listbox {w} {
proc named_point_listbox_fill {m} {
proc named_point_listbox_select_one {m y} {
proc named_point_exists {name} {
proc named_point_get {name {defunits ""}} {
proc named_point_set {name sipoint} {
proc named_point_copy {newname oldname args} {
proc named_point_make_new {name args} {
proc named_point_pick_by_name {val unitsvar} {
proc named_point_new_name {} {
proc named_point_new_name_object {objname} {
proc named_point_edit {{name ""}} {
proc named_point_edit_check_object {dummy obj} {
proc named_point_edit_update_object {reset} {
proc named_point_create_xyz_screen_nearest {} {
proc named_point_create_xyz_screen {partname} {
proc named_point_create_xyz_screen_plane {} {
proc named_point_create {obj} {
proc named_point_make_selected {name on} {
proc named_point_delete_for_object {obj} {
proc named_point_delete {name} {
proc named_point_setup {} {
proc named_point_add_one {name vals} {
proc named_point_clear {} {
proc named_point_list_monitors {} {
proc named_point_list_names {} {
proc named_point_show_all {on} {
proc named_point_draw_params {ptname} {
proc named_point_config_xyz {name vis} {
proc named_point_update_all {} {
proc named_point_copymove_object {obj oldobj cmds} {
proc named_point_transform {name cmds} {
proc named_point_copymove {copy names} {
proc named_point_pick_annotation {x y} {
proc named_point_move_annotation {im ox oy nx ny} {
proc named_point_release_annotation {im} {
proc named_point_list_expressions {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/open_auto.tcl]]
proc file_new {} {
proc new_project_entry {w var tabgeo {act ""}} {
proc new_project_file_select {var} {
proc file_job {} {
proc file_select_job {what} {
proc file_merge {{under_part ""}} {
proc file_job_extra_widgets {merge d} {
proc not_yet_file_job_extra_widgets2 {d} {
proc file_job_extra_widgets2 {d} {
proc file_job_extra_widgets2_fill_versions_menu {menu} {
proc file_job_set_recent {what} {
proc file_job_list_servers {} {
proc file_job_select_server {} {
proc file_job_list_remote {current dirs want_dirs sort_type} {
proc directory_is_job {dir} {
proc directory_is_job_new {dir} {
proc file_job_list_versions {jn} {
proc file_job_put {jn} {
proc file_job_put_2 {} {
proc file_job_set_version {vers} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/options_auto.tcl]]
proc options_edit_auto {} {
proc options_edit_auto_reset {} {
proc options_edit_grab_defaults {} {
proc options_edit_display_setup {d} {
proc options_edit_display_save {d allp} {
proc options_edit_editing_setup {d} {
proc options_edit_editing_save {d allp} {
proc options_edit_meshing_setup {d} {
proc options_edit_printing_setup {d} {
proc options_error_report_setup {d} {
proc options_edit_solve_setup {d} {
proc options_edit_post_setup {d} {
proc options_edit_misc_setup {d} {
proc options_edit_auto_graphical_setup {d} {
proc options_edit_auto_graphical_save {d allp} {
proc options_edit_auto_interactive_setup {d} {
proc options_edit_auto_reset_graph {} {
proc unused_options_docolor {but type} {
proc options_edit_auto_done {d allprojects} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/params_auto.tcl]]
proc grid_set_tetra_defaults {which verbose} {
proc grid_set_defaults {which verbose} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/part_auto.tcl]]
proc app_make_form_part_definition {d} {
proc app_make_form_part_meshing {d} {
proc part_slack_align {var dir lab sign} {
proc part_def_from_group {} {
proc group_to_part {cont part} {
proc objects_to_part {objects part} {
proc part_save_to_job {{obj ""}} {
proc part_list_libraries {} {
proc part_load {obj {sort_below 1}} {
proc app_after_form_post_part {} {
proc part_unload {obj} {
proc app_clean_up_part {obj {recursive 1}} {
proc app_verify_part {obj} {
proc part_list_all {obj {also_inactive 1} {stop_if_separate 0}} {
proc meshing_part_containing_object {obj} {
proc db_copy_part {old {newname ""} {container ""}} {
proc part_copy_tree {old new} {
proc part_begin_internal {{newname ""}} {
proc part_end_internal {} {
proc part_switch_model {obj {quiet 0}} {
proc part_do_switch_model {obj {quiet 0}} {
proc part_explode {} {
proc part_get_root {} {
proc object_in_part {obj} {
proc part_make_open {obj open {force 0}} {
proc part_move_object_into {part objects part_is_open {rec_undo 1}} {
proc part_is_ancestor {part sub} {
proc part_num_active_objects {part} {
proc app_apply_transform_part {obj prefix} {
proc part_view_summary {} {
proc create_part_view_summary {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/pipe_auto.tcl]]
proc pipe_model_write {infile} {
proc pipe_model_read {tetfile} {
proc pipe_model_clear {} {
proc pipe_model_defrad {} {
proc pipe_model_create {output_mesh} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/profile.tcl]]
proc model_profentry {w var type tabgeo {act ""} {inc_default 0}} {
proc profile_entry_pick_by_name {w vkey mtype ch cur} {
proc prof_edit_definition {cur mtype} {
proc prof_create_custom {vkey mtype} {
proc prof_copy_current {} {
proc prof_print_to_mess {obj} {
proc list_profiles {type} {
proc get_profile {name {which ""} {error 1}} {
proc list_profiles_for_menu {type {inc_default 0 }} {
proc objects_with_profile {profname} {
proc profile_get_default {which} {
proc profile_uns_param {prof field} {
proc profile_uns_definition {profname {override_vals ""}} {
proc app_make_form_profile {d} {
proc profile_units_fix {pref v num1 num2 varname {ounits "" } { nunits ""}} {
proc app_clean_up_profile {obj} {
proc prof_edit_form {} {
proc prof_edit_new {} {
proc prof_edit_delete {} {
proc prof_get_used_by_object_types {} {
proc prof_change_object_profiles {obj prof} {
proc vdep_res_create_profile {from vdep const curve flowlen basearea} {
proc profile_get_primary {obj} {
proc load_profiles {} {
proc reload_profiles {} {
proc profile_build_from_properties {to_cont from_cont} {
proc profile_update_object_from_properties {obj} {
proc profile_vel_dep_cond {prof} {
proc profile_var {prefix title fieldtype also_vel} {
proc profile_text_editor {title prefix utype} {
proc profile_graph_editor {title prefix utype} {
proc prof_edit_update_subtype {} {
proc prof_write_library {} {
proc prof_read_library {} {
proc get_constant_profval {param which profname} {
proc get_constant_profval_object {obj pref} {
proc curve_locate_value {curve tv} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/projlib_auto.tcl]]
proc auto_load_projlib {tetin_file vis noisy l_surf l_curve l_point l_mat} {
proc auto_define_geom_object {type num} {
proc shape_cad_add_bsplines {shape type names} {
proc update_geom_window {} {
proc update_geom_visible {what how} {
proc auto_save_projlib {file} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/scripting_auto.tcl]]
proc ax_object_create {type namebase shapetype objparams shparams} {
proc ax_object_modify_params {obj objparams} {
proc ax_object_modify_shape_params {obj sect shparams} {
proc ax_object_new_name {namebase} {
proc ax_object_list {type} {
proc ax_object_lookup {name} {
proc ax_macro_start {inpart partname {groupname ""}} {
proc ax_macro_finish {} {
proc ax_macro_standard_buttons {w data dir tabdata {after_load ""}} {
proc ax_get_material {name type} {
proc ax_get_material_param {name type param} {
proc ax_make_custom_material {orig newname {params ""}} {
proc ax_units_get_default {type} {
proc ax_unit_to_si {val unit} {
proc ax_unit_to_user {val unit} {
proc ax_form_edit_shape {w type varname row {change_plane_callback ""}} {
proc ax_form_unitentry {w var unittype tabgeo {activedata ""} {width 8}} {
proc ax_form_matentry {w var mattype tabgeo {activedata ""}} {
proc ax_grid_generate {} {
proc ax_trial_set_names {prefix} {
proc ax_expression_count_trials {} {
proc ax_switch_main_version {} {
proc ax_info {what} {
proc ax_mess {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/server_auto.tcl]]
proc server_start_running {} {
proc server_start {} {
proc server_one_connection {fp other_addr other_port} {
proc server_cmd_read_job {fp} {
proc server_cmd_write_job {fp} {
proc server_check_out {dir} {
proc server_check_in {dir} {
proc server_cmd_list_directory {fp} {
proc server_send_request {data callback datafunc} {
proc server_read_job {name localdir how tag_version_or_date whatfiles} {
proc server_read_job_callback {localdir line fp} {
proc server_write_job {name localdir how tag_version_or_date whatfiles} {
proc server_write_job_datafunc {localdir whatfiles fp} {
proc server_list_directory {current dirs want_dirs sort_type} {
proc server_put_all_files_in_dir {fp dir vers only_files debug} {
proc server_get_one_file_in_dir {fp file size vers debug} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/smoother_auto.tcl]]
proc grid_smooth {domain} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/spread_auto.tcl]]
proc spread_edit {objects show_what} {
proc spread_write {file objects show_what} {
proc spread_shape_params {obtype subtypes shapetypes} {
proc spread_object_params {obtype subtypes shapetypes} {
proc spread_tag_body {fp tag body} {
proc spread_tag_one {fp tag val} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/summary_auto.tcl]]
proc summary_form {} {
proc summary_update {{usewin ""}} {
proc summary_write_file {} {
proc summary_actone {obj} {
proc summary_actall {type on} {
proc summary_deleteall_inactive {type toplev} {
proc summary_delone {obj toplev} {
proc summary_prefix {obj type} {
proc summary_shapeinfo {obj type} {
proc summary_get {obj field {do_coords 1}} {
proc summary_get_initconds {obj} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/summary_html.tcl]]
proc summary_html_write {{fileprefix summary} {objects ""} {subtables 0}
proc summary_html_one_table {fp obtype subtypes desc objects detailed
proc summary_html_header_name {header group} {
proc summary_html_check_object_params_entries {obtype detailed} {
proc summary_html_dump_obparams {} {
proc summary_html_update_obparams {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/summary_sheet.tcl]]
proc summary_sheet {} {
proc summary_get_rows {name handle} {
proc summary_apply_func {var} {
proc summary_reset_func {var} {
proc summary_transfer_func {var to_obj} {
proc summary_delete_func {obj} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/tetin_auto.tcl]]
proc auto_save_tetin {{ssi 0}} {
proc write_tetin_file {file use_families {bbox ""} {also_domain 1} {write_file 1} \
proc write_tetin_find_objects {also_domain do_part inc_others suff use_sep} {
proc diagonal_model_size {} {
proc tetin_prism_family_list {only_famnames} {
proc tetin_free_cutouts_for_solid {} {
proc add_matpoints_to_tetin {file pts} {
proc write_tetin {use_families} {
proc family_for_side {obj sh num} {
proc tetin_set_fluid_family {} {
proc tetin_nice_name {name} {
proc tetin_default_family_name {obj what defs} {
proc tetin_do_ssi {in out} {
proc tetin_compute_offset_scale {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/tetra_auto.tcl]]
proc grid_set_type_tetra {} {
proc edit_grid_tetra {d} {
proc edit_grid_tetra_pparams {} {
proc edit_grid_tetra_tparams {} {
proc grid_tetra_prism_families {} {
proc grid_runonce_tetra {gfile mfile efile pfile mapfile do_part suff inc_others} {
proc grid_any_tetra_params_used {sh} {
proc grid_set_all_tetra_enabled {on} {
proc grid_edit_tetra_perobject {} {
proc grid_tetra_perobject_type {sh} {
proc grid_tetra_perobject_one {obj sh} {
proc grid_tetra_params {sh} {
proc grid_tetra_sizes_out {} {
proc grid_tetra_sizes_in {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/trash_auto.tcl]]
proc trash_add {obj {put_undo 1}} {
proc trash_remove {objs new_parent make_inactive {put_undo 1}} {
proc trash_empty {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/tree_auto.tcl]]
proc tree_init {} {
proc tree_find_form {} {
proc tree_open_close_all {open {tree_node root}} {
proc tree_descendants {tr node} {
proc tree_edit_current_selection {} {
proc tree_can_drag {xtree node {topl ""}} {
proc tree_can_drop {xtree dummy droploc op dtype node} {
proc tree_do_drop {xtree dummy droploc op dtype dummynode} {
proc tree_clear_clipboard {} {
proc tree_copy_to_clipboard {} {
proc tree_paste_from_clipboard {} {
proc tree_open_close_current {{nodes ""} {full 0}} {
proc tree_open_close_node {open node} {
proc tree_check_node_opened {name} {
proc tree_set_node_open {node open} {
proc tree_reconfigure {} {
proc tree_make_popup_menus {} {
proc tree_create_types_menu {sm how} {
proc tree_build {} {
proc tree_build_stuff {} {
proc tree_add_object_to_group {group obj resort} {
proc tree_what_color {obj} {
proc tree_remove_object_from_group {group obj} {
proc tree_remove_object_from_group_without_selection {group obj} {
proc tree_rename_group {group newname} {
proc tree_delete_group {group} {
proc tree_create_group {group objs} {
proc tree_get_image {name1 {name2 ""}} {
proc tree_list_objects {node avoid} {
proc tree_make_type_subtree {node} {
proc tree_make_library_subtree {{force 0}} {
proc tree_library_node_name {dir} {
proc tree_fill_library {dir node} {
proc tree_fill_library_node {parent item dir} {
proc tree_edit_library_info {} {
proc tree_named_point_edit {} {
proc tree_named_point_delete_cmd {} {
proc tree_clear_subtree {node {except ""}} {
proc tree_where_is_object {obj par} {
proc tree_add_object {obj resort {node_tag object_node}} {
proc tree_finish_adding_objects {sibling} {
proc tree_add_object_children {obj node_tag} {
proc tree_find_parent {obj} {
proc tree_sort_children {par} {
proc tree_compare_children_nonobject {node1 node2} {
proc tree_compare_children_object_alpha {node1 node2} {
proc tree_sort_parent {obj} {
proc tree_reposition_one_object {obj} {
proc tree_sort_all {} { 
proc tree_sort_below {node {top_call 1}} {
proc tree_rename_object {obj newname {prefix ""}} {
proc tree_configure_object {obj} {
proc tree_changeactive_object {obj} {
proc tree_changevisible_object {obj} {
proc tree_changepos_object {obj what} {
proc tree_remove_object {obj} {
proc tree_select_object {obj} {
proc tree_reparent_objects {objs} {
proc tree_prune_material_subtrees {opar} {
proc tree_highlight_object {obj} {
proc tree_disable_updates {dis} {
proc tree_make_open {obj} {
proc tree_hit_return {} {
proc tree_make_objects_selected {nodes is_sel} {
proc tree_single_click {node} {
proc tree_double_click {node} {
proc tree_double_click_doit {node} {
proc tree_load_library_object_node {{nodes ""}} {
proc tree_edit_library_object {} {
proc tree_shift_click {node} {
proc tree_control_click {node} {
proc tree_change_selection {objects add} {
proc tree_rightmenu {x y node} {
proc tree_part_is_separately_viewed {obj} {
proc tree_search_library {func} {
proc tree_remove_from_group_action {} {
proc tree_delete_selected {} {
proc tree_part_from_selected {} {
proc tree_selected_objects {flatten} {
proc tree_group_from_selected {} {
proc tree_object_compute {what} {
proc tree_object_create_mon_pt {} {
proc tree_object_edit_mesh_params {} {
proc tree_object_post_face {} {
proc tree_detail {{dir 0}} {
proc tree_highlight {on node} {
proc tree_tearoff_object {{nodes ""}} {
proc tree_opentree_current {open} {
proc tree_rename {} {
proc tree_toggle_current_active {{reverse 0}} {
proc tree_toggle_current_visible {{reverse 0}} {
proc tree_part_is_open {part} {
proc tree_is_selected {obj} {
proc tree_spreadsheet {} {
proc tree_post_selection_add {obj} {
proc tree_post_selection_delete {obj} {
proc tree_post_selection_set {obj} {
proc tree_post_rename {obj} {
proc tree_trash_add {obj} {
proc tree_trash_remove {obj} {
proc tree_trash_remove_all {} {
proc tree_trash_remove_selected {} {
proc tree_named_point_add {name objname {after ""}} {
proc unused__tree_named_point_add_xyz {name {after ""}} {
proc tree_named_point_delete {obj} {
proc tree_named_point_copy_move {copy} {
proc tree_named_point_rename {oldname newname} {
proc tree_search_start {} {
proc tree_search_next {} {
proc tree_search_prev {} {
proc tree_dfs {string node forward} {
proc tree_see {node} {
proc tree_handle_select {tr args} {
proc tree_get_one_object_selected {} {
proc tree_list_selected {} {
proc tree_merge_job {} {
proc tree_load_part {use_cur} {
proc tree_save_part {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/tree_standalone.tcl]]
proc tree_standalone_model_selection {frame double_cmd sel_cmd {width 16} {height 8} {onelevel 0} {object_class_func ""} {single_is_ctrl 0}} {
proc tree_standalone_single_click {frame sel_cmd node} {
proc tree_standalone_double_click {frame sel_cmd double_cmd node} {
proc tree_standalone_shift_click {frame sel_cmd class_func node} {
proc tree_standalone_control_click {frame sel_cmd class_func node} {
proc tree_standalone_model_populate {frame only_type also_groups 
proc tree_standalone_text_color {frame node color} {
proc tree_standalone_model_clear_selection {frame} {
proc tree_standalone_model_get_selection {frame just_name} {
proc tree_standalone_model_set_selection {frame vals} {
proc tree_standalone_model_pick {frombut var only_type setcmd just_name} {
proc tree_standalone_position {frombut {want_w ""} {have_w ""}} {
proc tree_standalone_model_pick_entry {w var only_type tabgeo {act ""} {setcmd ""} {just_name 0}} {
proc tree_standalone_model_pick_single {type name on} {
proc tree_standalone_model_clear_highlights {} {
proc tree_standalone_model_form {w getfunc setfunc only_type title {label ""}} {
proc tree_standalone_model_setall {d setfunc on} {
proc tree_standalone_model_setall_nodes {tr node sel_cmd on} {
proc tree_standalone_model_subform {d getfunc setfunc only_type width height single_is_ctrl} {
proc tree_standalone_model_subform_toggle {setfunc type object on} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/undo_auto.tcl]]
proc undo_reset {} {
proc undo_group {on} {
proc undo_record {undo redo} {
proc undo_action {} {
proc redo_action {} {
proc last_redo_command {} {
proc undo_record_change_shape {args} {
proc undo_record_move_shape {sh commands} {
proc undo_record_change_shtype {sh ntype {otype ""}} {
proc undo_record_change_object {obj vals {oname ""}} {
proc undo_record_change_object_category {obj what old new shvals} {
proc undo_record_create {obj} {
proc undo_record_create_full {obj} {
proc undo_record_delete {objects} {
proc undo_record_create_delete {objects create} {
proc undo_record_trash {objs in} {
proc undo_record_switch_model {obj prev} {
proc undo_record_change_active {obj} {
proc undo_record_move_to_part {part objs} {
proc undo_set_object_values {type name args} {
proc undo_set_shape_values {type name section args} {
proc undo_set_object_category {name what val shvals} {
proc undo_do_move_shape {type name section args} {
proc undo_set_shape_type {type name section shtype} {
proc undo_create_object {type name obparams shparams} {
proc undo_delete_object {type name} {
proc undo_trash {names in} {
proc undo_switch_model {how name} {
proc undo_move_to_part {partname args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/units.tcl]]
proc unit_get_choices {unittype {also ""}} {
proc unit_get_default_choice {unittype} {
proc unit_select_one {unittype default} {
proc unit_get_post_coeffs {num is_vec} {
proc unit_get_flpost_coeffs {name is_vec} {
proc unit_convert {val dims to_external {report_err 1}} {
proc unit_edit {} {
proc unit_edit_setup_form {d} {
proc unit_edit_setup_vars {} {
proc unit_edit_done {args} {
proc unit_sel_cat {} {
proc unit_fix_unit_list {} {
proc unit_set_cur_default {} {
proc unit_update_shape_length_scale {} {
proc unit_sel_unit {} {
proc unit_update_conversion {} {
proc unit_edit_new {} {
proc unit_edit_delete {} {
proc model_unitentry {w var unittype tabgeo {activedata ""}
proc model_unitentry_change_variable {w var unitvar unittype} {
proc model_unitentry_setvar {w unittype unitvar} {
proc futil_unitmenu {w choice_func tabdata varname {activedata ""} \
proc futil_unitmenu_get {w} {
proc futil_unitmenu_set {w val} {
proc futil_update_unitmenu {w func varname command} {
proc futil_update_unitmenu_action {varname val command} {
proc unit_bubble {w varname} {
proc units_curve_convert {curve xunits yunits to_ext num1 num2} {
proc units_convert_object {obj how} {
proc units_get_equivalent {units how} {
proc units_convert_all_objects {how} {
proc convert_all_problem_units {how} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/unit_data.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex/view_auto.tcl]]
proc setup_graphics_window {} {
proc update_visible_grid {} {
proc make_one_graphics_window {win master} {
proc before_draw_func {} {
proc toggle_view_split_mode {} {
proc orient_home_command {} {
proc orient_command {dir} {
proc update_type_visible {t} {
proc graph_toggle_action {} {
proc view_toggle_auto_redraw {} {
proc graph_after_action {} {
proc graph_set_ctrlkey {} {
proc graphics_loc_command {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex_generic/file_generic.tcl]]
proc auto_save_all {{ask 0}} {
proc auto_run_tetra {} {
proc app_after_load {} {
proc file_write_input {} {
proc domain_select {args} {
proc get_boco_topo {} {
proc errormsg {m} { mess "$m\n" red }
proc runxcom {title cmd catfile hitreturn back} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex_generic/form_auto.tcl]]
proc write_formfactors {} {
proc ff_invalidate {} {
proc ff_print {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex_generic/init.tcl]]
proc app_set_directories {jobname} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex_generic/init_autohex_generic.tcl]]
proc directory {{what ""} {do_back 1}} {
proc post_clear {} {}
proc ff_invalidate {} {}
proc set_current_post_object args {}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex_generic/menus_generic.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex_generic/objects_generic.tcl]]
proc family_listentry_all {face} {
proc family_listentry {d name title row what flag {allow_change 1}} {
proc set_current_highlight {what} {
proc summary_families {obj prefs} {
proc assign_face_families {} {
proc volume_types_form {d geo} {
proc app_summary_domain_brief {obj} {
proc app_summary_domain_detailed {obj} {
proc app_verify_domain {obj} {
proc app_make_form_domain {d} {
proc app_make_form_hexa {d} {
proc app_clean_up_hexa {obj} {
proc app_summary_hexa_brief {obj} {
proc app_summary_hexa_detailed {obj} {
proc app_make_form_cyl {d} {
proc app_clean_up_cyl {obj} {
proc app_summary_cyl_brief {obj} {
proc app_summary_cyl_detailed {obj} {
proc app_make_form_polygon {d} {
proc app_after_change_polygon_num_sides {} {
proc app_after_form_post_polygon {} {
proc app_clean_up_polygon {obj} {
proc app_summary_polygon_brief {obj} {
proc app_summary_polygon_detailed {obj} {
proc app_make_form_incline {d} {
proc app_clean_up_incline {obj} {
proc app_summary_incline_brief {obj} {
proc app_summary_incline_detailed {obj} {
proc app_make_form_quad {d} {
proc app_summary_quad_brief {obj} {
proc app_summary_quad_detailed {obj} {
proc app_clean_up_quad {obj} { }
proc app_make_form_circ {d} {
proc app_summary_circ_brief {obj} {
proc app_summary_circ_detailed {obj} {
proc app_clean_up_circ {obj} { }
proc app_make_form_sphere {d} {
proc app_after_change_sphere_num_sides {} {
proc app_clean_up_sphere {obj} {
proc app_summary_sphere_brief {obj} {
proc app_summary_sphere_detailed {obj} {
proc app_make_form_oval {d} {
proc app_after_change_oval_num_sides {} {
proc app_clean_up_oval {obj} {
proc app_summary_oval_brief {obj} {
proc app_summary_oval_detailed {obj} {
proc app_okay_to_mesh_oval {for_auto_mesher obj} {
proc app_make_form_cad {d} {
proc app_clean_up_cad {obj} {
proc app_summary_cad_brief {obj} {
proc app_summary_cad_detailed {obj} {
proc app_make_form_pipe {d} {
proc app_after_form_post_pipe {} {
proc app_clean_up_pipe {obj} {
proc app_summary_pipe_brief {obj} {
proc app_summary_pipe_detailed {obj} {
proc app_initialize_pipe {obj sh shname domain} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex_generic/objects_special.tcl]]
proc app_make_form_hood {d} {
proc app_clean_up_hood {obj} {
proc app_initialize_hood {obj sh shname dom} {
proc app_clean_up_hood_section {obj sh shname domain} {
proc app_transform_hood {sh how args} {
proc app_make_form_person {d} {
proc app_clean_up_person {obj} {
proc app_initialize_person {obj sh shname dom} {
proc app_clean_up_person_section {obj sh shname domain} {
proc person_head_location {obj p1x p2x planex dirx} {
proc app_transform_person {sh how args} {
proc app_decorate_person {sh section obj stuff} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex_generic/obparams_generic.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex_generic/obparams_special.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex_generic/params_generic.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/autohex_generic/polyduct.tcl]]
proc make_polyduct {} {
proc polyduct_add {name} {
proc polyduct_remove {name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/batch_queue/doc/create_documentation.tcl]]
proc create_library_documenation {libdoc_file} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/batch_queue/lib/ansys.tcl]]
proc batch_queue_ansys_submit_job {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/batch_queue/lib/batch_queue.tcl]]
proc batch_queue_get_version {} {
proc batch_queue_cmd_success {} { return "SUCCESS" }
proc batch_queue_cmd_failure {} { return "FAILURE" }
proc batch_queue_job_running {}    { return "RUNNING"    }
proc batch_queue_job_queued {}     { return "QUEUED"    }
proc batch_queue_job_terminated {} { return "TERMINATED" }
proc batch_queue_job_finished {}   { return "FINISHED"   }
proc batch_queue_job_failure {}   { return "FAILURE"   }
proc batch_queue_job_unknown {}    { return "UNKNOWN"    }
proc batch_queue_mode_remote {}     { return "REMOTE" }
proc batch_queue_mode_local {}      { return "LOCAL" }
proc batch_queue_mode_bqs   {}      { return "BATCH_QUEUE" }
proc batch_queue::init_queue { system args } {
proc batch_queue::submit_job { bqid command args } {
proc batch_queue::exec_job { job_token args } {
proc batch_queue::exec_queued_jobs { bqid } {
proc batch_queue::queue_summary { bqid } {
proc batch_queue::queue_is_sane { bqid } {
proc batch_queue::job_token_list { bqid } {
proc batch_queue::get_job_status { job_token } {
proc batch_queue::add_job_attribute { job_token attribute val } {
proc batch_queue::get_job_attribute { job_token attribute } {
proc batch_queue::get_job_elapsed_time { job_token } {
proc batch_queue::is_job_running { job_token } {    
proc batch_queue::are_jobs_running { bqid } {
proc batch_queue::num_jobs_running { bqid } {
proc batch_queue::running_job_token_list { bqid } {
proc batch_queue::is_job_queued { job_token } {    
proc batch_queue::are_jobs_queued { bqid } {
proc batch_queue::queued_job_token_list { bqid } {
proc batch_queue::highest_priority_queued_job { bqid } {
proc batch_queue::hold_job { job_token args } {
proc batch_queue::move_job { job_token bqid_new } {
proc batch_queue::query_job { job_token } {
proc batch_queue::alter_job { job_token args } {
proc batch_queue::add_job_message { job_token message } {
proc batch_queue::resub_job { job_token args } {
proc batch_queue::delete_job { job_token args } {
proc batch_queue::delete_all { bqid } {
proc batch_queue::delete_queue { bqid } {
proc batch_queue::_msg { bqid text {color black} } {
proc batch_queue::_verify_system { bqs } {
proc batch_queue::_job_tmpfiles_list {} {
proc batch_queue::_job_properties_list {} {
proc batch_queue::_get_unique_job_token { {base ""} } {
proc batch_queue::_register_job { bqid args } {
proc batch_queue::_set_job_datum { job_token datum_name val } {
proc batch_queue::_get_job_datum { job_token datum_name } {
proc batch_queue::_remove_job_traces { job_token } {
proc batch_queue::_update_job_status { job_token status } {   
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/batch_queue/lib/gridengine.tcl]]
proc batch_queue_gridengine_submit_job {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/batch_queue/lib/icbqs_client.tcl]]
    proc mess {text {color black}} {
proc batch_queue_icbqs_client_setup { client_id args } {
proc batch_queue_icbqs_client_forget_socket { server port } {
proc batch_queue_icbqs_client_get_socket { server {port ""} } {
proc batch_queue_icbqs_client_is_sane { client_id } {
proc batch_queue_icbqs_client_setup_server { remote_hosts } {
proc batch_queue_icbqs_client_get_idle_server { client_id } {
proc batch_queue_icbqs_client_submit_job { args } { }
proc batch_queue_icbqs_client_exec_job { client_id cshellscript {server ""} { port ""} } {
proc batch_queue_icbqs_client_kill_remote_process { process_id server {port ""} } {
proc batch_queue_icbqs_client_remote_process_exists { process_id server {port ""} } {
proc batch_queue_icbqs_client_remote_filepath_exists { filepath server {port ""} } {
proc batch_queue_icbqs_client_remote_tmp_filepath_get { base extension server {port ""} } {
proc batch_queue_icbqs_client_ensure_filepath_access { file_path server {port ""} } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/batch_queue/lib/icbqs_server.tcl]]
    proc mess {text {color black}} {
    proc cmd_tempfile {fn {suff ""}} {
    proc cmd_chmod {mod file} {
    proc bgerror { args } {
proc batch_queue_job_running {}    { return "RUNNING"    }
proc batch_queue_job_queued {}     { return "QUEUED"    }
proc batch_queue_job_terminated {} { return "TERMINATED" }
proc batch_queue_job_finished {}   { return "FINISHED"   }
proc batch_queue_job_unknown {}    { return "UNKNOWN"    }
proc batch_queue_icbqs_server_port_default {} { return "6791" }
proc batch_queue_icbqs_server_test_echo { seconds } {
proc batch_queue_icbqs_server_test_sigsegv { } {
proc batch_queue_icbqs_server_check_file_path { server_path } {
proc batch_queue_icbqs_server_tmp_filepath_get { base extension } {
proc batch_queue_icbqs_server_get_file { client client_path } {
proc batch_queue_icbqs_server_medbatch_exec { replay_file logfile {icemacn ""} } {
proc batch_queue_icbqs_server_medbatch_progpath {{icemacn ""} {interactive 0}} {
proc batch_queue_icbqs_server_is_command_tcl { command } {
proc batch_queue_icbqs_server_is_command_ok { command } {
proc sst { args } {
proc batch_queue_icbqs_server_start { args } {
proc batch_queue_icbqs_server_open_port { server_port_start {server_port_end 49151} } {
proc batch_queue_icbqs_server_accept_socket { sock addr port } {
proc batch_queue_icbqs_server_accept_input { sock } {
proc batch_queue_icbqs_server_get_datum { what } {
proc batch_queue_icbqs_server_set_datum { what val } {
proc batch_queue_icbqs_server_unset_data {} {
proc batch_queue_icbqs_server_print_data {} {
proc batch_queue_icbqs_server_help {} {
proc batch_queue_icbqs_server_kill_process { process_id } {
proc batch_queue_icbqs_server_process_exists { process_id } {
proc batch_queue_icbqs_server_update_process_status { process_id } {
proc batch_queue_icbqs_server_running_job_pids {} {    
proc batch_queue_icbqs_server_close_socket_cleanly {} {
proc batch_queue_icbqs_server_quit {} {
proc batch_queue_icbqs_server_how_busy_are_you {} {
proc batch_queue_icbqs_server_get_os {} {
proc batch_queue_icbqs_server_get_platform {} {
proc batch_queue_icbqs_server_get_cpu {} {
proc batch_queue_icbqs_server_get_nprocesses {} {
proc batch_queue_icbqs_server_get_free_memory {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/batch_queue/lib/icbqs_server_setup.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/batch_queue/lib/pbs.tcl]]
proc batch_queue_pbs_alter_job { job_identifier args } {
proc batch_queue_pbs_delete_job { job_identifier {args ""} } {
proc batch_queue_pbs_hold_job {job_identifier {args ""}} {
proc batch_queue_pbs_message {job_identifier message_string {args ""}} {
proc batch_queue_pbs_move_job {job_identifier args} {    
proc batch_queue_pbs_release_job {job_identifier {args ""}} {
proc batch_queue_pbs_rerun_job {job_identifier} {
proc batch_queue_pbs_select_jobs {args} {
proc batch_queue_pbs_signal {job_identifier {args ""}} {
proc batch_queue_pbs_status {args} {
proc batch_queue_pbs_submit_job { job_token script args } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/batch_queue/lib/xgrid.tcl]]
proc batch_queue_xgrid_get_job_ident { job_token } {
proc batch_queue_xgrid_set_job_ident { job_token xg_job_identifier } {
proc batch_queue_xgrid_submit_job { job_token script args } {
proc batch_queue_xgrid_job_status { job_token } {
proc batch_queue_xgrid_hold_job {job_identifier {args ""}} {
proc batch_queue_xgrid_delete_job { job_identifier {args ""} } {
proc batch_queue_xgrid_alter_job { job_identifier args } {
proc batch_queue_xgrid_message {job_identifier message_string {args ""}} {
proc batch_queue_xgrid_move_job {job_identifier args} {    
proc batch_queue_xgrid_release_job {job_identifier {args ""}} {
proc batch_queue_xgrid_rerun_job {job_identifier} {
proc batch_queue_xgrid_select_jobs {args} {
proc batch_queue_xgrid_signal {job_identifier {args ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/batch_queue/setup.tcl]]
    proc mess {text args} {
proc batch_queue_lib_setup { which } {
proc batch_queue_lib_test { which } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/batch_queue/tests/test_all.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/batch_queue/tests/test_icbqs_client.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/batch_queue/tests/test_icbqs_server.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/blt2.4/bltDnd.tcl]]
proc blt::InitDrag&DropBindings { widget button cmd } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/blt2.4/bltGraph.tcl]]
proc Blt_ActiveLegend { graph } {
proc Blt_Crosshairs { graph } {
proc Blt_ZoomStack { graph } {
proc Blt_PrintKey { graph } {
proc Blt_ClosestPoint { graph } {
proc blt::ActivateLegend { graph } {
proc blt::DeactivateLegend { graph } {
proc blt::HighlightLegend { graph } {
proc blt::Crosshairs { graph } {
proc blt::ZoomStack { graph } {
proc blt::PrintKey { graph } {
proc blt::ClosestPoint { graph } {
proc blt::AddBindTag { graph name } {
proc blt::FindElement { graph x y } {
proc blt::FlashPoint { graph name index count } {
proc blt::GetCoords { graph x y index } {
proc blt::MarkPoint { graph index } {
proc blt::DestroyZoomTitle { graph } {
proc blt::PopZoom { graph } {
proc blt::PushZoom { graph } {
proc blt::ResetZoom { graph } {
proc blt::ZoomTitleNext { graph } {
proc blt::ZoomTitleLast { graph } {
proc blt::SetZoomPoint { graph x y } {
proc blt::Box { graph } {
proc Blt_PostScriptDialog { graph } {
proc blt::ResetPostScript { graph } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/blt2.4/bltHier.tcl]]
proc blt::HierboxInitBindings { widget } {
proc blt::HierboxAutoScan { widget } {
proc blt::HierboxSelect { widget } {
proc blt::HierboxStartSelect { widget action } {
proc blt::HierboxMotion { widget x y } {
proc blt::HierboxEndSelect { widget x y } {
proc blt::HierboxToggle { widget index } {
proc blt::HierboxTraverse { widget where } {
proc blt::HierboxPage { widget where } {
proc blt::HierboxSearch { widget key } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/blt2.4/bltTabset.tcl]]
proc blt::FindMatchingTab { widget key } {
proc blt::SelectTab { widget } {
proc blt::MendTearoff { widget tab } {
proc blt::MakeTearoff { widget x y } {
proc blt::Tearoff { widget x y  } {
proc blt::InitTabBindings { widget } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/blt2.4/dd_protocols/dd-color.tcl]]
proc dd_send_color {interp ddwin data} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/blt2.4/dd_protocols/dd-file.tcl]]
proc dd_send_file {interp ddwin data} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/blt2.4/dd_protocols/dd-number.tcl]]
proc dd_send_number {interp ddwin data} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/blt2.4/dd_protocols/dd-text.tcl]]
proc dd_send_text {interp ddwin data} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/arrow.tcl]]
    proc ::ArrowButton { path args } { return [eval ArrowButton::create $path $args] }
    proc use {} {}
proc ArrowButton::create { path args } {
    proc ::$path { cmd args } "return \[eval ArrowButton::\$cmd $path \$args\]"
proc ArrowButton::configure { path args } {
proc ArrowButton::cget { path option } {
proc ArrowButton::invoke { path } {
proc ArrowButton::_redraw { path width height } {
proc ArrowButton::_redraw_state { path } {
proc ArrowButton::_redraw_relief { path } {
proc ArrowButton::_redraw_whole { path width height } {
proc ArrowButton::_destroy { path } {
proc ArrowButton::_enter { path } {
proc ArrowButton::_leave { path } {
proc ArrowButton::_press { path } {
proc ArrowButton::_release { path } {
proc ArrowButton::_repeat { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/bitmap.tcl]]
    proc use {} {}
proc Bitmap::get { name } {
proc Bitmap::_init { } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/button.tcl]]
    proc ::Button { path args } { return [eval Button::create $path $args] }
    proc use {} {}
proc Button::create { path args } {
    proc ::$path { cmd args } "return \[eval Button::\$cmd $path \$args\]"
proc Button::configure { path args } {
proc Button::cget { path option } {
proc Button::invoke { path } {
proc Button::_enter { path } {
proc Button::_leave { path } {
proc Button::_press { path } {
proc Button::_release { path } {
proc Button::_repeat { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/buttonbox.tcl]]
    proc ::ButtonBox { path args } { return [eval ButtonBox::create $path $args] }
    proc use {} {}
proc ButtonBox::create { path args } {
    proc ::$path { cmd args } "return \[eval ButtonBox::\$cmd $path \$args\]"
proc ButtonBox::configure { path args } {
proc ButtonBox::cget { path option } {
proc ButtonBox::add { path args } {
proc ::ButtonBox::setbuttonstate {path tag state} {
proc ::ButtonBox::getbuttonstate {path tag} {
proc ButtonBox::itemconfigure { path index args } {
proc ButtonBox::itemcget { path index option } {
proc ButtonBox::setfocus { path index } {
proc ButtonBox::invoke { path index } {
proc ButtonBox::index { path index } {
proc ButtonBox::_destroy { path } {
proc ::ButtonBox::gettags {path} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/color.tcl]]
    proc ::SelectColor { path args } { return [eval SelectColor::create $path $args] }
    proc use {} {}
proc SelectColor::create { path args } {
        proc ::$path { cmd args } "return \[eval SelectColor::\$cmd $path \$args\]"
proc SelectColor::configure { path args } {
proc SelectColor::cget { path option } {
proc SelectColor::setcolor { index color } {
proc SelectColor::_destroy { path } {
proc SelectColor::_update_var { path args } {
proc SelectColor::_post_menu { path X Y } {
proc SelectColor::_tk_choose_color { path } {
proc SelectColor::_activate { path cell } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/combobox.tcl]]
    proc ::ComboBox { path args } { return [eval ComboBox::create $path $args] }
    proc use {} {}
proc ComboBox::create { path args } {
    proc ::$path { cmd args } "return \[eval ComboBox::\$cmd $path \$args\]"
proc ComboBox::configure { path args } {
proc ComboBox::cget { path option } {
proc ComboBox::setvalue { path index } {
proc ComboBox::getvalue { path } {
proc ComboBox::bind { path args } {
proc ComboBox::_create_popup { path } {
proc ComboBox::_mapliste { path } {
proc ComboBox::_unmapliste { path } {
proc ComboBox::_select { path index } {
proc ComboBox::_modify_value { path direction } {
proc ComboBox::_focus_in { path } {
proc ComboBox::_focus_out { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/demo/basic.tcl]]
proc DemoBasic::create { nb } {
proc DemoBasic::_label { parent } {
proc DemoBasic::_entry { parent } {
proc DemoBasic::_button { parent } {
proc DemoBasic::_bstate { state but arr1 arr2 } {
proc DemoBasic::_brelief { relief but arr1 arr2 } {
proc DemoBasic::_bside { side args } {
proc DemoBasic::_barmcmd { value but arr1 arr2 } {
proc DemoBasic::_butcmd { reason } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/demo/demo.tcl]]
proc Demo::create { } {
proc Demo::update_font { newfont } {
proc Demo::_create_intro { } {
proc Demo::main {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/demo/dnd.tcl]]
proc DemoDnd::create { nb } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/demo/manager.tcl]]
proc DemoManager::create { nb } {
proc DemoManager::_mainframe { parent } {
proc DemoManager::_notebook { parent } {
proc DemoManager::_paned { parent } {
proc DemoManager::_show_progress { } {
proc DemoManager::_update_progress { } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/demo/select.tcl]]
proc DemoSelect::create { nb } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/demo/tmpldlg.tcl]]
proc DemoDlg::create { nb } {
proc DemoDlg::_tmpldlg { parent } {
proc DemoDlg::_msgdlg { parent } {
proc DemoDlg::_stddlg { parent } {
proc DemoDlg::_show_color {w} {
proc DemoDlg::_show_tmpldlg { } {
proc DemoDlg::_show_msgdlg { } {
proc DemoDlg::_show_fontdlg { } {
proc DemoDlg::_show_progdlg { } {
proc DemoDlg::_update_progdlg { } {
proc DemoDlg::_show_passdlg { } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/demo/tree.tcl]]
proc DemoTree::create { nb } {
proc DemoTree::init { tree list args } {
proc DemoTree::getdir { tree node path } {
proc DemoTree::moddir { idx tree node } {
proc DemoTree::select { where num tree list node } {
proc DemoTree::select_node { tree list node } {
proc DemoTree::edit { where tree list node } {
proc DemoTree::expand { tree but } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/dialog.tcl]]
    proc ::Dialog { path args } { return [eval Dialog::create $path $args] }
    proc use {} {}
proc Dialog::create { path args } {
    proc ::$path { cmd args } "return \[eval Dialog::\$cmd $path \$args\]"
proc Dialog::configure { path args } {
proc Dialog::cget { path option } {
proc Dialog::getframe { path } {
proc Dialog::add { path args } {
proc Dialog::itemconfigure { path index args } {
proc Dialog::itemcget { path index option } {
proc Dialog::invoke { path index } {
proc Dialog::setfocus { path index } {
proc Dialog::enddialog { path result } {
proc Dialog::draw { path {focus ""} {overrideredirect 0} {geometry ""}} {
proc Dialog::withdraw { path } {
proc Dialog::_destroy { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/dragsite.tcl]]
    proc use {} {}
proc DragSite::include { class type event } {
proc DragSite::setdrag { path subpath initcmd endcmd {force 0}} {
proc DragSite::register { path args } {
proc DragSite::_begin_drag { event source state X Y } {
proc DragSite::_init_drag { source state X Y } {
proc DragSite::_end_drag { source target op type data result } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/dropsite.tcl]]
    proc use {} {}
proc DropSite::include { class types } {
proc DropSite::setdrop { path subpath dropover drop {force 0}} {
proc DropSite::register { path args } {
proc DropSite::setcursor { cursor } {
proc DropSite::setoperation { op } {
proc DropSite::_init_drag { top evt source state X Y type ops data } {
proc DropSite::_update_operation { state } {
proc DropSite::_compute_operation { target state type } {
proc DropSite::_draw_operation { target type } {
proc DropSite::_motion { X Y } {
proc DropSite::_release { X Y } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/dynhelp.tcl]]
    proc use {} {}
proc DynamicHelp::configure { args } {
proc DynamicHelp::include { class type } {
proc DynamicHelp::sethelp { path subpath {force 0}} {
proc DynamicHelp::register { path type args } {
proc DynamicHelp::_motion_balloon { type path x y } {
proc DynamicHelp::_motion_info { path } {
proc DynamicHelp::_leave_info { path } {
proc DynamicHelp::_menu_info { event path } {
proc DynamicHelp::_show_help { path x y } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/entry.tcl]]
    proc use {} {}
proc Entry::create { path args } {
    proc ::$path { cmd args } "return \[Entry::_path_command $path \$cmd \$args\]"
proc Entry::configure { path args } {
proc Entry::cget { path option } {
proc Entry::invoke { path } {
proc Entry::_path_command { path cmd larg } {
proc Entry::_destroy { path } {
proc Entry::_init_drag_cmd { path X Y top } {
proc Entry::_end_drag_cmd { path target op type dnddata result } {
proc Entry::_drop_cmd { path source X Y op type dnddata } {
proc Entry::_over_cmd { path source event X Y op type dnddata } {
proc Entry::_auto_scroll { path x } {
proc Entry::_scroll { path dir x xmax } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/font.tcl]]
    proc ::SelectFont { path args } { 
    proc use {} {}
proc SelectFont::create { path args } {
        proc ::$path { cmd args } "return \[eval SelectFont::\$cmd $path \$args\]"
        proc ::$path { cmd args } "return \[eval SelectFont::\$cmd $path \$args\]"
proc SelectFont::configure { path args } {
proc SelectFont::cget { path option } {
proc SelectFont::loadfont { } {
proc SelectFont::_draw { path } {
proc SelectFont::_destroy { path } {
proc SelectFont::_modstyle { path style } {
proc SelectFont::_update { path } {
proc SelectFont::_getfont { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/init.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/label.tcl]]
    proc ::Label { path args } { return [eval BWLabel::create $path $args] }
    proc use {} {}
proc BWLabel::create { path args } {
    proc ::$path { cmd args } "return \[eval BWLabel::\$cmd $path \$args\]"
proc BWLabel::configure { path args } {
proc BWLabel::cget { path option } {
proc BWLabel::setfocus { path } {
proc BWLabel::_init_drag_cmd { path X Y top } {
proc BWLabel::_drop_cmd { path source X Y op type data } {
proc BWLabel::_over_cmd { path source event X Y op type data } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/labelentry.tcl]]
    proc ::LabelEntry { path args } { return [eval LabelEntry::create $path $args] }
    proc use { } {}
proc LabelEntry::create { path args } {
    proc ::$path { cmd args } "return \[LabelEntry::_path_command $path \$cmd \$args\]"
proc LabelEntry::configure { path args } {
proc LabelEntry::cget { path option } {
proc LabelEntry::bind { path args } {
proc LabelEntry::_path_command { path cmd larg } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/labelframe.tcl]]
    proc ::LabelFrame { path args } { return [eval LabelFrame::create $path $args] }
    proc use {} {}
proc LabelFrame::create { path args } {
    proc ::$path { cmd args } "return \[eval LabelFrame::\$cmd $path \$args\]"
proc LabelFrame::getframe { path } {
proc LabelFrame::configure { path args } {
proc LabelFrame::cget { path option } {
proc LabelFrame::align { args } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/listbox.tcl]]
    proc ::ListBox { path args } { return [eval ListBox::create $path $args] }
    proc use {} {}
proc ListBox::create { path args } {
    proc ::$path { cmd args } "return \[eval ListBox::\$cmd $path \$args\]"
proc ListBox::configure { path args } {
proc ListBox::cget { path option } {
proc ListBox::insert { path index item args } {
proc ListBox::itemconfigure { path item args } {
proc ListBox::itemcget { path item option } {
proc ListBox::bindText { path event script } {
proc ListBox::bindImage { path event script } {
proc ListBox::delete { path args } {
proc ListBox::move { path item index } {
proc ListBox::reorder { path neworder } {
proc ListBox::selection { path cmd args } {
proc ListBox::exists { path item } {
proc ListBox::index { path item } {
proc ListBox::find {path findInfo {confine ""}} {
proc ListBox::item { path first {last ""} } {
proc ListBox::items { path {first ""} {last ""}} {
proc ListBox::see { path item } {
proc ListBox::edit { path item text {verifycmd ""} {clickres 0} {select 1}} {
proc ListBox::xview { path args } {
proc ListBox::yview { path args } {
proc ListBox::_update_edit_size { path entry idw wmax args } {
proc ListBox::_getoption { path item option } {
proc ListBox::_destroy { path } {
proc ListBox::_see { path idn side } {
proc ListBox::_update_scrollregion { path } {
proc ListBox::_draw_item { path item x0 x1 y } {
proc ListBox::_redraw_items { path } {
proc ListBox::_redraw_selection { path } {
proc ListBox::_redraw_listbox { path } {
proc ListBox::_redraw_idle { path level } {
proc ListBox::_resize { path } {
proc ListBox::_init_drag_cmd { path X Y top } {
proc ListBox::_drop_cmd { path source X Y op type dnddata } {
proc ListBox::_over_cmd { path source event X Y op type dnddata } {
proc ListBox::_auto_scroll { path x y } {
proc ListBox::_scroll { path cmd dir } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/mainframe.tcl]]
    proc ::MainFrame { path args } { return [eval MainFrame::create $path $args] }
    proc use {} {}
proc MainFrame::create { path args } {
    proc ::$path { cmd args } "return \[eval MainFrame::\$cmd $path \$args\]"
proc MainFrame::configure { path args } {
proc MainFrame::cget { path option } {
proc MainFrame::getframe { path } {
proc MainFrame::addtoolbar { path } {
proc MainFrame::gettoolbar { path index } {
proc MainFrame::addindicator { path args } {
proc MainFrame::getindicator { path index } {
proc MainFrame::getmenu { path menuid } {
proc MainFrame::setmenustate { path tag state } {
proc MainFrame::menuonly { path } {
proc MainFrame::showtoolbar { path index bool } {
proc MainFrame::showstatusbar { path name } {
proc MainFrame::_destroy { path } {
proc MainFrame::_create_menubar { path descmenu } {
proc MainFrame::_create_entries { path menu bg entries } {
proc MainFrame::_parse_name { menuname } {
proc MainFrame::_parse_accelerator { desc } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/messagedlg.tcl]]
    proc ::MessageDlg { path args } { return [eval MessageDlg::create $path $args] }
    proc use { } {}
proc MessageDlg::create { path args } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/new-color.tcl]]
proc SelectColor::menu {path placement args} {
proc SelectColor::dialog {path args} {
proc SelectColor::_select_rgb {count} {
proc SelectColor::_set_rgb {rgb} {
proc SelectColor::_select_hue_sat {x y} {
proc SelectColor::_set_hue_sat {hue sat} {
proc SelectColor::_select_value {x y} {
proc SelectColor::_draw_values {hue sat} {
proc SelectColor::_set_value {value} {
proc SelectColor::hsvToRgb {hue sat val} {
proc SelectColor::rgbToHsv {red green blue} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/notebook.tcl]]
    proc ::NoteBook { path args } { return [eval NoteBook::create $path $args] }
    proc use {} {}
proc NoteBook::create { path args } {
    proc ::$path { cmd args } "return \[eval NoteBook::\$cmd $path \$args\]"
proc NoteBook::configure { path args } {
proc NoteBook::cget { path option } {
proc NoteBook::compute_size { path } {
proc NoteBook::insert { path index page args } {
proc NoteBook::delete { path page {destroyframe 1} } {
proc NoteBook::itemconfigure { path page args } {
proc NoteBook::itemcget { path page option } {
proc NoteBook::bindtabs { path event script } {
proc NoteBook::move { path page index } {
proc NoteBook::raise { path {page ""} } {
proc NoteBook::see { path page } {
proc NoteBook::page { path first {last ""} } {
proc NoteBook::pages { path {first ""} {last ""}} {
proc NoteBook::index { path page } {
proc NoteBook::_destroy { path } {
proc NoteBook::getframe { path page } {
proc NoteBook::_test_page { path page } {
proc NoteBook::_getoption { path page option } {
proc NoteBook::_itemconfigure { path page lres } {
proc NoteBook::_compute_width { path } {
proc NoteBook::_get_x_page { path pos } {
proc NoteBook::_xview { path inc } {
proc NoteBook::_highlight { type path page } {
proc NoteBook::_select { path page } {
proc NoteBook::_redraw { path } {
proc NoteBook::_draw_page { path page create } {
proc NoteBook::_draw_arrows { path } {
proc NoteBook::_draw_area { path } {
proc NoteBook::_resize { path } {
proc NoteBook::_realize { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/pagesmgr.tcl]]
    proc ::PagesManager { path args } { return [eval PagesManager::create $path $args] }
    proc use {} {}
proc PagesManager::create { path args } {
    proc ::$path { cmd args } "return \[eval PagesManager::\$cmd $path \$args\]"
proc PagesManager::configure { path args } {
proc PagesManager::cget { path option } {
proc PagesManager::compute_size { path } {
proc PagesManager::add { path page } {
proc PagesManager::delete { path page } {
proc PagesManager::raise { path {page ""} } {
proc PagesManager::page { path first {last ""} } {
proc PagesManager::pages { path {first ""} {last ""} } {
proc PagesManager::_destroy { path } {
proc PagesManager::getframe { path page } {
proc PagesManager::_test_page { path page } {
proc PagesManager::_select { path page } {
proc PagesManager::_redraw { path } {
proc PagesManager::_draw_area { path } {
proc PagesManager::_realize { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/panedw.tcl]]
    proc ::PanedWindow { path args } { return [eval PanedWindow::create $path $args] }
    proc use {} {}
proc PanedWindow::create { path args } {
    proc ::$path { cmd args } "return \[eval PanedWindow::\$cmd $path \$args\]"
proc PanedWindow::configure { path args } {
proc PanedWindow::cget { path option } {
proc PanedWindow::add { path args } {
proc PanedWindow::getframe { path index } {
proc PanedWindow::_destroy { path } {
proc PanedWindow::_beg_move_sash { path num x y } {
proc PanedWindow::_move_sash { top min max v form } {
proc PanedWindow::_end_move_sash { path top num min max v rootv size } {
proc PanedWindow::_realize { path width height } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/passwddlg.tcl]]
    proc ::PasswdDlg { path args } { return [eval PasswdDlg::create $path $args] }
    proc use {} {}
proc PasswdDlg::create { path args } {
    proc ::$path { cmd args } "return \[eval PasswdDlg::\$cmd $path \$args\]"
proc PasswdDlg::configure { path args } {
proc PasswdDlg::cget { path option } {
proc PasswdDlg::_verifonlogin { path labpass } {
proc PasswdDlg::_verifonpasswd { path lablog } {
proc PasswdDlg::_max { val1 val2 } { 
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/progressbar.tcl]]
    proc ::ProgressBar { path args } { return [eval ProgressBar::create $path $args] }
    proc use {} {}
proc ProgressBar::create { path args } {
    proc ::$path { cmd args } "return \[eval ProgressBar::\$cmd $path \$args\]"
proc ProgressBar::configure { path args } {
proc ProgressBar::cget { path option } {
proc ProgressBar::_destroy { path } {
proc ProgressBar::_modify { path args } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/progressdlg.tcl]]
    proc ::ProgressDlg { path args } { return [eval ProgressDlg::create $path $args] }
    proc use {} {}
proc ProgressDlg::create { path args } {
    proc ::$path { cmd args } "return \[eval ProgressDlg::\$cmd $path \$args\]"
proc ProgressDlg::configure { path args } {
proc ProgressDlg::cget { path option } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/scrollframe.tcl]]
    proc ::ScrollableFrame { path args } { return [eval ScrollableFrame::create $path $args] }
    proc use {} {}
proc ScrollableFrame::create { path args } {
    proc ::$path { cmd args } "return \[eval ScrollableFrame::\$cmd $path \$args\]"
proc ScrollableFrame::configure { path args } {
proc ScrollableFrame::cget { path option } {
proc ScrollableFrame::getframe { path } {
proc ScrollableFrame::see { path widget {vert top} {horz left} {xOffset 0} {yOffset 0}} {
proc ScrollableFrame::xview { path args } {
proc ScrollableFrame::yview { path args } {
proc ScrollableFrame::_resize { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/scrollview.tcl]]
    proc ::ScrollView {path args} {
    proc use {} {}
proc ScrollView::create { path args } {
    proc ::$path { cmd args } "return \[eval ScrollView::\$cmd $path \$args\]"
proc ScrollView::configure { path args } {
proc ScrollView::cget { path option } {
proc ScrollView::_destroy { path } {
proc ScrollView::_set_hscroll { path vmin vmax } {
proc ScrollView::_set_vscroll { path vmin vmax } {
proc ScrollView::_update_scroll { path callscroll hminmax vminmax } {
proc ScrollView::_set_view { path cmd x y } {
proc ScrollView::_resize { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/scrollw.tcl]]
    proc ::ScrolledWindow {path args} {
    proc use {} {}
proc ScrolledWindow::create { path args } {
    proc ::$path { cmd args } "return \[eval ScrolledWindow::\$cmd $path \$args\]"
proc ScrolledWindow::getframe { path } {
proc ScrolledWindow::setwidget { path widget } {
proc ScrolledWindow::configure { path args } {
proc ScrolledWindow::cget { path option } {
proc ScrolledWindow::_destroy { path } {
proc ScrolledWindow::_set_hscroll { path vmin vmax } {
proc ScrolledWindow::_set_vscroll { path vmin vmax } {
proc ScrolledWindow::_setData {path scrollbar auto sides} {
proc ScrolledWindow::_setSBSize {sb size args} {
proc ScrolledWindow::_realize { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/separator.tcl]]
    proc ::Separator { path args } { return [eval Separator::create $path $args] }
    proc use {} {}
proc Separator::create { path args } {
    proc ::$path { cmd args } "return \[eval Separator::\$cmd $path \$args\]"
proc Separator::configure { path args } {
proc Separator::cget { path option } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/spinbox.tcl]]
    proc use {} {}
proc SpinBox::create { path args } {
    proc ::$path { cmd args } "return \[eval SpinBox::\$cmd $path \$args\]"
proc SpinBox::configure { path args } {
proc SpinBox::cget { path option } {
proc SpinBox::setvalue { path index } {
proc SpinBox::getvalue { path } {
proc SpinBox::bind { path args } {
proc SpinBox::_destroy { path } {
proc SpinBox::_modify_value { path direction reason } {
proc SpinBox::_test_options { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/titleframe.tcl]]
    proc ::TitleFrame { path args } { return [eval TitleFrame::create $path $args] }
    proc use {} {}
proc TitleFrame::create { path args } {
    proc ::$path { cmd args } "return \[eval TitleFrame::\$cmd $path \$args\]"
proc TitleFrame::configure { path args } {
proc TitleFrame::cget { path option } {
proc TitleFrame::getframe { path } {
proc TitleFrame::_place { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/tree.tcl]]
    proc ::Tree { path args } { return [eval Tree::create $path $args] }
    proc use {} {}
proc Tree::create { path args } {
    proc ::$path { cmd args } "return \[eval Tree::\$cmd $path \$args\]"
proc Tree::configure { path args } {
proc Tree::cget { path option } {
proc Tree::insert { path index parent node args } {
proc Tree::itemconfigure { path node args } {
proc Tree::itemcget { path node option } {
proc Tree::bindText { path event script } {
proc Tree::bindImage { path event script } {
proc Tree::delete { path args } {
proc Tree::move { path parent node index } {
proc Tree::reorder { path node neworder } {
proc Tree::selection { path cmd args } {
proc Tree::exists { path node } {
proc Tree::visible { path node } {
proc Tree::parent { path node } {
proc Tree::index { path node } {
proc Tree::find {path findInfo {confine ""}} {
proc Tree::line {path node} {
proc Tree::nodes { path node {first ""} {last ""} } {
proc Tree::visiblenodes { path } {
proc Tree::see { path node } {
proc Tree::opentree { path node } {
proc Tree::closetree { path node } {
proc Tree::edit { path node text {verifycmd ""} {clickres 0} {select 1}} {
proc Tree::xview { path args } {
proc Tree::yview { path args } {
proc Tree::_update_edit_size { path entry idw wmax args } {
proc Tree::_destroy { path } {
proc Tree::_see { path idn side } {
proc Tree::_recexpand { path node expand cmd } {
proc Tree::_subdelete { path lnodes } {
proc Tree::_update_scrollregion { path } {
proc Tree::_cross_event { path } {
proc Tree::_draw_node { path node x0 y0 deltax deltay padx showlines } {
proc Tree::_draw_subnodes { path nodes x0 y0 deltax deltay padx showlines } {
proc Tree::_update_nodes { path } {
proc Tree::_draw_tree { path } {
proc Tree::_redraw_tree { path } {
proc Tree::_redraw_selection { path } {
proc Tree::_redraw_idle { path level } {
proc Tree::_init_drag_cmd { path X Y top } {
proc Tree::_drop_cmd { path source X Y op type dnddata } {
proc Tree::_over_cmd { path source event X Y op type dnddata } {
proc Tree::_auto_scroll { path x y } {
proc Tree::_scroll { path cmd dir } {
proc Tree::_keynav {which win} {
proc Tree::_get_current_node {win} {
proc Tree::_set_current_node {win node} {
proc Tree::_get_node_name {path {item current} {tagindex end-1}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/utils.tcl]]
    proc use {} {}
    proc use {} {}
proc GlobalVar::exists { varName } {
proc GlobalVar::setvar { varName value } {
proc GlobalVar::getvar { varName } {
proc GlobalVar::tracevar { cmd varName args } {
proc BWidget::lreorder { list neworder } {
proc BWidget::assert { exp {msg ""}} {
proc BWidget::clonename { menu } {
proc BWidget::getname { name } {
proc BWidget::parsetext { text } {
proc BWidget::get3dcolor { path bgcolor } {
proc BWidget::XLFDfont { cmd args } {
proc BWidget::place { path w h args } {
proc BWidget::grab { option path } {
proc BWidget::focus { option path } {
proc BWidget::refocus {container component} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/widget.tcl]]
    proc use {} {}
proc Widget::tkinclude { class tkwidget subpath args } {
proc Widget::bwinclude { class subclass subpath args } {
proc Widget::declare { class optlist } {
proc Widget::addmap { class subclass subpath options } {
proc Widget::syncoptions { class subclass subpath options } {
proc Widget::init { class path options } {
proc Widget::parseArgs {class options} {
proc Widget::initFromODB {class path options} {
proc Widget::destroy { path } {
proc Widget::configure { path options } {
proc Widget::cget { path option } {
proc Widget::subcget { path subwidget } {
proc Widget::hasChanged { path option pvalue } {
proc Widget::hasChangedX { path option args } {
proc Widget::setoption { path option value } {
proc Widget::getoption { path option } {
proc Widget::getMegawidgetOption {path option} {
proc Widget::setMegawidgetOption {path option value} {
proc Widget::_get_window { class path } {
proc Widget::_get_configure { path options } {
proc Widget::_configure_option { option altopt } {
proc Widget::_get_tkwidget_options { tkwidget } {
proc Widget::_test_tkresource { option value arg } {
proc Widget::_test_bwresource { option value arg } {
proc Widget::_test_synonym { option value arg } {
proc Widget::_test_string { option value arg } {
proc Widget::_test_flag { option value arg } {
proc Widget::_test_enum { option value arg } {
proc Widget::_test_int { option value arg } {
proc Widget::_test_boolean { option value arg } {
proc Widget::focusNext { w } {
proc Widget::focusPrev { w } {
proc Widget::focusOK { w } {
proc Widget::varForOption {path option} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget/xpm2image.tcl]]
proc xpm-to-image { file } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/arrow.tcl]]
    proc ::ArrowButton { path args } { return [eval ArrowButton::create $path $args] }
    proc use {} {}
proc ArrowButton::create { path args } {
    proc ::$path { cmd args } "return \[eval ArrowButton::\$cmd $path \$args\]"
proc ArrowButton::configure { path args } {
proc ArrowButton::cget { path option } {
proc ArrowButton::invoke { path } {
proc ArrowButton::_redraw { path width height } {
proc ArrowButton::_redraw_state { path } {
proc ArrowButton::_redraw_relief { path } {
proc ArrowButton::_redraw_whole { path width height } {
proc ArrowButton::_destroy { path } {
proc ArrowButton::_enter { path } {
proc ArrowButton::_leave { path } {
proc ArrowButton::_press { path } {
proc ArrowButton::_release { path } {
proc ArrowButton::_repeat { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/bitmap.tcl]]
    proc use {} {}
proc Bitmap::get { name } {
proc Bitmap::_init { } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/button.tcl]]
    proc ::Button { path args } { return [eval Button::create $path $args] }
    proc use {} {}
proc Button::create { path args } {
    proc ::$path { cmd args } "return \[eval Button::\$cmd $path \$args\]"
proc Button::configure { path args } {
proc Button::cget { path option } {
proc Button::invoke { path } {
proc Button::_enter { path } {
proc Button::_leave { path } {
proc Button::_press { path } {
proc Button::_release { path } {
proc Button::_repeat { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/buttonbox.tcl]]
    proc ::ButtonBox { path args } { return [eval ButtonBox::create $path $args] }
    proc use {} {}
proc ButtonBox::create { path args } {
    proc ::$path { cmd args } "return \[eval ButtonBox::\$cmd $path \$args\]"
proc ButtonBox::configure { path args } {
proc ButtonBox::cget { path option } {
proc ButtonBox::add { path args } {
proc ::ButtonBox::setbuttonstate {path tag state} {
proc ::ButtonBox::getbuttonstate {path tag} {
proc ButtonBox::itemconfigure { path index args } {
proc ButtonBox::itemcget { path index option } {
proc ButtonBox::setfocus { path index } {
proc ButtonBox::invoke { path index } {
proc ButtonBox::index { path index } {
proc ButtonBox::_destroy { path } {
proc ::ButtonBox::gettags {path} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/checkframe.tcl]]
    proc ::CheckFrame { path args } { return [eval CheckFrame::create $path $args] }
    proc use {} {}
proc CheckFrame::create { path args } {
    proc ::$path { cmd args } "return \[eval CheckFrame::\$cmd $path \$args\]"
proc CheckFrame::configure { path args } {
proc CheckFrame::cget { path option } {
proc CheckFrame::getframe { path } {
proc CheckFrame::actframe_recur {w st} {
proc CheckFrame::actframe { path } {
proc CheckFrame::_place { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/color.tcl]]
    proc ::SelectColor { path args } { 
proc SelectColor::menu {path placement args} {
proc SelectColor::dialog {path args} {
proc SelectColor::_select_rgb {count} {
proc SelectColor::_set_rgb {rgb} {
proc SelectColor::_select_hue_sat {x y} {
proc SelectColor::_set_hue_sat {hue sat} {
proc SelectColor::_select_value {x y} {
proc SelectColor::_draw_values {hue sat} {
proc SelectColor::_set_value {value} {
proc SelectColor::hsvToRgb {hue sat val} {
proc SelectColor::rgbToHsv {red green blue} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/colormenu.tcl]]
    proc ::SelectColorMenu { path args } { return [eval SelectColorMenu::create $path $args] }
    proc use {} {}
proc SelectColorMenu::create { path args } {
        proc ::$path { cmd args } "return \[eval SelectColorMenu::\$cmd $path \$args\]"
proc SelectColorMenu::configure { path args } {
proc SelectColorMenu::cget { path option } {
proc SelectColorMenu::setcolor { index color } {
proc SelectColorMenu::_destroy { path } {
proc SelectColorMenu::_update_var { path args } {
proc SelectColorMenu::_post_menu { path X Y } {
proc SelectColorMenu::_tk_choose_color { path } {
proc SelectColorMenu::_activate { path cell } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/combobox.tcl]]
    proc ::ComboBox { path args } { return [eval ComboBox::create $path $args] }
    proc use {} {}
proc ComboBox::create { path args } {
    proc ::$path { cmd args } "return \[eval ComboBox::\$cmd $path \$args\]"
proc ComboBox::configure { path args } {
proc ComboBox::cget { path option } {
proc ComboBox::setvalue { path index } {
proc ComboBox::getvalue { path } {
proc ComboBox::bind { path args } {
proc ComboBox::_create_popup { path } {
proc ComboBox::_mapliste { path } {
proc ComboBox::_unmapliste { path } {
proc ComboBox::_select { path index } {
proc ComboBox::_modify_value { path direction } {
proc ComboBox::_focus_in { path } {
proc ComboBox::_focus_out { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/demo/basic.tcl]]
proc DemoBasic::create { nb } {
proc DemoBasic::_label { parent } {
proc DemoBasic::_entry { parent } {
proc DemoBasic::_button { parent } {
proc DemoBasic::_bstate { state but arr1 arr2 } {
proc DemoBasic::_brelief { relief but arr1 arr2 } {
proc DemoBasic::_bside { side args } {
proc DemoBasic::_barmcmd { value but arr1 arr2 } {
proc DemoBasic::_butcmd { reason } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/demo/demo.tcl]]
proc Demo::create { } {
proc Demo::update_font { newfont } {
proc Demo::_create_intro { } {
proc Demo::main {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/demo/dnd.tcl]]
proc DemoDnd::create { nb } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/demo/manager.tcl]]
proc DemoManager::create { nb } {
proc DemoManager::_mainframe { parent } {
proc DemoManager::_notebook { parent } {
proc DemoManager::_paned { parent } {
proc DemoManager::_show_progress { } {
proc DemoManager::_update_progress { } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/demo/select.tcl]]
proc DemoSelect::create { nb } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/demo/tmpldlg.tcl]]
proc DemoDlg::create { nb } {
proc DemoDlg::_tmpldlg { parent } {
proc DemoDlg::_msgdlg { parent } {
proc DemoDlg::_stddlg { parent } {
proc DemoDlg::_show_color {w} {
proc DemoDlg::_show_tmpldlg { } {
proc DemoDlg::_show_msgdlg { } {
proc DemoDlg::_show_fontdlg { } {
proc DemoDlg::_show_progdlg { } {
proc DemoDlg::_update_progdlg { } {
proc DemoDlg::_show_passdlg { } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/demo/tree.tcl]]
proc DemoTree::create { nb } {
proc DemoTree::init { tree list args } {
proc DemoTree::getdir { tree node path } {
proc DemoTree::moddir { idx tree node } {
proc DemoTree::select { where num tree list node } {
proc DemoTree::select_node { tree list node } {
proc DemoTree::edit { where tree list node } {
proc DemoTree::expand { tree but } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/dialog.tcl]]
    proc ::Dialog { path args } { return [eval Dialog::create $path $args] }
    proc use {} {}
proc Dialog::create { path args } {
    proc ::$path { cmd args } "return \[eval Dialog::\$cmd $path \$args\]"
proc Dialog::configure { path args } {
proc Dialog::cget { path option } {
proc Dialog::getframe { path } {
proc Dialog::add { path args } {
proc Dialog::itemconfigure { path index args } {
proc Dialog::itemcget { path index option } {
proc Dialog::invoke { path index } {
proc Dialog::setfocus { path index } {
proc Dialog::enddialog { path result } {
proc Dialog::draw { path {focus ""} {overrideredirect 0} {geometry ""}} {
proc Dialog::withdraw { path } {
proc Dialog::_destroy { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/dragsite.tcl]]
    proc use {} {}
proc DragSite::include { class type event } {
proc DragSite::setdrag { path subpath initcmd endcmd {force 0}} {
proc DragSite::register { path args } {
proc DragSite::_begin_drag { event source state X Y } {
proc DragSite::_init_drag { source state X Y } {
proc DragSite::_end_drag { source target op type data result } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/dropsite.tcl]]
    proc use {} {}
proc DropSite::include { class types } {
proc DropSite::setdrop { path subpath dropover drop {force 0}} {
proc DropSite::register { path args } {
proc DropSite::setcursor { cursor } {
proc DropSite::setoperation { op } {
proc DropSite::_init_drag { top evt source state X Y type ops data } {
proc DropSite::_update_operation { state } {
proc DropSite::_compute_operation { target state type } {
proc DropSite::_draw_operation { target type } {
proc DropSite::_motion { X Y } {
proc DropSite::_release { X Y } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/dynhelp.tcl]]
    proc use {} {}
proc DynamicHelp::configure { args } {
proc DynamicHelp::include { class type } {
proc DynamicHelp::sethelp { path subpath {force 0}} {
proc DynamicHelp::register { path type args } {
proc DynamicHelp::_motion_balloon { type path x y } {
proc DynamicHelp::_motion_info { path } {
proc DynamicHelp::_leave_info { path } {
proc DynamicHelp::_menu_info { event path } {
proc DynamicHelp::_show_help { path x y } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/entry.tcl]]
    proc use {} {}
proc Entry::create { path args } {
    proc ::$path { cmd args } "return \[Entry::_path_command $path \$cmd \$args\]"
proc Entry::configure { path args } {
proc Entry::cget { path option } {
proc Entry::invoke { path } {
proc Entry::_path_command { path cmd larg } {
proc Entry::_destroy { path } {
proc Entry::_init_drag_cmd { path X Y top } {
proc Entry::_end_drag_cmd { path target op type dnddata result } {
proc Entry::_drop_cmd { path source X Y op type dnddata } {
proc Entry::_over_cmd { path source event X Y op type dnddata } {
proc Entry::_auto_scroll { path x } {
proc Entry::_scroll { path dir x xmax } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/font.tcl]]
    proc ::SelectFont { path args } { 
    proc use {} {}
proc SelectFont::create { path args } {
        proc ::$path { cmd args } "return \[eval SelectFont::\$cmd $path \$args\]"
        proc ::$path { cmd args } "return \[eval SelectFont::\$cmd $path \$args\]"
proc SelectFont::configure { path args } {
proc SelectFont::cget { path option } {
proc SelectFont::loadfont { } {
proc SelectFont::_draw { path } {
proc SelectFont::_destroy { path } {
proc SelectFont::_modstyle { path style } {
proc SelectFont::_update { path } {
proc SelectFont::_getfont { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/init.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/label.tcl]]
    proc ::Label { path args } { return [eval BWLabel::create $path $args] }
    proc use {} {}
proc BWLabel::create { path args } {
    proc ::$path { cmd args } "return \[eval BWLabel::\$cmd $path \$args\]"
proc BWLabel::configure { path args } {
proc BWLabel::cget { path option } {
proc BWLabel::setfocus { path } {
proc BWLabel::_init_drag_cmd { path X Y top } {
proc BWLabel::_drop_cmd { path source X Y op type data } {
proc BWLabel::_over_cmd { path source event X Y op type data } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/labelentry.tcl]]
    proc ::LabelEntry { path args } { return [eval LabelEntry::create $path $args] }
    proc use { } {}
proc LabelEntry::create { path args } {
    proc ::$path { cmd args } "return \[LabelEntry::_path_command $path \$cmd \$args\]"
proc LabelEntry::configure { path args } {
proc LabelEntry::cget { path option } {
proc LabelEntry::bind { path args } {
proc LabelEntry::_path_command { path cmd larg } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/labelframe.tcl]]
    proc ::LabelFrame { path args } { return [eval LabelFrame::create $path $args] }
    proc use {} {}
proc LabelFrame::create { path args } {
    proc ::$path { cmd args } "return \[eval LabelFrame::\$cmd $path \$args\]"
proc LabelFrame::getframe { path } {
proc LabelFrame::configure { path args } {
proc LabelFrame::cget { path option } {
proc LabelFrame::align { args } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/listbox.tcl]]
    proc ::ListBox { path args } { return [eval ListBox::create $path $args] }
    proc use {} {}
proc ListBox::create { path args } {
    proc ::$path { cmd args } "return \[eval ListBox::\$cmd $path \$args\]"
proc ListBox::configure { path args } {
proc ListBox::cget { path option } {
proc ListBox::insert { path index item args } {
proc ListBox::multipleinsert { path index args } {
proc ListBox::itemconfigure { path item args } {
proc ListBox::itemcget { path item option } {
proc ListBox::bindall { path event script } {
proc ListBox::bindText { path event script } {
proc ListBox::bindImage { path event script } {
proc ListBox::delete { path args } {
proc ListBox::move { path item index } {
proc ListBox::reorder { path neworder } {
proc ListBox::selection { path cmd args } {
proc ListBox::exists { path item } {
proc ListBox::index { path item } {
proc ListBox::find {path findInfo {confine ""}} {
proc ListBox::item { path first {last ""} } {
proc ListBox::items { path {first ""} {last ""}} {
proc ListBox::see { path item } {
proc ListBox::edit { path item text {verifycmd ""} {clickres 0} {select 1}} {
proc ListBox::xview { path args } {
proc ListBox::yview { path args } {
proc ListBox::_update_edit_size { path entry idw wmax args } {
proc ListBox::_getoption { path item option } {
proc ListBox::_destroy { path } {
proc ListBox::_see { path idn side } {
proc ListBox::_update_scrollregion { path } {
proc ListBox::_draw_item { path item x0 x1 y } {
proc ListBox::_redraw_items { path } {
proc ListBox::_redraw_selection { path } {
proc ListBox::_redraw_listbox { path } {
proc ListBox::_redraw_idle { path level } {
proc ListBox::_resize { path } {
proc ListBox::_init_drag_cmd { path X Y top } {
proc ListBox::_drop_cmd { path source X Y op type dnddata } {
proc ListBox::_over_cmd { path source event X Y op type dnddata } {
proc ListBox::_auto_scroll { path x y } {
proc ListBox::_multiple_select { path mode idx } {
proc ListBox::_scroll { path cmd dir } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/mainframe.tcl]]
    proc ::MainFrame { path args } { return [eval MainFrame::create $path $args] }
    proc use {} {}
proc MainFrame::create { path args } {
    proc ::$path { cmd args } "return \[eval MainFrame::\$cmd $path \$args\]"
proc MainFrame::configure { path args } {
proc MainFrame::cget { path option } {
proc MainFrame::getframe { path } {
proc MainFrame::addtoolbar { path } {
proc MainFrame::gettoolbar { path index } {
proc MainFrame::addindicator { path args } {
proc MainFrame::getindicator { path index } {
proc MainFrame::getmenu { path menuid } {
proc MainFrame::setmenustate { path tag state } {
proc MainFrame::menuonly { path } {
proc MainFrame::showtoolbar { path index bool } {
proc MainFrame::showstatusbar { path name } {
proc MainFrame::_destroy { path } {
proc MainFrame::_create_menubar { path descmenu } {
proc MainFrame::_create_entries { path menu bg entries } {
proc MainFrame::_parse_name { menuname } {
proc MainFrame::_parse_accelerator { desc } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/messagedlg.tcl]]
    proc ::MessageDlg { path args } { return [eval MessageDlg::create $path $args] }
    proc use { } {}
proc MessageDlg::create { path args } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/notebook.tcl]]
    proc ::NoteBook { path args } { return [eval NoteBook::create $path $args] }
    proc use {} {}
proc NoteBook::create { path args } {
    proc ::$path { cmd args } "return \[eval NoteBook::\$cmd $path \$args\]"
proc NoteBook::configure { path args } {
proc NoteBook::cget { path option } {
proc NoteBook::compute_size { path } {
proc NoteBook::insert { path index page args } {
proc NoteBook::delete { path page {destroyframe 1} } {
proc NoteBook::itemconfigure { path page args } {
proc NoteBook::itemcget { path page option } {
proc NoteBook::bindtabs { path event script } {
proc NoteBook::move { path page index } {
proc NoteBook::raise { path {page ""} } {
proc NoteBook::see { path page } {
proc NoteBook::page { path first {last ""} } {
proc NoteBook::pages { path {first ""} {last ""}} {
proc NoteBook::index { path page } {
proc NoteBook::_destroy { path } {
proc NoteBook::getframe { path page } {
proc NoteBook::_test_page { path page } {
proc NoteBook::_getoption { path page option } {
proc NoteBook::_itemconfigure { path page lres } {
proc NoteBook::_compute_width { path } {
proc NoteBook::_get_x_page { path pos } {
proc NoteBook::_xview { path inc } {
proc NoteBook::_highlight { type path page } {
proc NoteBook::_select { path page } {
proc NoteBook::_redraw { path } {
proc NoteBook::_draw_page { path page create } {
proc NoteBook::_draw_arrows { path } {
proc NoteBook::_draw_area { path } {
proc NoteBook::_resize { path } {
proc NoteBook::_realize { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/pagesmgr.tcl]]
    proc ::PagesManager { path args } { return [eval PagesManager::create $path $args] }
    proc use {} {}
proc PagesManager::create { path args } {
    proc ::$path { cmd args } "return \[eval PagesManager::\$cmd $path \$args\]"
proc PagesManager::configure { path args } {
proc PagesManager::cget { path option } {
proc PagesManager::compute_size { path } {
proc PagesManager::add { path page } {
proc PagesManager::delete { path page } {
proc PagesManager::raise { path {page ""} } {
proc PagesManager::page { path first {last ""} } {
proc PagesManager::pages { path {first ""} {last ""} } {
proc PagesManager::_destroy { path } {
proc PagesManager::getframe { path page } {
proc PagesManager::_test_page { path page } {
proc PagesManager::_select { path page } {
proc PagesManager::_redraw { path } {
proc PagesManager::_draw_area { path } {
proc PagesManager::_realize { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/panedw.tcl]]
    proc ::PanedWindow { path args } { return [eval PanedWindow::create $path $args] }
    proc use {} {}
proc PanedWindow::create { path args } {
    proc ::$path { cmd args } "return \[eval PanedWindow::\$cmd $path \$args\]"
proc PanedWindow::configure { path args } {
proc PanedWindow::cget { path option } {
proc PanedWindow::add { path args } {
proc PanedWindow::getframe { path index } {
proc PanedWindow::_destroy { path } {
proc PanedWindow::_beg_move_sash { path num x y } {
proc PanedWindow::_move_sash { top min max v form } {
proc PanedWindow::_end_move_sash { path top num min max v rootv size } {
proc PanedWindow::_realize { path width height } {
proc PanedWindow::_apply_weights { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/passwddlg.tcl]]
    proc ::PasswdDlg { path args } { return [eval PasswdDlg::create $path $args] }
    proc use {} {}
proc PasswdDlg::create { path args } {
    proc ::$path { cmd args } "return \[eval PasswdDlg::\$cmd $path \$args\]"
proc PasswdDlg::configure { path args } {
proc PasswdDlg::cget { path option } {
proc PasswdDlg::_verifonlogin { path labpass } {
proc PasswdDlg::_verifonpasswd { path lablog } {
proc PasswdDlg::_max { val1 val2 } { 
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/progressbar.tcl]]
    proc ::ProgressBar { path args } { return [eval ProgressBar::create $path $args] }
    proc use {} {}
proc ProgressBar::create { path args } {
    proc ::$path { cmd args } "return \[eval ProgressBar::\$cmd $path \$args\]"
proc ProgressBar::configure { path args } {
proc ProgressBar::cget { path option } {
proc ProgressBar::_destroy { path } {
proc ProgressBar::_modify { path args } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/progressdlg.tcl]]
    proc ::ProgressDlg { path args } { return [eval ProgressDlg::create $path $args] }
    proc use {} {}
proc ProgressDlg::create { path args } {
    proc ::$path { cmd args } "return \[eval ProgressDlg::\$cmd $path \$args\]"
proc ProgressDlg::configure { path args } {
proc ProgressDlg::cget { path option } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/radioframe.tcl]]
    proc ::RadioFrame { path args } { return [eval RadioFrame::create $path $args] }
    proc use {} {}
proc RadioFrame::create { path args } {
    proc ::$path { cmd args } "return \[eval RadioFrame::\$cmd $path \$args\]"
proc RadioFrame::configure { path args } {
proc RadioFrame::cget { path option } {
proc RadioFrame::getframe { path } {
proc RadioFrame::actframe_recur {w st} {
proc RadioFrame::actframe { path } {
proc RadioFrame::_place { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/scrollframe.tcl]]
    proc ::ScrollableFrame { path args } { return [eval ScrollableFrame::create $path $args] }
    proc use {} {}
proc ScrollableFrame::create { path args } {
    proc ::$path { cmd args } "return \[eval ScrollableFrame::\$cmd $path \$args\]"
proc ScrollableFrame::configure { path args } {
proc ScrollableFrame::cget { path option } {
proc ScrollableFrame::getframe { path } {
proc ScrollableFrame::see { path widget {vert top} {horz left} {xOffset 0} {yOffset 0}} {
proc ScrollableFrame::xview { path args } {
proc ScrollableFrame::yview { path args } {
proc ScrollableFrame::_resize { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/scrollview.tcl]]
    proc ::ScrollView {path args} {
    proc use {} {}
proc ScrollView::create { path args } {
    proc ::$path { cmd args } "return \[eval ScrollView::\$cmd $path \$args\]"
proc ScrollView::configure { path args } {
proc ScrollView::cget { path option } {
proc ScrollView::_destroy { path } {
proc ScrollView::_set_hscroll { path vmin vmax } {
proc ScrollView::_set_vscroll { path vmin vmax } {
proc ScrollView::_update_scroll { path callscroll hminmax vminmax } {
proc ScrollView::_set_view { path cmd x y } {
proc ScrollView::_resize { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/scrollw.tcl]]
    proc ::ScrolledWindow {path args} {
    proc use {} {}
proc ScrolledWindow::create { path args } {
    proc ::$path { cmd args } "return \[eval ScrolledWindow::\$cmd $path \$args\]"
proc ScrolledWindow::getframe { path } {
proc ScrolledWindow::setwidget { path widget } {
proc ScrolledWindow::configure { path args } {
proc ScrolledWindow::cget { path option } {
proc ScrolledWindow::_destroy { path } {
proc ScrolledWindow::_set_hscroll { path vmin vmax } {
proc ScrolledWindow::_set_vscroll { path vmin vmax } {
proc ScrolledWindow::_setData {path scrollbar auto sides} {
proc ScrolledWindow::_setSBSize {sb size args} {
proc ScrolledWindow::_realize { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/separator.tcl]]
    proc ::Separator { path args } { return [eval Separator::create $path $args] }
    proc use {} {}
proc Separator::create { path args } {
    proc ::$path { cmd args } "return \[eval Separator::\$cmd $path \$args\]"
proc Separator::configure { path args } {
proc Separator::cget { path option } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/spinbox.tcl]]
    proc use {} {}
proc SpinBox::create { path args } {
    proc ::$path { cmd args } "return \[eval SpinBox::\$cmd $path \$args\]"
proc SpinBox::configure { path args } {
proc SpinBox::cget { path option } {
proc SpinBox::setvalue { path index } {
proc SpinBox::getvalue { path } {
proc SpinBox::bind { path args } {
proc SpinBox::_destroy { path } {
proc SpinBox::_modify_value { path direction reason } {
proc SpinBox::_test_options { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/titleframe.tcl]]
    proc ::TitleFrame { path args } { return [eval TitleFrame::create $path $args] }
    proc use {} {}
proc TitleFrame::create { path args } {
    proc ::$path { cmd args } "return \[eval TitleFrame::\$cmd $path \$args\]"
proc TitleFrame::configure { path args } {
proc TitleFrame::cget { path option } {
proc TitleFrame::getframe { path } {
proc TitleFrame::_place { path } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/tree.tcl]]
    proc ::Tree { path args } { return [eval Tree::create $path $args] }
    proc use {} {}
proc Tree::create { path args } {
    proc ::$path { cmd args } "return \[eval Tree::\$cmd $path \$args\]"
proc Tree::configure { path args } {
proc Tree::cget { path option } {
proc Tree::insert { path index parent node args } {
proc Tree::itemconfigure { path node args } {
proc Tree::itemcget { path node option } {
proc Tree::bindText { path event script } {
proc Tree::bindImage { path event script } {
proc Tree::delete { path args } {
proc Tree::move { path parent node index } {
proc Tree::reorder { path node neworder } {
proc Tree::selection { path cmd args } {
proc Tree::exists { path node } {
proc Tree::visible { path node } {
proc Tree::parent { path node } {
proc Tree::index { path node } {
proc Tree::find {path findInfo {confine ""}} {
proc Tree::line {path node} {
proc Tree::nodes { path node {first ""} {last ""} } {
proc Tree::visiblenodes { path } {
proc Tree::see { path node } {
proc Tree::opentree { path node {recursive 1} } {
proc Tree::closetree { path node {recursive 1} } {
proc Tree::opennode { path node } {
proc Tree::closenode { path node } {
proc Tree::edit { path node text {verifycmd ""} {clickres 0} {select 1}} {
proc Tree::xview { path args } {
proc Tree::yview { path args } {
proc Tree::_update_edit_size { path entry idw wmax args } {
proc Tree::_destroy { path } {
proc Tree::_see { path idn side } {
proc Tree::_recexpand { path node expand recursive cmd } {
proc Tree::_subdelete { path lnodes } {
proc Tree::_update_scrollregion { path } {
proc Tree::_cross_event { path } {
proc Tree::_draw_node { path node x0 y0 deltax deltay padx showlines } {
proc Tree::_draw_subnodes { path nodes x0 y0 deltax deltay padx showlines } {
proc Tree::_update_nodes { path } {
proc Tree::_draw_tree { path } {
proc Tree::_redraw_tree { path } {
proc Tree::_redraw_selection { path } {
proc Tree::_redraw_idle { path level } {
proc Tree::_init_drag_cmd { path X Y top } {
proc Tree::_drop_cmd { path source X Y op type dnddata } {
proc Tree::_over_cmd { path source event X Y op type dnddata } {
proc Tree::_auto_scroll { path x y } {
proc Tree::_scroll { path cmd dir } {
proc Tree::_keynav {which win} {
proc Tree::_get_current_node {win} {
proc Tree::_set_current_node {win node} {
proc Tree::_get_node_name {path {item current} {tagindex end-1}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/utils.tcl]]
    proc use {} {}
    proc use {} {}
proc GlobalVar::exists { varName } {
proc GlobalVar::setvar { varName value } {
proc GlobalVar::getvar { varName } {
proc GlobalVar::tracevar { cmd varName args } {
proc BWidget::lreorder { list neworder } {
proc BWidget::assert { exp {msg ""}} {
proc BWidget::clonename { menu } {
proc BWidget::getname { name } {
proc BWidget::parsetext { text } {
proc BWidget::get3dcolor { path bgcolor } {
proc BWidget::XLFDfont { cmd args } {
proc BWidget::place { path w h args } {
proc BWidget::grab { option path } {
proc BWidget::focus { option path } {
proc BWidget::refocus {container component} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/widget.tcl]]
    proc use {} {}
proc Widget::tkinclude { class tkwidget subpath args } {
proc Widget::bwinclude { class subclass subpath args } {
proc Widget::declare { class optlist } {
proc Widget::addmap { class subclass subpath options } {
proc Widget::syncoptions { class subclass subpath options } {
proc Widget::init { class path options } {
proc Widget::copyinit { class templatepath path options } {
proc Widget::parseArgs {class options} {
proc Widget::initFromODB {class path options} {
proc Widget::destroy { path } {
proc Widget::configure { path options } {
proc Widget::cget { path option } {
proc Widget::subcget { path subwidget } {
proc Widget::hasChanged { path option pvalue } {
proc Widget::hasChangedX { path option args } {
proc Widget::setoption { path option value } {
proc Widget::getoption { path option } {
proc Widget::getMegawidgetOption {path option} {
proc Widget::setMegawidgetOption {path option value} {
proc Widget::_get_window { class path } {
proc Widget::_get_configure { path options } {
proc Widget::_configure_option { option altopt } {
proc Widget::_get_tkwidget_options { tkwidget } {
proc Widget::_test_tkresource { option value arg } {
proc Widget::_test_bwresource { option value arg } {
proc Widget::_test_synonym { option value arg } {
proc Widget::_test_color { option value arg } {
proc Widget::_test_string { option value arg } {
proc Widget::_test_flag { option value arg } {
proc Widget::_test_enum { option value arg } {
proc Widget::_test_int { option value arg } {
proc Widget::_test_boolean { option value arg } {
proc Widget::focusNext { w } {
proc Widget::focusPrev { w } {
proc Widget::focusOK { w } {
proc Widget::varForOption {path option} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/bwidget1.4/xpm2image.tcl]]
proc xpm-to-image { file } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/gateway_gui/gateway.tcl]]
proc ICC_gateway_initialize {{is_batch 0}} {
    proc mess {args} {
proc busy {on} {}
proc ICC_gateway_reader {reader line} {
proc ICC_reader_line {line outfile} {
proc ICC_gateway_initimport {match_file} {
proc ICC_gateway_matchresult {solvekey variable_list info reqtype tempfile} {
proc v3p_domain_types {file} {
proc ICC_gateway_output {solver args} {
proc ICC_gateway_cleanboco {} {
proc ICC_gateway_select {} {
proc ICC_gateway_setsolver {soln getbc} {
proc ICC_solver_info {sol} {
proc famboco_to_schema {file} {
proc famboco_schema_order {curarg defidx} {
proc ICC_gateway_solverscheme {solver schemefile} {
proc ICC_gateway_solutioninput {batch_args} {
proc ICC_gateway_solutioninput_batch {soln batch_args} {
proc ICC_init_fam_visible {} {
proc ICC_findfam {fam} {
proc ICC_save_family_boco {file comment} {
proc ICC_famboco_obj {args} {
proc ICC_dummy {args} {}
proc geo_famboco_edit {} {
proc ic_boco_load {file} {
proc ic_boco_solver {} {
proc ic_boco_save {file} {
proc ic_write_file {name text} {
proc cmd_date {} {
proc runcom {cmd { catfile "" } } {
proc ic_run_application_exec {dir progdir progname arguments } {
proc domain_select {dir message type mult {useboco 1} {usetopo 1}} {
proc file_is_family_boco {file} {
proc ic_uns_is_loaded {} {
proc create_trivial_famboco {} {
proc get_boco_topo {} {
proc query_question {args} {
proc sock_client_do {cmd args} {
proc rfile_selection {args} {
proc rfile_select {message {default ""} {title "File selection"} \
proc rfile_select_multiple {message default {title "File selection"} \
proc rfile_select_entry {w var get_dir new_ok msg tabgeo {act ""} {ok_func ""}\
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/gateway_gui/gateway_import.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/gateway_gui/gateway_output.tcl]]
proc ic_boco_is_loaded {} {
proc ic_boco_fam_dim {fam} {
proc famboco_load_params {args} {}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/gateway_gui/gateway_output_batch.tcl]]
proc dialog {args} {}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/gateway_gui/gateway_result.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/gateway_gui/gateway_schema.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/gateway_gui/gateway_solvers.tcl]]
proc gateway_rampant_batchargs {extra_args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/gateway_gui/gateway_sources.tcl]]
proc ICC_gateway_dirs {} {
proc ICC_gateway_catalog {{solver ""}} {
proc ICC_emit_to_catalogcode {name bc} {
proc ICC_gateway_NLS {{solver ""}} {
proc ICC_emit_to_catalogNLS {name bc} {
proc ICC_gateway_dictionary {{solver ""}} {
proc ICC_emit_to_dictionary {name bc} {
proc ICC_gateway_bccode {{solver ""}} {
proc ICC_gateway_menus {{solver ""}} {
proc ICC_emit_to_menucode {name bcs plast} {
proc ICC_check_for_MD {name} {
proc ICC_analyze_bc_line {bc} {
proc ICC_name_to_var {name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/gateway_gui/v3_solver_match.tcl]]
proc v3_solvermatch_list {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/global/anal_global.tcl]]
proc anal_freesurf {} {
proc anal_calcvol {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/global/diag_global.tcl]]
proc diag_mismarked_mats {} {
proc diag_missing_intercepts {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/global/disp_global.tcl]]
proc make_display_window {} {
proc global_edge_modal {} {
proc edge_color {which} {
proc node_ijk {} {
proc hgrid_get_val {} {
proc hgrid_incr_val {amt} {
proc hgrid_assign_bbox {} {
proc setup_index_box {} {
proc index_update_all {{update 1}} {
proc index_modify {ind max dir {update 1}} {
proc index_reset {} {
proc index_query {} {
proc add_new_families {} {
proc families_in_order {} {
proc add_families {} {
proc family_choice_list {} {
proc check_new_family {fam ndim} {
proc update_display {args} {
proc range_string {} {
proc boundry_range_string {} {
proc range_string_sp {ind val} {
proc range_string_sp2 {ind val} {
proc family_string {} {
proc family_name_string {} {
proc surface_string {} {
proc surface_family_string {} {
proc surface_family_string_ids {} {
proc volume_string {} {
proc volume_name_string {} {
proc flood_fill_modals {{use_autofix 1} {can_display 1}} {
proc flood_fill_exec {{use_autofix 1} {can_display 1}} {
proc iplane_update_list_families {{on ""}} {
proc points_update_list_families {{on ""} {pres 1} {mater 0}} {
proc global_build_staircase {} {
proc global_execute_remote_staircase {} {
proc global_show_logfile {file} {
proc tail_global_log {fp line} {
proc global_cleanup_remote {} {
proc global_next_file {basename} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/global/edit_global.tcl]]
proc edit_family_dim {staircase_type} {
proc edit_add_stair {staircase_type} {
proc edit_del_stair {staircase_type what} {
proc edit_rebuild_stair {} {
proc edit_repair_stair {} {
proc edit_display_unneeded {} {
proc edit_delete_unneeded {} {
proc edit_repair_dispquad {} {
proc edit_repair_erase {} {
proc edit_change_stair {staircase_type} {
proc change_family_color {} {
proc pick_family {} {
proc edit_define_line {} {
proc edit_define_line_create {} {
proc edit_define_point {} {
proc edit_define_point_create {} {
proc define_ijk_select {num} {
proc edit_delete_geo {what} {
proc mirror_staircase {} {
proc mirror_update_info {} {
proc mirror_staircase_reset {} {
proc symmetrize_staircase {} {
proc mirror_det_sym {} {
proc mirror_compute_corr {state} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/global/file_global.tcl]]
proc file_load {{init 0}} {
proc file_delete_block {name} {
proc file_save {} {
proc file_options {} {
proc file_import {} {
proc file_dirty {} {
proc file_quit {} {
proc file_super {} {
proc file_hgrid {} {
proc check_compute_hgrid {} {
proc file_unstruct {what} {
proc file_delete_domain {name} {
proc file_read_staircase {} {
proc file_shell {} {
proc file_write_AQUA {} {
proc file_write_gorf {} {
proc file_read_gorf {read} {
proc file_write_uh3d {} {
proc global_open_file {var text} {
proc file_remote {} {
proc global_remote_option_done {how} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/global/global.tcl]]
proc global_configuration_read {} {
proc global_configuration_write {} {
proc global_option_defaults {} {
proc tool_command {} {
proc tool_setup {} {
proc make_tool_windows {} {
proc axes_minmax_initialize {} {
proc axes_select_minmax {} {
proc check_binding {win x y wx wy c} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/global/hardcopy_global.tcl]]
proc file_hardcopy {} {
proc file_hardcopy_form {pref geo {format_choice 1}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/global/mesh_global.tcl]]
proc mesh_scan_planes {} {
proc scan_minor {ind dir} {
proc scan_on_minor {ind} {
proc scan_change_type {} {
proc set_minor_oneplane_scantypes {ind} {
proc scan_update {ind {do_stair 1}} {
proc mesh_scan_done {} {
proc mesh_index_planes {} {
proc iplane_all_planes {} {
proc iplane_all_boxes {} {
proc init_index_planes {} {
proc update_index_planes {} {
proc iplane_family_list {} {
proc iplane_add_set {which} {
proc iplane_update {which} {
proc iplane_set {name} {
proc iplane_set_color {} {
proc iplane_add {} {
proc iplane_remove {} {
proc iplane_active_update {{n ""} {on ""} {redraw "redraw"} {local_only 0}} {
proc iplane_current_families {} {
proc iplane_update_families {} {
proc iplane_current_objects {} {
proc iplane_update_family {fam} {
proc iplane_update_families_all {{action 1}} {
proc mesh_slice_planes {} {
proc slice_plane_family_list {} {
proc slice_plane_compute {do_compute} {
proc slice_plane_set {name} {
proc slice_plane_add {} {
proc slice_plane_remove {} {
proc slice_plane_active {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/global/select_global.tcl]]
proc select_node {mess type {num 1} {vis_only 0}} {
proc select_edge {mess {max_sel 1} {opts ""}} {
proc select_surface {mess} {
proc select_line {mess} {
proc select_point {mess} {
proc block_mark_families {var {one 0}} {
proc surface_mark_families {var {one 0}} {
proc block_unmark {} {
proc block_mark {on face} {
proc get_families {} {
proc get_indices {reset} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/batch_glue.tcl]]
proc show_visible_if_family {im} {
proc object_geovisible_of_image {im {on_off ""}} {
proc object_type_of_image {im} {
proc object_geotype_of_image {im} {
proc object_name_of_image {im} {
proc get_object_by_name {types n} {
proc get_dormant_object_by_name {types n} {
proc object_incident_of_image {im} {
proc object_boundary_of_image {im {outer 0} {even_if_dormant 0} {embedded 0}} {
proc object_get_image {type name} {
proc object_show_geo_selected {im on} {
proc object_get_geo_dormant {im} {
proc get_fam_visible {v}  { 
proc get_geom_visible {v} { 
proc get_str_option {v}   { 
proc get_quad_option {v}   { 
proc get_etm_undo_option {{unset 0}}   { 
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/bccomp.tcl]]
proc bcc_write_ttk {bcinfo menufile tabfile dezfile tclfile} {
proc bcc_write_dez {dezf tclf dezname bc has_set has_lcs \
proc bcc_write_load_function {tclf dezname bc default_vals \
proc bcc_write_apply_function {tclf dezname bc d default_vals} {
proc bcc_write_edit_func {tclf dezname bc short_title default_vals} {
proc bcc_write_parse_func {tclf bc all_args} {
proc bcc_write_icons_func {tclf bc dez_args pref icontype pass_to_bci \
proc bcc_write_get_set_func {tclf bc dez_args} {
proc bcc_write_param_dez {dezf tclf dezname pn has_lcs \
proc bcc_write_param_load_function {tclf dezname pn make_args \
proc bcc_write_param_apply_function {tclf dezname pn make_args default_vals} {
proc bcc_write_arg {dezf dezname arg} {
proc bcc_write_load_arg {tclf dezname arg} {
proc bcc_write_apply_arg {tclf dezname arg} {
proc tt {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/bltemu.tcl]]
	proc blt_graph {obj args} {
	proc blt_graph {obj args} {
	    proc $obj {args} { return "__noblt_graph" }
proc blt_table {args} {
proc blt_table_params {params} {
proc blt_table_column {w args} {
proc blt_table_row {w args} {
proc blt_table_slaves {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/bmatrix.tcl]]
proc futil_bmatrix {w selvar namevar valuevar givenvar keys1 keys2 width height tabgeo select_cmd} {
proc futil_bmatrix_viewall {wins view args} {
proc futil_bmatrix_toggle {w k1 k2 valuevar selvar givenvar i} {
proc futil_bmatrix_edit {w k1 k2 valuevar givenvar t i} {
proc futil_bmatrix_relabel {w} {
proc futil_bmatrix_reset {w} {
proc bmatrix_test {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/bocofile.tcl]]
proc boco_load {bocofile {allbc 0} {prefix ""}} {
proc boco_add_family {fname} {
proc boco_save {bocofile {boco boco}} {
proc boco_line_join {stuff} {
proc boco_save_full {bocofile {prefix ""}} {
proc boco_save_famboco {bocofile {boco boco}} {
proc boco_collapse {} {
proc boco_save_by_families {bocofile {prefix ""}} {
proc boco_fam_putone {fp ne t name1 name2 fam_names} {
proc boco_edit {} {
proc boco_fill_listbox {w} {
proc boco_edit_setboco {listb fname} {
proc boco_edit_putone {i} {
proc boco_edit_setdata {} {
proc boco_edit_add {} {
proc boco_edit_delete {win n} {
proc boco_edit_full {{prefix ""}} {
proc boco_edit_rdups {} {
proc boco_edit_rpat {} {
proc boco_editf_seltype {} {
proc boco_editf_selone {stuff} {
proc boco_editf_add {} {
proc boco_editf_delete {} {
proc boco_editf_populate {} {
proc boco_editf_putrow {c string floats} {
proc boco_editf_delrow {c} {
proc boco_editf_get {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/boco_solver.tcl]]
proc boco_find_available {} {
proc boco_edit_sol {prefix} {
proc boco_edit_sol_new_format {bocofile} {
proc boco_edit_sol_famdata {} {
proc boco_sol_write {} {
proc boco_solver_default {} {
proc boco_sol_convert {prefix in try_makeup} {
proc boco_sol_form {w write_button} {
proc boco_sol_list_solvers {} {
proc boco_sol_okay_for_fam {t} {
proc boco_sol_list_types {cat} {
proc boco_sol_list_typecats {} {
proc boco_sol_get_typecat {type} {
proc boco_sol_setfam {fam} {
proc boco_sol_showfam {fam on} {
proc boco_sol_addtext {w data pos} {
proc boco_sol_typeof {data} {
proc boco_sol_seltext {w pos} {
proc boco_sol_setsolver {} {
proc boco_sol_add {} {
proc boco_sol_delete {} {
proc boco_sol_modify {} {
proc boco_sol_editone {pos} {
proc boco_sol_settype {d reset what} {
proc boco_sol_settypecat {d settype what} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/bubble.tcl]]
proc bubble_setup {} {
proc bubble_action {what win {text ""}} {
proc bubble_show {win {text ""}} {
proc bubble_hide {} {
proc bubble_define {win mess} {
proc bubble_define_image {win name} {
proc bubble_clear {prefix} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/busy.tcl]]
    proc busy {on args} {
    proc busy {on args} {
proc busy_set_cursors {w} {
    proc busy {args} {}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/checkbox.tcl]]
proc check_box {w options size variable {check 1} {all_cmd ""} \
proc form_check_box_setstate {w on} { check_box_active $w $on }
proc check_box_active {w on} {
proc check_box_form {w text options size variable {check 1} {all_cmd ""} \
proc check_box_add_one {w opt} {
proc check_box_val_for_label {w text} {
proc check_box_put_trace {w} {
proc check_box_remove_trace {w} {
proc check_box_do_trace {w v1 v2 wh} {
proc check_box_adjust_visible {w} {
proc check_box_button {w on} {
proc check_update_variable {w i} {
proc check_box_see {w val {starti 0} {useval 0}} {
proc check_box_see_pat {w val {starti 0}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/choose_one.tcl]]
proc choose_one {mess choices {default ""} {geo +300+300} {delete_cmd ""} {extra_widget_cmd ""} {title Selection}} {
proc choose_one_delete {w command} {
proc choose_multiple {mess choices {geo +300+300} {title "Selection"}} {
proc choose_multiple_all {list on} {
proc select_multiple_toggle {w y} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/coloredit.tcl]]
proc futil_colorentry {w var tabgeo {act ""} {otheropt ""} {otheroptvar ""}
proc form_colorbutton_setstate {w on} {
proc edit_one_color {message default {allow_names 1} {otheropts ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/colormap.tcl]]
proc cmap_create {w {images ""} {min ""} {max ""} {title ""}} {
proc cmap_adjust {w cmap min max {title ""}} {
proc cmap_delete {w cmap} {
proc cmap_make_current {w image} {
proc cmap_update_sigfigs {} {
proc cmap_bnw {w on} {
proc cmap_drag {w crange entry starty endy pixels} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/commands.tcl]]
proc command_define {longname shortname icon cmd bubble helpurl whenactive \
proc command_delete {longname} {
proc command_check_exists {longname} {
proc command_set_text {longname longlabel shortlabel bubble helpurl} {
proc command_set_icon {args} {
proc command_set_tree_icon {args} {
proc command_make_toolbar {longname rownum entries {at_end 1}} {
proc command_make_toolbar_space {rownum} {
proc command_create_toolbars {} {
proc command_create_one_toolbar {longname} {
proc command_create_toolbars_ent {cmd} {
proc command_get_bubble {name} {
proc command_make_menu {longname active side entries args} {
proc command_add_to_menu {longname ents} {
proc command_reset_menu {longname ents} {
proc command_get_menu_entries {longname} {
proc command_create_menus {mbar} {
proc command_create_one_menu {longname but} {
proc command_put_menu_entry {m ent ind in_cascade} {
proc command_language_name {name short} {
proc command_update_variable_cascade {menu prefix var} {
proc command_set_hotkeys {keys} {
proc command_set_hotkeys_tdv {keys} {
proc command_create_hotkeys {} {
proc command_get_menu {name} {
proc command_cycle_variable {var vals cmd} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/commands_guibase.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/command_coords.tcl]]
proc set_coordinate_system { name } {
proc list_coordinate_systems { } {
proc csystem_select_point { how var_name { base_var_name "" } } {
proc create_coordinate_system { type name center xaxis yaxis zaxis } {
proc delete_coordinate_system { name } {
proc get_coordinate_system { name } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/configfile.tcl]]
proc write_config_file {array_var file} {
proc read_config_file {array_var filelist} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/csystem.tcl]]
proc coordinate_systems { } {
proc add_point_select { w suf txtvar var ln base_var def_val active_var } {
proc csystem_done {} {
proc csystem_delete {} {
proc csystem_create {} {
proc get_csys_names { } {
proc csystem_set {} {
proc csystem_set_variables {cs} {
proc update_csystem_type { } {
proc coordinate_system_form { w } {
proc csystem_convert {g_to_l} {
proc csystem_update_form {} {
proc csystem_update_display {which on} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/cursors.tcl]]
proc set_cursor {w spec} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/curve.tcl]]
proc curve_viewer {w title geo xlabel ylabels specs done_cmd rescale_cmd
proc curve_delete_plot {w} {
proc curve_load {w {load_func ""}} {
proc curve_save {w {save_func ""}} {
proc curve_editor {w title geo xlabel ylabels specs {load_stuff ""} {save_stuff ""}} {
proc curve_monitor {w title text_title geo xlabel ylabels buttons ylog {width 600} {height 600} {xint 1} {subform 0}} {
proc curve_limits {w} {
proc curve_monitor_addline {w line {color ""}} {
proc curve_monitor_addpoint {w xval yvals} {
proc curve_monitor_reset {w title} {
proc curve_monitor_update {w} {
proc curve_monitor_done {w} {
proc curve_setstuff {w specs ylabels} {
proc curve_minmax {w} {
proc curve_updownbuts {w x y} {
proc curve_full {w} {
proc curve_setr {w} {
proc curve_mod {w what pct} {
proc curve_perform {w {width 0} {height 0}} {
proc curve_setup {w width height} {
proc curve_define_colors {} {
proc curve_add {w num width height} {
proc curve_add_circle {w num pt} {
proc curve_update {w num} {
proc curve_event {w which op but num x y} {
proc curve_move {w num pt x y} {
proc curve_closest {w num x y} {
proc curve_after {w num x} {
proc curve_compute_linear_ticks {min max num int nosc} {
proc curve_compute_log_ticks {min max num nosc} {
proc curve_pick_item {num} {
proc curve_zoom_begin {w x y} {
proc curve_zoom_drag {w x y} {
proc curve_zoom_end {w x y} {
proc curve_edit_bindings {w it what num} {
proc curve_hardcopy {w} {
proc curve_start_hardcopy {w} {
proc curve_end_hardcopy {} {
proc blt_curve_hardcopy {w} {
proc blt_curve_start_hardcopy {w} {
proc blt_curve_full {g w} {
proc blt_curve_full {g w} {
proc blt_curve_zoom_start {g x y} {
proc blt_curve_zoom_end {g x y} {
proc blt_curve_zoom_motion {g x y} {
proc blt_curve_add {w num width height} {
proc blt_toggle_item {w num} {
proc blt_curve_setup {w} {
proc blt_curve_update {w num} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/dialog.tcl]]
proc dialog {w title mess entries} {
proc dialog_rewrite {expr replace prefix} {
proc dialog_check_active {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/digest.tcl]]
proc load_fileset {dir dfiles ifiles} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/display_sub.tcl]]
proc setup_display_menu {mb} {
proc tcl_console_update {} {
proc set_background {} {
proc depthcue_update {} {
proc length_in_units {val fmt} {
proc coords_in_units {val} {
proc check_distance {} {
proc check_location {} {
proc get_one_location {{mess ""} {only_ep 0}} {
proc get_one_xy_location {{mess ""}} {
proc track_location {} {
proc get_graphics_loc {} {
proc axes_update {{minmax 0} {ask 1}} {
proc axes_do_select_minmax {ismax} {
proc family_name_compare {ind n1 n2} {
proc fam_color_compare {f1 f2} {
proc fam_id_compare {f1 f2} {
proc fam_get_sorted {} {
proc fam_get_visible {} {
proc disp_add_marker {} {
proc disp_clear_markers {} {
proc disp_add_ruler {} {
proc disp_clear_rulers {} {
proc disp_get_location {{varname ""} {do_exp 1} {what "the point"} {local_sys 0}} {
proc get_explicit_point {local_sys} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/exec_cmds.tcl]]
proc cmd_rm {args} {
proc cmd_rmdir {args} {
proc cmd_rm_r {args} {
proc cmd_cp {args} {
proc cmd_cp_r {args} {
proc cmd_mv {args} {
proc cmd_rename {old new} {
proc cmd_mkdir {dir}      {
proc cmd_date {} {
proc cmd_chmod {mod file} {
proc cmd_kill {pid {sig 15}} {
proc cmd_uname_n {} {
    proc cmd_whoami {} {
    proc cmd_uname_a {} {
    proc cmd_tempfile {fn {suff ""}} {
    proc cmd_gzip {args}      { return [eval exec gzip -f $args] }
    proc cmd_cat_onto {f1 f2} { return [exec cat $f1 >>$f2] }
    proc cmd_tar {args}       {
    proc cmd_uuencode {f u {f2 ""}} {
    proc cmd_uudecode {uu}    { return [exec start uudecode $uu] }
    proc cmd_grep {args}      { return [eval exec grep $args] }
    proc cmd_renice {pri pid} { return "" }
    proc cmd_wc {file}        { return [exec wc $file] }
    proc cmd_xterm {args}     {
    proc cmd_ln_s {from to}   { return [file copy $from $to] }
    proc edit_file {{file ""} {back 0}} {
    proc print_file {filename} {
    proc check_process_exists {pid} {
    proc cmd_pagesize {} {
    proc cmd_freemem {} {
    proc cmd_whoami {} {
    proc cmd_uname_a {}       { return [exec [get_path uname] -a] }
    proc cmd_tempfile {fn {suff ""}} {
    proc cmd_gzip {args}      { return [eval exec [get_path gzip] -f $args] }
    proc cmd_cat_onto {f1 f2} { return [exec [get_path cat] $f1 >>$f2] }
    proc cmd_tar {args}       { return [eval exec [get_path tar] $args] }
    proc cmd_uuencode {f u {f2 ""}} {
    proc cmd_uudecode {uu}    { return [exec [get_path uudecode] $uu] }
    proc cmd_grep {args}      { return [eval exec [get_path grep] $args] }
    proc cmd_renice {pri pid} {
    proc cmd_wc {file}        { return [exec [get_path wc] $file] }
    proc cmd_xterm {args}     { return [eval exec [get_path xterm] $args] }
    proc cmd_ln_s {from to}   { exec [get_path ln] -fs $from $to }
    proc cmd_echo {args}  { eval exec echo $args }
    proc edit_file {{file ""} {back 0}} {
    proc print_file {filename} {
    proc cmd_pagesize {} {
    proc check_process_exists {pid} {
    proc cmd_freemem {} {
proc cmd_edit_file {{file ""} {back 0}} { return [edit_file $file $back] }
proc cmd_print_file {filename} { print_file $filename }
proc cmd_check_process_exists {pid} { return [check_process_exists $cmd] }
proc tmp_filename {} {
proc win_drives {} {
proc glob_fixed {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/famboco_edit.tcl]]
proc mess {line args} { puts -nonewline $line }
proc busy args {}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/family_boco.tcl]]
proc famboco_load_bcinfo {file {quiet 0}} {
proc famboco_load_line {filename line fp} {
proc famboco_include_file {filename sub only path ignore} {
proc famboco_expand_dup_blocks {} {
proc famboco_reset_positions {arglist} {
proc famboco_get_default_args_and_names {file expand_dup_blocks} {
proc famboco_parse_param_node {parent line fp cat filename ignore} {
proc famboco_load {file} {
proc famboco_load_old {file} {
proc famboco_load_from_list {list} {
proc famboco_save {file {fams ""}} {
proc famboco_save_old {file {fams ""}} {
proc famboco_save_to_list {{fams ""}} {
proc famboco_get_info {sol} {
proc famboco_edit {{sol Generic} {show_fam_func ""} {skip_unused 0}} {
proc famboco_edit_toggle_active {node} {
proc famboco_flesh_out {fam bcs} {
proc famboco_is_bcinfo {f} {
proc famboco_set_solver {d {sol ""} {for_attributes 0}} {
proc famboco_edit_select_node {node} {
proc famboco_edit_update_icons {{sel_fams ""} {num ""}} {
proc famboco_edit_data_for_bcicon {fam} {
proc famboco_edit_setfam {params fam} {
proc famboco_bc_type_title_dims {bc} {
proc famboco_edit_onebc {params bc fam num} {
proc famboco_edit_onebc_extract_data {bc} {
proc famboco_something_changed {} {
proc famboco_edit_fillin_args {d varname num title args bcargs html bubble params nodename_binding active_var all_active} {
proc famboco_edit_onebc_extract_args {args bcargs} {
proc family_boco_pnode_children {pnode args} {
proc family_boco_pnode_subtree_choicelist {pnode} {
proc family_boco_pnode_children_old {pnode args} {
proc famboco_edit_getfam {params} {
proc famboco_check_all_entries {} {
proc famboco_edit_getnum {params i} {
proc famboco_make_edit_vals_generic {i} {
proc famboco_edit_delete {subform num} {
proc famboco_edit_copy {subform num} {
proc famboco_edit_pastebc {} {
proc famboco_copy_param_node {pnode node} {
proc famboco_get_bc_types {variable tvariable dims} {
proc famboco_edit_newbc {{vals ""} {dims ""}} {
proc famboco_make_default_bc {type isactive famname in_fbc_order} {
proc famboco_edit_newparam {type} {
proc famboco_edit_newfam {d} {
proc famboco_edit_populate {d} {
proc famboco_edit_populate_family {f} {
proc famboco_edit_params {{sname ""} {reload 1}} {
proc famboco_finish_editing {} {
proc famboco_load_params {sname {quiet 0}} {
proc famboco_edit_params_build {} {
proc famboco_edit_params_fill_tree {node do_mult} {
proc famboco_edit_params_create_new {crnode nameval vals} {
proc famboco_edit_params_doubleclick {node} {
proc famboco_edit_params_select {node} {
proc famboco_edit_initialize_param_node_defaults {} {
proc famboco_edit_params_delete {dd node} {
proc famboco_edit_params_after_edit {node} {
proc famboco_edit_params_rename {node nname} {
proc famboco_edit_load_param_values {file {clear 1}} {
proc famboco_edit_param_name {curnode} {
proc famboco_edit_list_is_prefix {shorter longer} {
proc famboco_edit_save_param_values {file {pats ""}} {
proc famboco_annotate_family_boco {file} {
proc famboco_wizard {prog args} {
proc ic_param_is_loaded {} {
proc ic_param_is_modified {} {
proc ic_param_set_modified {{flag 1}} {
proc ic_param_add_node {parent name values} {
proc ic_param_delete_node {node} {
proc ic_param_list_children {node {tail 0}} {
proc ic_param_node_list {{pat *}} {
proc ic_param_node_exists {node} {
proc ic_param_unused_child_name {node {prefix ""}} {
proc ic_param_get_values {node} {
proc ic_param_set_values {node values} {
proc ic_param_rename {oldprefix newprefix {delete_non_matching 0}} {
    proc ic_boco_fam_dim {fam} {
    proc ic_boco_clear_icons {} {}
    proc ic_boco_add_icon {args} {}
    proc form_paned {w ch_opts side tabdata} {
    proc form_scrollwin {w width height tabdata} {
    proc form_tree {w tabdata} {
proc get_solver_info {} {
proc famboco_list_csystems {} { return "" }
proc famboco_to_schema {file} {
proc famboco_schema_order {curarg defidx} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/family_boco_old.tcl]]
proc famboco_load_bcinfo {file} {
proc famboco_parse_param_node {parent line fp} {
proc famboco_load {file} {
proc famboco_load_old {file} {
proc famboco_load_from_list {list} {
proc famboco_save {file {fams ""}} {
proc famboco_save_old {file {fams ""}} {
proc famboco_save_to_list {{fams ""}} {
proc famboco_get_info {sol} {
proc famboco_edit {{sol Generic} {show_fam_func ""}} {
proc famboco_is_bcinfo {f} {
proc famboco_set_solver {d {sol ""}} {
proc famboco_edit_setfam {d params fam} {
proc famboco_edit_onebc {params bc} {
proc famboco_edit_fillin_args {d varname num title args bcargs html bubble params nodename_binding} {
proc famboco_edit_getfam {params} {
proc famboco_edit_getnum {params i} {
proc famboco_make_edit_vals_generic {i} {
proc famboco_edit_delete {subform num} {
proc famboco_edit_copy {subform num} {
proc famboco_edit_pastebc {d} {
proc famboco_edit_newbc {d {vals ""}} {
proc famboco_edit_newparam {type} {
proc famboco_edit_newfam {d} {
proc famboco_edit_populate {d} {
proc famboco_edit_params {{sname ""}} {
proc famboco_edit_params_build {} {
proc famboco_edit_params_fill_tree {node do_mult} {
proc famboco_edit_params_create_new {crnode nameval vals} {
proc famboco_edit_params_select {node} {
proc famboco_edit_params_delete {dd node} {
proc famboco_edit_params_after_edit {node} {
proc famboco_edit_params_rename {node nname} {
proc famboco_edit_load_param_values {file} {
proc famboco_edit_param_name {curnode} {
proc famboco_edit_list_is_prefix {shorter longer} {
proc famboco_edit_save_param_values {file} {
proc ic_param_add_node {parent name values} {
proc ic_param_delete_node {node} {
proc ic_param_list_children {node {tail 0}} {
proc ic_param_get_values {node} {
proc ic_param_set_values {node values} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/family_files.tcl]]
proc family_topo_load {tfile} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/fileselect.tcl]]
proc file_selection {args} {
proc file_select_rel {message {default ""} {title "File selection"} \
proc file_select {message {default ""} {title "File selection"} \
proc file_select_clear_lists {d} {
proc file_select_no_blocking { { dim 0 } } {
proc file_is_blocking {f} {
proc file_select_lc { text default {title "File selection"} \
proc file_select_multiple {message default {title "File selection"} \
proc file_select_prev {f} {
proc file_select_one {double dir no_sel box_name} {
proc file_select_complete {} {
proc file_select_complete_pick {opt} {
proc file_select_finish {} {
proc file_select_done {} {
proc file_select_update {} {
proc file_select_change_drive {} {
proc fcompare { a b } {
proc file_select_sort_by_time {files cur_dir } {
proc file_select_list {dir } {
proc sort_files { files stype cur_d } {
proc add_stars { files } {
proc add_spaces { files } {
proc file_select_do_list {cur_d dir get_dir stype vf stars ok_func
proc file_select_visible_func {vf d} {
proc file_select_mkdir {} {
proc file_select_delete {} {
    proc busy args {}
    proc check_it1 {name} { return [string match *.c $name] }
    proc check_it {name} {
proc file_select_entry {w var get_dir new_ok msg tabgeo {act ""} {ok_func ""} \
proc file_select_entry_get {but ent var msg get_dir new_ok ok_func \
proc file_select_entry_adjust {ent} {
proc file_select_ok_patterns {pats file} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/flexlist.tcl]]
proc flexlist {w title cols data {apply_func ""} {focus_func ""} {use_active 1} {newline_func ""} {modify_func ""} {delete_func ""} {extra_widgets_func ""}} {
proc form_flexlist {w cols data height geo {focus_func ""} {use_active 1} {wfixed 0} {newline_func ""} {modify_func ""} {delete_func ""}} {
proc flexlist_apply {w apply_func} {
proc flexlist_newline {w data focus_func newline_func modify_func} {
proc flexlist_entry_func_get {title func var} {
proc flexlist_option_change {w num name} {
proc flexlist_reset {w num} {
proc flexlist_delete {func w num} {
proc flexlist_clear {func w} {
proc flexlist_set {w num col val} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/foptionMenu.tcl]]
proc form_text_optionMenu_dynamic {w varName func after geo {relief flat} \
proc form_text_optionMenu_nt {w varName vals2 after geo {relief flat} \
proc form_text_optionMenu {w varName vals2 after geo {relief flat} \
proc form_bitmap_optionMenu {w varName bpath bfiles after geo {relief flat} \
proc text_optionMenu_postcommand2 {m func rows cmd} {
proc text_optionMenu_postcommand {m varName func rows cmd {ind_on 1}} {
proc text_optionMenu_dynamic {w varName func rows conf cmd} {
proc update_text_optionMenu_dynamic {w varName func rows conf cmd mwvar args} {
proc text_optionMenu_dynamic_post {w varName func rows conf cmd} {
proc text_optionMenu {w varName rows conf cmd vals2 {mwvar ""}} {
proc update_text_optionMenu {w {i ""} {mwvar ""} args} {
proc bitmap_optionMenu {w varName rows conf cmd bitmaps_list} {
proc fbitmap_optionMenu {w varName rows conf cmd bpath bfiles mwvar} {
proc update_fbitmap_optionMenu {w {mwvar ""} args} {
proc foptionMenu_pulldown {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/forms.tcl]]
proc form_fonts {} {
proc form_init {w title {class ""} {buttons ""} {retcmd ""} {map 1} {orien 1} \
	proc busy args {}
proc form_init_buttons {w buttons} {
proc form_init_bottom {w wb button_specs} {
proc form_init_sub {w {top ""}} {
proc form_invalidate_cache {} {
proc form_side_figure {w var {pref ""} {opts ""}} {
proc form_side_figure_update {w var force} {
proc form_cancel_class {class {except ""}} {
proc form_cancel_all {except} {
proc form_check_visible_class {class} {
proc form_subgeo {form but} {
proc form_accept_hack {w} {
proc form_update_saved {w} {
proc form_reset {w} {
proc form_cancel {w} {
proc form_wait {w {use_grab 0}} {
proc form_winmapped {w} {
proc form_widgets_to_variables {w} {
proc form_variables_to_widgets {w} {
proc form_done {w {flag 1}} {
proc form_kill {w} {
proc form_finish {{geo "-0-0"} {map 1} {autoraise 0}} {
proc form_ensure_big_enough {w} {
proc form_setgeometry {w geo {map 1} {autoraise 1}} {
proc form_settitle {w title} {
proc form_check_values {form {multiple 0}} {
proc form_warning {form text {delay 0} {ifclick ""}} {
proc form_warning_dismiss {form} {
proc form_add_save {var {get ""} {set ""} {w ""}} {
proc form_trace_active {w type var vals {menu_item ""}} {
proc form_trace_active_expr {w type activedata {menu_item ""} {top ""}} {
proc form_active_extract_depends {activedata} {
proc form_active_extract_depends_new {activedata} {
proc form_active_extract_depends_old {activedata} {
proc form_reenable_traces {w} {
proc form_reenable_trace_one {var trace} {
proc form_setstate {w type {menu_item ""}} {
proc form_setstate_expr {w type {menu_item ""}} {
proc form_checkstate {data} {
proc form_checkstate_expr {data} {
proc form_active_replace_varnames {data mapping {val_mapping ""}} {
proc form_active_concat_and {c1 c2} {
proc form_dotab {w tabdata stick} {
proc form_delete {w {destroy 1}} {
proc form_unmap {w} {
proc form_map {w} {
proc form_colwidth {w num width {units ""}} {
proc form_rowheight {w num height} {
proc form_doactive {w type activedata {menu_item ""}} {
proc form_canvas {w geo relief borderwidth tabdata {xs 1} {ys 1}} {
proc form_table {w coltitles variable relief borderwidth cellw tabdata \
proc form_table_addrow {w vals {row ""} {fixw 1}} {
proc form_table_fixwidths {w} {
proc form_listbox {w title items click_cmd dclick_cmd geo \
proc form_listbox_action {w multi y com call_with_index} {
proc form_listbox_add {w item} {
proc form_listbox_add_dup {w item} {
proc form_listbox_delete {w item} {
proc form_listbox_delete_index {w pos} {
proc form_listbox_change {w old new} {
proc form_listbox_select {w item {glob 0}} {
proc form_listbox_select_index {w pos} {
proc form_listbox_get_select_index {w} {
proc form_listbox_get_selected {w} {
proc form_listbox_set_selected {w vals} {
proc form_listbox_clear {w} {
proc form_listbox_set {w items {resize 0}} {
proc form_listbox_set_index {w num item} {
proc form_listbox_get {w {num ""}} {
proc form_listbox_size {w} {
proc form_listbox_scale {w size} {
proc form_listbox_setstate {w on} {
proc form_sync_listboxes {w titles widths click_cmd height \
proc form_sync_listboxes_select_index {w pos} {
proc form_sync_listboxes_delete_index {w pos} {
proc form_sync_listboxes_delete_matching {w col val} {
proc form_sync_listboxes_clear {w} {
proc form_sync_listboxes_add {w vals {by_rows 0} {select 0}} {
proc form_sync_listboxes_set {w vals {by_rows 0}} {
proc form_sync_listboxes_yview {pref ncols args} {
proc form_sync_listboxes_action {w nc y com} {
proc form_sync_listboxes_get {w row} {
proc form_sync_listbox_setstate {w on} {
proc form_set_tablist {w ents} {
proc form_entry {w var datatype tabdata {activedata ""} {width 8} {rjust ""} {save_var ""} {cmd ""}} {
proc form_set_default_return_command {cmd} {
proc form_entry_trace_tail {wid short long setshort} {
proc form_tab {w form fore} {
proc form_entry_get {w} {
proc form_entry_set {w value} {
proc form_entry_setstate {w on} {
proc form_entry_check {w} {
proc form_check_type {type val {allow_exprs 1}} {
proc form_text {w title var tabdata {activedata ""} {geo 40x10} {xscroll 0} {font ""}} {
proc form_text_get {w} { return [$w.text get 1.0 end] }
proc form_text_set {w value} {
proc form_text_append {w value} {
proc form_text_setstate {w on} {
proc form_text_editor {w main title var tabdata {activedata ""} {geo 40x10} {font ""}} {
proc form_text_editor_create_menu {w main type state} {
proc form_text_editor_set_linenumber {} {
proc form_text_editor_trace_linenumber {state} {
proc form_text_editor_monitor {proc args} {
proc form_text_editor_open {t {file ""}} {
proc form_text_editor_replay_open {t} {
proc form_text_editor_save {t {file ""}} {
proc form_text_editor_replay_save {t} {
proc form_text_editor_saveas {t} {
proc form_text_editor_new {t} {
proc form_text_editor_search {t} {
proc form_text_editor_replace {t} {
proc form_text_find_next {t {replace 0}} {
proc form_text_find_replace {t {all 0}} {
proc form_text_editor_direction {t dir} {
proc form_text_editor_undo {t} {
proc form_text_editor_redo {t} {
proc form_text_editor_cut {t} {
proc form_text_editor_copy {t} {
proc form_text_editor_paste {t} {
proc form_text_editor_get {w} { return [$w.txt get 1.0 end] }
proc form_text_editor_set {w value} {
proc form_text_editor_append {w value} {
proc form_text_editor_setstate {w on} {
proc form_make_table {rows1} {
proc form_button {w title command tabdata {activedata ""}} {
proc form_button_bitmap {w bmap command tabdata {activedata ""}} {
proc form_button_setstate {w on} {
proc form_checkbutton {w title var tabdata {activedata ""} \
proc form_checkbutton_configure_param {w var} {
proc form_checkbutton_setstate {w on} {
proc form_checkbutton_edit_params {cw var val title} {
proc form_radiobutton {w title var val tabdata {activedata ""} \
proc form_radiobutton_setstate {w on} {
proc form_radiobutton_edit_params {cw} {
proc form_menubutton {w title menu tabdata {activedata ""}} {
proc form_menubutton_regular {w title menu tabdata {activedata ""}} {
proc form_menubutton_setstate {w on} {
proc form_menu_item_setstate {w on item} {
proc form_optionmenu {w var opts tabdata {activedata ""} {changecmd ""}} {
proc form_optionmenu_update {w var args} {
proc form_optionmenu_dynamic {w var func tabdata {activedata ""}} {
proc form_optionmenu_dynamic_post {w var func} {
proc form_commandmenu {w text commands tabdata {activedata ""}} {
proc form_label {w title tabdata {activedata ""} {try_ltext 1} {justify ""}} {
proc form_label_bitmap {w bitmap tabdata {activedata ""}} {
proc form_label_image {w file tabdata {activedata ""}} {
proc form_label_variable {w var tabdata {activedata ""}} {
proc form_label_setstate {w on} {
proc form_label_settext {w text} {
proc form_message {w text tabdata {activedata ""}} {
proc form_message_setstate {w on} {
proc form_scale {w var command orient min max incr tabdata {activedata ""} \
proc form_scale_setstate {w on} {
proc form_frame {w relief borderwidth tabdata} {
proc form_label_frame {w label tabdata {act ""}} {
proc form_label_frame_setstate {w on} {
proc form_choiceframe {w} {
proc form_subframe {w sub} {
proc form_underline {w tabdata} {
proc form_setup_switch {frame varname {opts ""} {cmd ""} {change_size 1}} {
proc form_scroller {w maxh tabdata {hfixed 0} {wfixed 0}} {
proc form_scroller_update {w hfixed {wfixed 0}} {
proc form_scroller_hack {w} {
proc form_label_text {w {def ""}} {
proc form_set_label_text {pairs} {
proc form_scroller_adjust {d} {
proc form_collect_children {win class req fields} {
	proc blt_table_column {w args} {
	proc blt_table_row {w args} {
	proc blt_table_slaves {w} {
	proc blt_table_column {w args} {
	proc blt_table_row {w args} {
	proc blt_table_slaves {w} {
		proc blt_$cmd {args} "return \[eval blt::$cmd \$args\]"
proc grid_uniform_cols {par widgets} {
	proc set_cursor {w spec} { $w configure -cursor arrow }
	proc set_cursor {w spec} { $w configure -cursor $spec }
proc form_auto_raise {w} {
proc form_auto_raise_window {w state} {
proc form_notebook {w pages tabdata} {
proc form_notebook_addpage {w name title {act ""} {raisecmd ""}} {
proc form_notebook_deletepage {w name} {
proc form_notebook_finish {w {nofill ""}} {
proc form_notebook_setstate {w on page} {
proc form_paned {w ch_opts side tabdata} {
proc form_scrollwin {w width height tabdata {opts ""}} {
proc form_tree {w tabdata {opts ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/formutil.tcl]]
proc futil_drop_down_button {but back activeback} {
proc futil_listnoentry {w var choice_func tabgeo {act ""} {setcmd ""} \
proc futil_choicelist {w data_type choice_func tabdata {activedata ""} {setcmd ""} {transcmd ""} {labels 0} {postcmd ""} {edit 1}} {
proc futil_choicelist_part2 {w setcmd transcmd {ent_varName ""} \
proc futil_menu_release_if_not {x y m} {
proc futil_menu_move_on_one {w y} {
proc futil_menu_select_cmd {w mode y setcmd transcmd {ent_varName ""}} {
proc futil_menu_select_one {w y setcmd transcmd {ent_varName ""}} {
proc futil_post_choicelist {w type func {no_ent 0} {labels 0} {postcmd ""}} {
proc futil_listentry {w var choice_func tabgeo {act ""}
proc futil_tkMbPost {w} {
proc futil_choicemenu {w data_type choice_func tabdata \
proc futil_update_choicemenu {w type func setcmd} {
proc futil_menuentry {w var choice_func tabgeo \
proc try {} {
proc try_func {} {
proc futil_menuentry_labels {w var choice_func tabgeo {act ""} {setcmd ""}
proc futil_menuentry_labels_list_set {var setcmd} {
proc futil_update_choicemenu_labels {w var func setcmd} {
proc futil_update_choicemenu_text {var} {
proc futil_get_file {{msg ""} {dir .} {def ""} {pats *} {geo ""} \
proc futil_fileentry {w var directory tabgeo {act ""} {pats *}
proc futil_filemenu {w var dir tabdata {activedata ""} {pats *}
proc unused__futil_fileselect {but ent msg dir var {pats *} {same_dir 0}
proc futil_fileselect_ok {dir} {
proc futil_fileselect {but ent msg dir var {pats *} {same_dir 0}
proc futil_fileselect_select {name} {
proc futil_fileselect_select2 {name} {
proc futil_fileselect_populate {} {
proc futil_start_end_box {d title vars prefix tabdata {activedata ""}} {
proc futil_threecomps {d title prefix tabdata {activedata ""}} {
proc futil_radiobuttons {d title options var tabdata {activedata ""}} {
proc futil_quad_geo {d type tabgeo {prefix ""}} {
proc futil_prism_geo {d type tabgeo {prefix ""}} {
proc futil_incline_geo {d type tabgeo {prefix ""}} {
proc futil_cyl_geo {d type tabgeo use_irad use_height {prefix ""}} {
proc futil_tri_geo {d type tabgeo} {
proc futil_setup_switch {frame varname {opts ""} {cmds ""} {change_size 0}} {
proc futil_perform_switch {w varname opts cmds change_size args} {
proc futil_check_width {sub} {
proc futil_updown {w var minv maxv tabdata {activedata ""}} {
proc futil_updown_reset_minmax {var minv maxv} {
proc futil_updown_modify {var incr} {
proc futil_edit_list {w title var geo {selfunc ""}} {
proc futil_edit_list_select {w ch} {
proc futil_edit_list_update {w} {
proc futil_edit_list_add {w} {
proc futil_edit_list_delete {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/game.tcl]]
proc game_put_ship {} {
proc game_update {} {
proc game_make_splat {} {
proc game_new_shot {} {
proc game_shots {} {
proc game_random {n} {
proc game_new_bubble {} {
proc game_update_bubbles {} {
proc game {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/guibase.tcl]]
    proc prof_worst {{what exclusiveRuntime} {funcs ""} {reset 1}} {
    proc prof_all {{what exclusiveRuntime}} {
    proc prof_pat {pat {what avgRuntime}} {
    proc backslashify {s {n 1}} {
    proc backslashify {s {n 1}} {
proc load_fileset {dir dfiles ifiles} {
    process
    process_internal
    proc delete_window_protocol {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/gui_form.tcl]]
proc gui_form_define {title name settings code} {
proc gui_form_eval {__name __code} {
proc gui_form_item {d item name row} {
proc gui_form_select {type var mess maxn} {
proc gui_form_preselect {name settings} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/hardcopy.tcl]]
proc file_hardcopy {} {
proc file_hardcopy_form {pref geo {format_choice 1}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/help.tcl]]
proc help_setup {{base ""} {root_dir ""}} {
proc help_define {w item page tag} {
proc help_clear {prefix} {
proc help_window {x y} {
proc help_window_path {w {y 0}} {
proc help_main_topic {} {
proc help_topic {file {tag ""}} {
proc help_url {url {is_chm 0}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/histogram.tcl]]
proc test_histogram {} {
proc histo_format {x {use_more 0}} {
proc make_histogram {w title xvals yvals {ylimit 0} {labels ""} \
proc histo_replot_cmd {cmd} {
proc histo_reset_cmd {cmd cmd2} {
proc histo_refresh_cmd {cmd arguments} {
proc histo_click {w x y toggle} {
proc histo_click_on_range {w minv maxv} {
proc histo_click_on_bucket {w num} {
proc histo_highlight {w force com arguments} {
proc histo_postscript {w} {
proc histo_replot {w com arguments ylimit} {
proc histo_edit_title {w id} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/iges.tcl]]
proc iges_float {num} {
proc iges_get_units {file} {
proc load_iges {w file verbose {create_prefix ""} {get_head 0}} {
proc load_dxf {w file verbose {create_prefix ""}} {
    proc iges_split_line {line comma semi {dummy_front 1}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/interrupt.tcl]]
proc interrupt {what args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/jobs.tcl]]
proc jobs_view {} {
proc jobs_view_update {} {
proc jobs_add {pid name cmd} {
proc jobs_remove {pid} {
proc jobs_terminate {pid} {
proc jobs_status {pid} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/mac-bindings.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/mainwindow.tcl]]
proc make_main_window {{orient v}} {
proc make_main_window_regular {vt {orient v}} {
proc make_main_window_menubar {vt} {
proc make_opt_button {b} {
proc make_orient_button {b} {
proc make_main_window_logo {vt fullsize} {
    proc orient_command {dir} {
proc define_strings {win sub bubble label helpurl} {
proc make_language_text {{file1 ""}} {
proc make_language_text1 {fp w} {
proc make_language_text2 {fp key1 key2 def_text do_bub} {
proc set_title {string} {
proc withdraw_toplevels {main dir} {
proc make_phase_panel {name maxr realmaxwidth panel {orient v}} {
proc make_phase_menu {mbar title name info} {
proc phase_enable {on {w .v.top}} {
proc add_cascade {menu_win stuff} {
proc phase_trace_active {win var} {
proc phase_trace_active_proc {win var args} {
proc phase_trace_menu {win var menus} {
proc phase_trace_menu_proc {win var} {
proc set_phase {{ph ""}} {
proc trace_subphase_panel {parent var row nr} {
proc full_size_window {} {
proc adjust_window_geometry {} {
proc top_adjust_window_geometry {} { adjust_window_geometry }
proc readjust_edit_geometry {} {
proc sun_geometry {w geo} {
proc list_all_windows {w} {
proc change_all_fonts {what} {
proc change_all_fonts_windows {w ofont nfont} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/makedoc.tcl]]
proc makedoc {out files {title "Programmer's guide"}} {
proc file_pguide {{file ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/mesh_params.tcl]]
proc meshparam_edit {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/misc.tcl]]
proc putcenter {w} {
proc numsort {names} {
proc beep {} {puts -nonewline stderr \007}
proc lfirst {list} {lindex $list 0}
proc llast {list} {lindex $list [expr {[llength $list] - 1}]}
proc old_lreplace {list index new} {
proc ldelete {list elem} {
proc ldelete_multiple {list del_list} {
proc lmember {list elem} {
proc lreverse {list} {
proc luniq {list} {
proc replace_string {full old new} {
proc first_existing_font {fonts} {
proc read_token {f} {
proc swap {a b} {
proc locate_useful_programs {} {
proc get_path {what {check 0}} {
proc static {args} {
proc random {limit} {
proc determine_memory {} {
proc confirm {message {doit 0}} {
proc user_error {mess} {
proc popup {title mess {quest 0}} {
proc set_tabring {wins} {
proc handle_events {delay} {
proc newest_file_in_dir {dir pats} {
proc variable_space_used {} {
proc is_feature_available {feat def_lic} {
proc license_unavailable_warning {} {
proc view_file {{file ""} {indir ""} {mess ""}} {
proc tcl_memory {} {
proc sf {file} {
proc with_view_inactive {cmd} {
proc tearoff_record {old new} {
proc rm_tmp_file {file} {
proc gui_license_check {feat} {
proc list_drives {} {
proc win_shortname {pathname} {
proc vec_cross {v1 v2} {
proc vec_dot {v1 v2} {
proc vec_unit {v1} {
proc vec_times {vec s} {
proc vec_add {v1 v2} {
proc vec_sub {v1 v2} {
proc vec_minus {v} {
proc vec_mag {v1} {
proc vec_angle {v1 v2} {
proc vec_sin_angle {v1 v2} {
proc vec_normalize {v} {
proc vec_orthonormal_righthanded_basis {v1 v2} {
proc remove_control_ms {infile outfile} {
proc copy_menu_options {m1 m2} {
proc copy_menu_entries {opt m1 m2 {i0 0} {i1 ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/my-dialog.tcl]]
    proc tk_dialog {w title text bitmap default args} {
    proc tk_dialog {w title text bitmap default args} {
proc dialog2 {w title args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/my-tkerror.tcl]]
proc tkerror {err} {
proc xxx_tkerror {err} {
proc tkerror_stacktrace {info {header ""}} {
proc tkerror_save {w} {
proc tkerror_report {info stuff_sent message_first} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/old-hardcopy.tcl]]
proc file_hardcopy_subproc {} {
proc file_hardcopy_subproc_form {pref geo {format_choice 1}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/option_edit.tcl]]
proc option_edit {w title save_func pages bottext} {
proc option_edit_fill_tree {w tree optw parentnode page} {
proc option_edit_init_forms {page} {
proc option_edit_click {w node} {
proc option_edit_done {w allp save_func} {
proc option_edit_reset {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/pathentry.tcl]]
proc pathentry {what path {choices ""} {dir ""}} {
proc pathentry_clear {} {catch {top_destroy .pathentry_popup}}
proc pathentry_doit {ent} {
proc pathentry_clicked {ent comp} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/poll.tcl]]
proc tail_dashf {fp cmd} {
proc tail_dashf_proc {fp cmd} {
proc tail_dashf_cancel {fp} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/process.tcl]]
proc start_process {ident win command prompt {use_socket 0} {args ""}} {
	    process_dead 1
    proc process_gets {fp} {
    proc process_gets {fp} { return [gets $fp] }
proc process_socket {ident fp other_addr other_port} {
proc finish_process {} {
proc put_output {stuff} {
proc process_dead { dummy } {
proc command {com {echo 1} {noidle 0} {ndefer 0}} {
	process_dead 2
		process_dead 3
		process_dead 4
proc check_enabled {} {
proc make_message_window {} {
proc message_send_line {m} {
proc message_log_reopen {{fname ""} {put_contents 0}} {
proc message_log_close {} {
proc message_save {} {
proc message_get_filename {default} {
proc message_add_button {name label command} {
proc message_remove_button {name} {
proc message_enable_button {name state} {
proc message_window_visible {} {
proc message_last_end {m} {
proc mess_checkred {} {
proc vmess {line {color ""} {font ""} {update 1} {show_tail 1}} {
proc mess {line {color ""} {font ""} {update 1} {show_tail 1}} {
proc mess_start_saving {} {
proc mess_do_save {m c} {
proc mess_end_saving {} {
proc infomsg {m} { mess "$m\n" }
proc warningmsg {m} { mess "$m\n" red }
proc errormsg {m} { mess "$m\n" red }
proc mess_query {question {color ""} {font ""}} {
proc banner {mess {win default}} {
proc banner_get {{win .v}} {
proc tcl_eval {} {
proc read_until_prompt {fp prompt {cmd ""}} {
proc stop_button {on {cmd ""} {pid ""} {mess ""} {sig ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/process_internal.tcl]]
proc start_process_internal {ident win command prompt} {
proc command_internal {com echo} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/profiler.tcl]]
proc ::profiler::tZero { { tag "" } } {
proc ::profiler::tMark { { tag "" } } {
proc ::profiler::stats {args} {
proc ::profiler::Handler {name args} {
proc ::profiler::profProc {name arglist body} {
proc ::profiler::init {} {
proc ::profiler::print {{pattern *}} {
proc ::profiler::dump {{pattern *}} {
proc ::profiler::sortFunctions {{field ""}} {
proc ::profiler::reset {{pattern *}} {
proc ::profiler::suspend {{pattern *}} {
proc ::profiler::resume {{pattern *}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/projlib.tcl]]
proc make_projlib {file {l_material 1} {l_surface 1} {l_curve 1} 
proc reinit_geom_objects {} {
proc delete_projlib {} {
proc update_bsp_consistency {} {
proc clear_geom_objects {{type ""}} {
proc clear_fam_visible_prev { what } {
proc define_geom_objects {{type ""}} {
proc define_geom_objects2 {type new_obj_names} {
proc define_geom_object {type num} {
proc geometry_change {type num} {
proc update_geom_object {bsp} {
proc delete_geom_object {objs} {
proc geo_delete_if_empty {args} {
proc geom_summary {{pl ""}} {
proc geo_highlight {objs {show_names 0} {diff_colors 0} {force_visible 1}} {
proc geo_unhighlight {objs} {
proc geo_highlight_ents {ents} {
proc geo_unhighlight_ents {ents} {
proc geo_highlight_nums {type nums} {
proc geo_unhighlight_nums {type nums} {
proc projlib_list_families {} {
proc geo_run_hull {{surfs ""} {doit 1} {all_types 0}} {
proc geom_get_objects {what how {names 0} {only_if_dormant 0}} {
proc process_deletes { deletes } {
proc show_geo_selected {im on {color white} {force_visible 0}} {
proc geo_match_name {type pat} {
proc geo_dormant_match_name {type pat} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/query.tcl]]
proc query {w} {
proc query_message {w text} {
proc query_clear {w} {
proc query_enable {w text usedefault default yes no} {
proc query_question {w text} {
proc query_click {w text} {
proc query_enter {w text default} {
proc query_path {w text default} {
proc query_path_lc {w text default} {
proc query_two_choices {w text choice1 choice2} {
proc query_waitvar {w text} {
proc query_enter_or_waitvar {w text default} {
proc query_waitvar_done {w value} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/questionbox.tcl]]
proc question {question {default ""}} {
proc question_box {w title question {default ""} {geo +400+400}} {
proc question_box_mult {w title question entrylist {but_labels {Done Cancel}} {rtype 0}} {
proc lpopup {mess {quest 0} {title Message}} {
proc question_large {question {default ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/readers.tcl]]
proc v3readers_defaults {} {
proc v3readers_init {} {
proc v3readers_append_path {dir} {
proc v3readers_prepend_path {dir} {
proc v3readers_insert_path {dir pos} {
proc v3readers_tcl_dir {pdir} {
proc v3readers_available {{v3prod v3p}} {
proc v3readers_get_reader_label { reader_format } {
proc v3readers_get_reader_name { reader_format } {
proc v3readers_get_reader_data { reader_format data_index } {
proc v3reader_backend_for {bt {v3prod v3p}} {
proc v3reader_backenddesc_for {bt {v3prod v3p}} {
proc v3reader_on_path {backend} {
proc v3reader_match_init {init_file} {
proc v3reader_solver_match {solver_key} {
proc v3reader_variable_match {solver_key variable_key} {
proc v3reader_find_variable {solverd variable_key} {
proc v3reader_varlist_match {solver_key variable_list result_info \
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/regression.tcl]]
proc regression_init {} {
proc regression_parse_list {array args} {
proc regression_check_config {array} {
proc regression_create_list {args} {
proc regression_configure_interface {name action factory meshimpl} {
proc regression_create {dir backend ifile cstyle cfile {addargs ""} \
proc regression_dirsub {dir file} {
proc regression_create_rfint {rfint dir cstyle cfile \
proc regression_test_list {args} {
proc regression_test {dir backend ifile cstyle cfile addargs prec tstep \
proc regression_test_rfint {rfint dir cstyle cfile prec tstep results \
proc regression_unpack {cfile} {
proc regression_repack {packd} {
proc regression_file_create {file {regression_dir ""}} {
proc regression_file {regdesc {opt run} {statout 0}} {
proc regression_report {regdesc regrepfile {opt run} {statout 0}} {
proc regression_cleanup {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/replay.tcl]]
proc replay_start_recording {} {
proc replay_stop_recording {} {
proc replay_before_quit {} {
proc replay_toggle_recording {} {
proc replay_strip {line} {
proc replay_linenumber_of {line} {
proc replay_record_command {com} {
proc replay_record_after_command {com} {
proc replay_gui_is_running {} {
proc replay_form {extras {xscroll 0} {wb_mode 0}} {
proc replay_toggle_edit_mode {mode} {
proc replay_update_editbox {} {
proc replay_start_editor {file num} {
proc replay_stop {} {
proc replay_done {} {
proc replay_dirty {} {
proc replay_batch {file} {
proc replay_doit {args} {
proc replay_doit_cur {} {
proc replay_doit_all {} {
proc replay_doit_range {} {
proc replay_doit_range_reset {} {
proc replay_skip_cur {} {
proc replay_load {{file ""}} {
proc replay_save {{file ""} {skip_usenum 0}} {
proc replay_write_to_journal {cmd after} {
proc replay_save_to_file {file usenum} {
proc replay_warn_dirs {} {
proc replay_renumber {full} {
proc replay_set_number {num} {
proc replay_get_current_line {} {
proc replay_edit {} {
proc replay_clear {} {
proc replay_delete {} {
proc replay_delete_range {} {
proc replay_insert_before {} {
proc replay_list_reset {} {
proc replay_list_setvals {nums} {
proc replay_list_select {} {
proc replay_list_set_select {num} {
proc replay_remove_undo { last_func } {
proc replay_popup_menu {{wfrom ""} {x 20} {y 20} {menus ""}} {
proc replay_undo_clean {w} {
proc replay_edit_filter {w {maybe_edit 1}} {
proc replay_clean {} {
proc replay_clean_old {} {
proc suspend_all_recording {} {
proc resume_all_recording {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/run_application.tcl]]
proc application_wait {} {
proc application_exec {cmd {logfile ""} {quiet 0} {bg_if_logfile 1}} {
proc run_application_guibase {path path2 envname tcltool gets_tetin extra \
proc run_application_direct {path rootenv extra} {
    proc run_application_before {} {
    proc run_application_after {ww} {
proc run_application_command {command { logfile "" } {bg_if_logfile 1}} {
proc run_application_batch {path envname extra {logfile ""} {exec_direct 1}} {
proc run_application_batch_exec_direct {path envname extra {logfile ""}} {
proc application_quit_okay {} {
proc tail_application_log {fp pid line} {
proc application_check_exists {} {
proc application_status {} {
proc application_terminated {{ask 1}} {
proc run_application_exec {command} { 
proc get_program {dir name {try_batch 0}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/s-table.tcl]]
proc st_init {iargs} {
proc st_putdebug {text} {
proc st_parraydebug {arrayname} {
proc st_drawbox {g x1 y1 x2 y2} {
proc st_check_limits {g x y} {
proc st_save_coords {g sx sy} {
proc st_zoom_graph {g} {
proc st_motion_draws {g motion draw} {
proc st_clickdrag_zooms {g} {
proc st_2_clicks_zooms {g} {
proc st_button3_resets {g fr} {
proc st_next_color {} {
proc st_next_symbol {} {
proc st_add_graph_element {g t} {
proc st_graph_message {str} {
proc st_scale_axis {g b axis} {
proc st_graph_curves {} {
proc st_get_non {} {
proc st_push_delete_stack {tname} {
proc st_pop_delete_stack {} {
proc st_new_table_info {newdata} {
proc st_enable_undelete_button {setting} {
proc st_add_table {{temp 0}} {
proc st_pack_tables_parent {path} {
proc st_undelete {} {
proc st_save_to_file {name} {
proc st_load_from_file {name} {
proc st_get_xy {datavar r} {
proc st_save {} {
proc st_exit_tables {{cancel 0}} {
proc st_delete_table {name} {
proc st_delete_row {name} {
proc st_set_user_data_dirty {{val 1}} {
proc st_set_user_changed_curve {} {
proc st_insert_row {name} {
proc st_browse {name last new} {
proc st_temp_changed {} {
proc st_validate_cell { cur new } {
proc st_create_curve_table {name} {
proc st_create_table_panel {name} {
proc st_display_table {name} {
proc st_edit_curves {args} {
proc st_edit_curves_test {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/scontrol.tcl]]
proc scontrol_setup {w height titles} {
proc scontrol_add {w stuff {tag ""}} {
proc scontrol_all {w col on} {
proc scontrol_none {w col} {
proc scontrol_get_widget {w tag j} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/scrollbbox.tcl]]
proc scroll_bbox {w name message options variable} {
proc scroll_bbox_labels {w name message options labels extras colorcommands \
proc scroll_radiobuttons {w name message options labels extras colorcommands \
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/scroller.tcl]]
proc scroller {frame top canvas middle bottom {height ""} {incr 1}} {
proc scroller_simple {frame} {
proc scroller_simple_update {frame} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/select-one.tcl]]
proc select_one {w msgArgs choices default extras} {
proc select_one_lc {w msgArgs choices default extras} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/select_geom.tcl]]
proc select_geometry {what {max_num 0} {mess ""} {create_new 0} \
proc select_geometry_force_done {what} {
proc select_geometry_segments {from sel_type {max_num 0} {first_diff 0} {also_xyz 0} {show_selected 0} {bindings_already_done 0} {no_unify 0}} {
proc select_geometry_bindings {mess {toolbar 1}} {
proc select_geometry_segments_uniquify {segs} {
proc select_geometry_segments_via_curves {{names 0}} {
proc select_move_geo_points {objs what} {
proc select_move_geo_nodes {what sname pts how xypos {dont_reset_bindings 0}} {
proc select_geometry_dragpath {from call_edge_cross call_edge_release} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/select_sub.tcl]]
proc select_rbox {x1 y1 x2 y2} {
proc select_circle {x1 y1 x2 y2} {
proc select_pline {} {
proc select_highlight {im var_name} {
proc select_unhighlight {im var_name} {
    proc select_toggle_dynamics {keys} {
    proc select_turn_off_mouse_bindings {} {
    proc select_set_bindings {keys put_toolbar inc_dim inc_type title} {
proc select_print_help {keys} {
proc select_unset_bindings {dismiss_toolbar} {
proc select_locations {num {mess ""} {preselect ""} {local_coords 0} 
proc select_query {mess opts} {
proc select_families {sel_type multiple allow_new {mess ""}
proc select_families_all {on} {
proc select_families_on_screen {sel_type multiple} {
proc select_family_set_var {var} {
proc select_families_by_premesh {type multiple allow_new {wpos +300+300}} {
proc show_families_by_premesh {type} {
proc select_families_all_by_premesh {on type} {
proc select_struct_families {type {wpos +300+300}} {
proc show_struct_families {type} {
proc select_struct_families_all {on type} {
proc select_existing_parts {dimens multiple preselect {from_parts_list ""}} {
proc select_existing_parts_toggle {node} {
proc select_existing_parts_update_parents {tr node notvisim isvisim somevisim} {
proc select_existing_parts_set_subtree_vstatus {tr node vim} {
proc select_existing_parts_vstatus {tr n isvisim notvisim somevisim} {
proc select_existing_parts_screen {} {
proc select_existing_parts_all {how} {
proc select_existing_parts_all_leaves_and_internal {tree node} {
proc select_location {{mess "a point"} {local_coords 0}} {
proc select_location_explicit {v} {
proc select_toolbar {opts title} {
proc select_show_types_menu {dim menu X Y} {
proc select_toolbar_delete {} {
proc select_toggle_what {} {
proc select_toggle_all_edges {} {
proc select_toggle_all_faces {} {
proc do_toggle_global {name v1 v2} {
proc select_toggle_dimensions {} {
proc select_toggle_corners {} {
proc select_toolbar_gray {gray} {
proc select_toolbar_gray_child {gray child} {
proc select_toolbar_set_title {w title} {
proc select_get_parts_and_subsets {} {
proc select_reset_parts_and_subsets {} {
proc select_add_parts_and_subsets {t n} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/settings.tcl]]
proc tkMenuGetRidOf {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/show_logfile.tcl]]
proc show_logfile {file { w .tetra_monitor } { name Tetra } { last_token "tetra finished" } } {
proc tail_sl_log {fp mon line} {
proc kill_sl_proc {mon} {
proc show_status {mon} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/sizes.tcl]]
proc compute_sizes {{what ""} {add 1}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/spreadsheet.tcl]]
proc spreadsheet {w title tree get_rows var apply_func reset_func delete_func} {
proc spreadsheet_put_tree {canv tree get_rows var} {
proc spreadsheet_build_canvas_tree {items rows branch canv var bn} {
proc spreadsheet_is_in_row {canv bn num r} {
proc spreadsheet_export_is_in_row {bn type1 r type2} {
proc spreadsheet_do_layout {canv {which "" } {sub ""}} {
proc spreadsheet_do_layout_tree {canv bn on} {
proc spreadsheet_edit {canv type it key var extra} {
proc spreadsheet_pick_choice {title value} {
proc spreadsheet_update_canvas {w var} {
proc spreadsheet_expand_all {w val} {
proc unused__spreadsheet_import {w tree get_rows var} {
proc spreadsheet_import {w tree get_rows var} {
proc spreadsheet_import_set {tree get_rows line var name} {
proc new_spreadsheet_file_selected {file} {
proc spreadsheet_export {tree get_rows var} {
proc spreadsheet_export_get_values {tree get_rows} {
proc spreadsheet_delete_inactive {w var func} {
proc tt {} {
proc tt_get_rows {name handle} {
proc tt_apply_func {var} {
proc tt_reset_func {var} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/stop_button.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/tail_standalone.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/toolbars.tcl]]
proc toolbar_setup {tbar} {
proc toolbar_register_frame {fname path vert} {
proc toolbar_addgroup {name where buts reenable} {
proc toolbar_addspace {rownum} {
proc toolbar_fillin {fr buts vert} {
proc toolbar_cycle {var vals cmd} {
proc toolbar_update_text {cmd bubble url} {
proc toolbar_update_relief {w} {
proc toolbar_do_toolbut {wid} {
proc toolbar_remove {name} {
proc toolbar_tearoff {name} {
proc toolbar_tearoff_configure {orig new} {
proc toolbar_tearoff_delete {top name} {
proc toolbar_edit {} {
proc toolbar_edit_one {name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/toplevel.tcl]]
proc top_setup {} {
proc top_withdraw_menus {} {
proc top_set_windows_menu {m} {
proc top_transient {win subwin {map 1} {border 0}} {
proc top_window_force {win map title delete_proc} {
proc top_window {win {map 1} {title ""} {delete_proc ""} {group ""} \
proc top_geometry {win geo} {
proc top_geometry_wrt {w wrt xp yp usesaved} {
proc top_set_requested_geo {win} {
proc top_get_geometry {win} {
proc top_fix_subparts {win} {
proc top_is_single {win} {
proc top_iconify {win} {
proc top_deiconify {win} {
proc top_withdraw {win} {
proc top_withdraw_all {out} {
proc top_title {win {title ""}} {
proc top_destroy {win {force 0}} {
proc top_lower {win} {
proc top_raise {win} {
proc top_raise_packed {win} {
proc top_resizable {win w h} {
proc top_resizecur {win checkw x y} {
proc top_resizestart {win checkw x y} {
proc top_resizeend {win x y} {
proc top_resize {win x y} {
proc top_resize_doit {win x y} {
proc top_resize_direct {win dw dh} {
proc top_movestart {win x y} {
proc top_moveend {win x y} {
proc top_move {win x y} {
proc top_move_doit {win x y} {
proc top_resize_dot {} {
proc top_add_window_menu {win {title ""}} {
proc top_remove_window_menu {win} {
proc top_menuselect {win} {
proc top_on_screen_xy {win} {
proc top_make_on_screen {win} {
proc top_minsize {win x y} {
proc top_xypos {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/trace_events.tcl]]
proc trace_events_start {file} {
proc trace_events_end {} {
proc trace_events {type args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/url_io.tcl]]
proc url_init {args} {
proc url_open {file mode {error_if_fail 1}} {
proc url_close {fp} {
proc url_source {file {error_if_fail 1}} {
proc url_file_exists {file} {
proc url_report_error {host proxy proxyport user from_email subject data \
proc url_mapimail_send_message {to subject data attachments} {
proc url_mapimail_report_error {to subject data {attachments ""}} {
proc url_mapimail_load {} {
proc url_mapimail_logon {} {
proc url_mapimail_logoff {} {
proc url_mapimail_enabled {} {
proc url_mapimail_send {to subject body attachments} {
proc send_email {to subject body} {
proc smtp_send_message {to from subject body {servers localhost} {ports 25}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/winnt.tcl]]
proc setup_windows_events {sw hwnd} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/wizard.tcl]]
proc ::wizard::init_wizard {} {
proc ::wizard::configure_buttons {page} {
proc ::wizard::parse_button_proc {bp page} {
proc ::wizard::parse_button_list {w list page} {
proc ::wizard::configure_from_file {file basefr {cvar config_wizard_var}} {
proc ::wizard::configure {w toplv title version estyle uselogo stalone args} {
proc ::wizard::execute {} {
proc ::wizard::finish {} {
proc ::wizard::setup_complete {} {
proc ::wizard::open_file {var text dir get_dir new_ok post_action {ext ""}} {
proc ::wizard::add_to_path {dir} {
proc ::wizard::create_path {} {
proc ::wizard::exists_equiv_file {file} {
proc ::wizard::find_file {file} {
proc ::wizard::findpage {pagename defpage} {
proc ::wizard::setpage {curpage case} {
proc ::wizard::modifypageorder {pagename prevpage nextpage} {
proc ::wizard::modifypage {pagename prevpage nextpage} {
proc ::wizard::pageorder {args} {
proc ::wizard::thermometer {w width min max} {
proc ::wizard::update_thermo {w val} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/wizard_driver.tcl]]
proc wizard_find_guibase {} {
proc wizard_source_file {file} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/guibase/workspace.tcl]]
proc workspace_add {win {title ""} {geo ""}} {
proc workspace_menuselect {win} {
proc workspace_set_windows_menu {m} {
proc workspace_init {root {topbar ""}} {
proc workspace_framing {win {title ""} {resize 1} {usehead 1} {geo ""}} {
proc workspace_raise {win} {
proc workspace_movestart {win} {
proc workspace_moveend {win} {
proc workspace_resizestart {win} {
proc workspace_resizeend {win} {
proc workspace_iconify {win} {
proc workspace_maxify {win {title ""} {geo ""}} {
proc workspace_minmax {} {
proc workspace_close {win} {
proc workspace_disable_close {win {m ""}} {
proc workspace_close_comfirm {win {msg ""}} {
proc workspace_progress_init {w title num} {
proc workspace_progress_start {w text num} {
proc workspace_progress_incr {text} {
proc workspace_progress_end {} {
proc workspace_form_clean {} {
proc workspace_form_init {w buttons} {
proc workspace_form_raise {w} {
proc workspace_form_done {w {flag 1}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/hexa/block_hexa.tcl]]
proc block_change_degen_edge { }  {
proc blank_blocks {} {
proc blank_block_reverse { } {
proc block_blank_numbers { blank txt } {
proc blank_blocks_by_family { on } {
proc blank_block_mark_families {var {one 0}} {
proc block_innero {} {
proc ogrid_undo { } {
proc ogrid_redo { } {
proc ogrid_redisplay {  } {
proc block_mark2 {on face del_opts txt} {
proc blank_block_mark { on face } {
proc ogrid_block_mark {on face} {
proc ogrid_block_mark_families {} {
proc block_outero {} {
proc block_split {} {
proc block_split_screen { { doit "" } } {
proc block_split_cpar {} {
proc block_split_prescr {} {
proc block_decimate {} {
proc block_extsplit {} {
proc block_uncollapse {} {
proc block_delete_station {} {
proc del_dim {ijk1 ijk2} {
proc node_index {ijk dim} {
proc block_rescale {} {
proc block_collapse {} {
proc surface_mesh_select_surfs { } {
proc block_initmesh {how { sub_opt "-mixed" } } {
proc surface_mesh_doit { } {
proc block_primitive {type} {
proc primitive_select_curve {var msg} {
proc primitive_select_point {var msg} {
proc block_primitive_doit {type} {
proc block_primitive_done {type} {
proc block_primitive_base {} {
proc block_primitive_base_done {} {
proc block_primitive_base_doit {} {
proc block_merge {how} {
proc block_delete {how} {
proc block_transfer {how} {
proc block_material {how} {
proc block_set_material { { first  "" } { second "" } } {
proc block_periodic {} {
proc block_make_periodic {what} {
proc block_extrude_blocks {} {
proc block_surface_mesh {} {
proc select_face { n_faces { node_nums 0 } } {
proc block_create_swept {} {
proc add_interior_loop { } {
proc split_unstruct_volume { } {
proc block_create { { type "hexa" } }  {
proc block_split_face { how } {
proc block_merge_face {} {
proc block_extrude_faces {} {
proc block_extrude_faces_doit {} {
proc block_extrude_faces_done {} {
proc select_extrude_faces {} { 
proc select_extrude_face {var msg} { 
proc select_extrude_edge {var msg {disp_vars ""}} { 
proc display_selected_nodes {disp_vars} {
proc select_extrude_curve {} { 
proc select_extrude_endpt {} {
proc block_extrude_twist {} {
proc block_extrude_twist_doit {} {
proc block_extrude_twist_done {} {
proc block_extrude_face {} {
proc block_wing_grid {} {
proc select_block { how mess } {
proc block_ijk {how what} {
proc block_convert { to_what how } {
proc block_set_origin {how} {
proc get_hexa_nsuperblocks  {} {
proc form_block_numbers {var update message} {
proc block_number_entry_active {} {
proc var_block_numbers_active {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/hexa/disp_hexa.tcl]]
proc make_display_window {} {
proc disp_hexa_meshtype {mesh_type} {
proc change_projection {} {
proc toggle_use_output_blocks {} {
proc edit_block_numbers {} {
proc get_block_numbers {} {
proc setup_index_box {} {
proc index_update_all {{update 1}} {
proc index_modify {ind max dir {update 1}} {
proc index_reset {} {
proc index_materials {} {
proc index_fromedge {} {
proc index_fromcorners {} {
proc add_families {} {
proc display_edge_mesh_params { } {
proc max { a1 a2 } {
proc update_display {args} {
proc order_family_string {fams} {
proc range_string {} {
proc family_string {} {
proc family_name_string {} {
proc family_activename_string {} {
proc family_name_to_number {name} {
proc surface_string {} {
proc surface_activename_string {} {
proc surface_name_string {} {
proc surface_detail_string {} {
proc volume_string {} {
proc volume_activename_string {} {
proc volume_name_string {} {
proc point_activename_string {} {
proc update_surface_detail {} {
proc change_mouse_buttons {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/hexa/edge_hexa.tcl]]
proc reset_ogrid_ortho {} {
proc edge_make { what } {
proc edge_unlink_shape { } {
proc edge_link_shape { } {
proc edge_ortho_offset { } {
proc edge_split_apply {}  {
proc edge_split_select_edge { } {
proc edge_split { { smooth "" } } {
proc edge_unsplit { { what "single" } } {
proc edge_modify {} {
proc accept_callback {} {
proc select_edge_direction {} {
proc create_constraints_window { func_name opt } {
proc edge_modify_single {{opt ""}} {
proc edge_modify_single_doit { { opt "" } } {
proc edge_modify_mult {{opt ""}} {
proc edge_modify_mult_doit {{opt ""}} {
proc edge_modify_make_prescribed {} {
proc edge_modify_align_verts {} {
proc edge_set_pos {} {
proc edge_set_pos_from_point {} {
proc edge_set_pos_from_node {} {
proc edge_set_pos_from_screen {} {
proc user_error {mess} {
proc edge_set_pos_doit {} {
proc edge_set_pos_selnew {} {
proc comp_screen {} {
proc comp_region {} {
proc comp_tangent { } {
proc comp_families { { which "" } } {
proc edge_uncomp {} {
proc comp_form {title} {
proc edge_crpoint {} {
proc edge_create_iso {} {
proc vertex_to_edge { } {
proc edge_collapse { how } {
proc merge_vertices {} {
proc merge_vertices_select {} {
proc merge_vertices_doit {} {
proc edge_set_length {} {
proc edge_set_length_apply {} {
proc split_edges { which  { how "" } } {
proc move_face {} {
proc move_face_doit {} {
proc move_face_done {} {
proc rotate_multiple {} {
proc rotate_multiple_doit {} {
proc select_rot_verts {} {
proc select_rot_axis {} {
proc rotate_multiple_done {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/hexa/file_hexa.tcl]]
proc file_same { path1 path2 } {
proc file_load {{init 0}} {
proc select_blocking_file {start_with_no} {
proc select_blocking_extra_widgets {d} {
proc blocking_file_put {file} {
proc file_load_compare {ff1 ff2} {
proc file_delete_block {name} {
proc file_delete_domain {name} {
proc file_save {subtopo} {
proc save_blocking_extra_widgets {d} {
proc file_options {} {
proc file_import {} {
proc file_dirty {} {
proc file_quit {{ask 1}} {
proc file_edit_boco {} {
proc old__file_edit_boco {solver} {
proc file_unput {} {
proc file_multiblock {} {
proc file_unstructured {} {
proc file_unstructured_extra_widgets {w} {
proc file_unstruct2d {} {
proc file_select_unstruct { type } {
proc file_read_struct {} {
proc file_read_unstruct {} {
proc file_superdomain {} {
proc file_renew {} {
proc file_shell { dir } {
proc get_mesh_dir { } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/hexa/glsm_hexa.tcl]]
proc mesh_smooth_glsm_unstruct {block} {
proc etm_PerformUnstructHexa {} {
proc etm_ShowBuckets { what } {
proc etm_UnstructWin { what } {
proc etm_SetModesUnstruct { win on } {
proc etm_SetValuesUnstruct {} {
proc etm_CreateBucketsListUnstruct {} {
proc etm_DoneUnstruct {} {
proc etm_ParameterUnstruct {} {
proc etm_DoneParameterUnstruct {} {
proc etm_DefaultParameterUnstruct {} { 
proc etm_SetCancelParameterUnstruct {} { 
proc etm_ResetParameterUnstruct {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/hexa/hexa.tcl]]
proc tool_command {} {
proc tool_setup {} {
proc make_tool_windows {} {
proc set_linewidth {} {
proc toggle_hexa_meshtype {} {
proc import_switch {on} {
proc check_binding {win x y wx wy c} {
proc set_scan_plane_state {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/hexa/meshc_hexa.tcl]]
proc edge_meshc_init {{length 1.0} {param 1} {type {}} {func {}} {np 4} \
proc edge_meshc_setlength {{edge_length 1.0} {parameter 0}} {
proc edge_meshc_setcurvetype {{type {}} {func {}}} {
proc edge_meshc_setnpoints {{np 4}} {
proc edge_meshc_setcallback \
proc edge_meshc_setinitpoints {{initial_points {}}} {
proc edge_meshc_sortinitial {initial_points} {
proc edge_meshc_orderpoints {point1 point2} {
proc edge_meshc_form {} {
proc edge_meshc_funclist {} {
proc edge_meshc_funcname {{key {}}} {
proc edge_meshc_transfuncname {{key {}}} {
proc edge_meshc_funcsmooth {func} {
proc edge_meshc_store {} {
proc edge_meshc_load {} {
proc edge_meshc_edgepointtrace {name element op} {
proc edge_meshc_edgepointupdate_ext {} {
proc edge_meshc_edgepointupdate {} {
proc edge_meshc_configureedgepoint {} {
proc edge_meshc_togglelinspl {} {
proc edge_meshc_toggleparameter {} {
proc edge_meshc_setparamdisplay {} {
proc edge_meshc_edgepointsactive {{val 1}} {
proc edge_meshc_bmnpoints {val} {
proc edge_meshc_checknpoints {} {
proc edge_meshc_setmodals {} {
proc edge_meshc_setfunc {func} {
proc edge_meshc_reverse {axis {doupdate 1}} {
proc edge_meshc_createcontrol {} {
proc edge_meshc_rescalecontrol {} {
proc edge_meshc_edgeminmax {} {
proc edge_meshc_pointcreate {x y {init 0} {idx 0} {docallback 1}} {
proc edge_meshc_addpointsorted {xn yn force} {
proc edge_meshc_select {point} {
proc edge_meshc_move {point x y} {
proc edge_meshc_pointdelete {x y} {
proc edge_meshc_erasecurrentfunc {} {
proc edge_meshc_standard_callback {points} {
proc edge_meshc_update {{docallback 1}} {
proc edge_meshc_updateticks {ticklist} {
proc edge_meshc_flatten {points} {
proc edge_meshc_coordtoscreen {points} {
proc edge_meshc_screentocoord {points} {
proc edge_meshc_tickstoscreen {points} {
proc edge_meshc_min {x1 x2} {
proc edge_meshc_max {x1 x2} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/hexa/mesh_hexa.tcl]]
proc mesh_recompute {} {
proc get_freeze_fams { fams } {
proc mesh_up_to_date {ask {redraw 1} {d_to_mesh -1 } } {
proc mesh_scan_planes {} {
proc scan_reset {} {
proc scan_select_edge {} {
proc scan_major {ind dir {callup 1}} {
proc scan_minor {ind dir} {
proc scan_update {ind} {
proc mesh_scan_done {} {
proc check_const_r {} {
proc mesh_diag {which title ask} {
proc mesh_do_diag {ask title {nbars 20} {min 0} {max 1} {ylim 16} {args ""}} {
proc mesh_histo_select {w intervals arguments solid { color_by_quality 0 } } {
proc mesh_check_size {} {
proc mesh_params {} {
proc update_param_display {surflist} {
proc mesh_params_active {surflist} {
proc mesh_params_apply {surflist} {
proc mesh_params_query {surflist} {
proc mesh_param_add_surfs {surflist} {
proc mesh_param_remove_surf {surflist surf} {
proc mesh_params_done {doit} {
proc mesh_cparams {} {
proc update_cparam_display {curvelist} {
proc mesh_cparams_active {curvelist} {
proc mesh_cparams_apply {curvelist} {
proc mesh_cparams_query {curvelist} {
proc mesh_cparam_add_curves {curvelist} {
proc mesh_cparam_remove_curve {curvelist curve} {
proc mesh_cparams_done {doit} {
proc edge_mesh_nupcallback {} {
proc edge_mesh_ndncallback {} {
proc update_h1h2 {} {
proc point_family_names {{key ""}} {
proc mesh_eparams {} {
proc mesh_eparam_setlaw {lawname} {
proc mesh_eparam_sellink { var_name } {
proc mesh_eparam_revlink { var_name } {
proc mesh_law_names {{key ""}} {
proc mesh_eparam_selnew {} {
proc swap {a b} {
proc mesh_eparam_update {{edge ""} { rev 0 } } {
proc mesh_eparam_scrpos {} {
proc mesh_eparam_copyto {rev} {
proc mesh_eparam_copyfr {rev} {
proc law_swap { lname } {
proc mesh_eparam_apply {rev {commitform 0} {edges ""} {scale 0} } {
proc mesh_eparam_redraw {} {
proc mesh_eparam_reset {{var eparam_save}} {
proc mesh_eparam_editc {func {doinitedgepoints 0}} {
proc eparam_density_callback {args} {
proc mesh_eparam_restoresave {} {
proc mesh_eparam_initedgepoints {} {
proc edge_meshc_filebrowser {} {
proc mesh_assign_sizes_doit {} {
proc mesh_assign_sizes {} {
proc mesh_refinement {} {
proc mesh_ref_apply {} {
proc mesh_ref_query {} {
proc mesh_ref_seldim {} {
proc mesh_renumber_domains {} {
proc renum_p {w x v} {
proc renumber_cmp {v1 v2} {
proc renumber_putrc {i {xpos ""} {ypos ""}} {
proc renumber_setpos {i x y} {
proc renumber_moveup {r c} {
proc renumber_move {i xpos ypos} {
proc mesh_periodic {} {
proc mesh_make_periodic {what} {
proc mesh_smooth {} {
proc mesh_match_edges {} {
proc mesh_scale {} {
proc mesh_make_even {} {
proc mesh_init_output {} {
proc mesh_options {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/hexa/proj_hexa.tcl]]
proc proj_vert {} {
proc proj_nvert { to_what } {
proc proj_vcurve {} {
proc proj_edge_select { } {
proc proj_edge {} {
proc proj_edge_to_curve {} {
proc proj_edge_to_surface {} {
proc proj_update_blocking {} {
proc proj_edge_to_none {} {
proc proj_nedge {} {
proc proj_face { how } {
proc proj_one_face { how } {
proc proj_nface { how } {
proc link_face { how } {
proc proj_shared_wall {} {
proc shwall_action {what} {
proc proj_active_surfs {} {
proc proj_query {} {
proc proj_limit {} {
proc proj_update {how what} {    
proc proj_vpoint {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/hexa/replay_hexa.tcl]]
proc file_replay {} {
proc file_replay_batch {file} {
proc replay_filter {com} {
proc replay_execute_command {line update_display} {
proc replay_after_commands_done {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/hexa/select_hexa.tcl]]
proc select_node {mess {num 1} {opts ""}} {
proc select_node_text {mess num text} {
proc select_curve_parameter {mess} {
proc select_point {mess} {
proc select_edge {mess {max_sel 1} {opts ""}} {
proc select_surface {mess} {
proc select_curve {mess} {
proc block_mark_families {vol_var { face_var "" }  { del_opts "" } } {
proc surface_mark_families {var {one 0}} {
proc block_unmark {} {
proc block_mark {on face {del_opts ""}} {
proc block_mark_fams {on face {del_opts ""}} {
proc block_mark_all { on mess {del_opts {}} } {
proc block_mark_super {on isedge mess del_opts} {
proc block_mark_numbers {on mess {del_opts {}}} {
proc select_material {mess} {
proc define_family { mat } {
proc get_families {} {
proc reset_families {} {
proc get_indices {reset} {
proc select_some_volume_families {} {
proc select_one_family {mess} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/hexa/stop.tcl]]
proc stopMonitor { reason } {
proc exitMonitor { w } {
proc mainMonitor { pidExtension what where } {
proc progressMonitor {} {
proc setBarButton { line } {
proc setLabelButton { line } {
proc sleepATime { sleepTime } {
proc getRunTime {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/hexa/topo_hexa.tcl]]
proc top_set_current_if {on} { if $on top_set_current }
proc top_clear {} {
proc top_set_current {} {
proc top_get_current {} {
proc top_make_width {tree} {
proc top_select { which } {
proc top_select_toponame {} {
proc top_visible {n} {
proc top_clear_list {} {
proc top_build_defaults {} {
proc unused__top_as_list { text } {
proc top_select_topo {text { multiple "" } } {
proc update_top_as_list {} {
proc switch_topology { new_top } {
proc top_select_current {} {
proc top_insert {} {
proc top_delete {} {
proc top_extract {} {
proc top_rename {} {
proc top_copy {} {
proc top_transform {} {
proc top_load {} {
proc top_save {} {
proc select_vector_menu { d var ln cl on_off_var } {
proc form_line { d name ln } {
proc top_transform_form {w} {
proc top_select_vector { var how } {
proc top_select_point { how } {
proc top_transform_doit {} {
proc ext_select_point {} {
proc top_fill { } {
proc top_extrude { how} {
proc top_extrude_doit {} {
proc top_surface {} {
proc top_invert {} {
proc top_merge {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/hexa/undo_hexa.tcl]]
proc undo_action {} {
proc redo_action {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/hexa/version.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/bettis-routines.tcl]]
proc app_tagging {what} {
proc app_tnh {what} {
proc run_cartesian {domain_file cartfile struct} {
proc set_part_for_meshname {meshname mapfile} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/commands.tcl]]
proc add_menu_buttons {} {
proc add_menu_items {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/dialog.tcl]]
proc dialog {w title mess entries} {
proc dialog_rewrite {expr replace prefix} {
proc dialog_check_active {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/domains.tcl]]
proc remove_some_domains {ifile progname} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/domselect.tcl]]
proc domain_select {dir message type mult {useboco 1} {usetopo 1}} {
proc domain_reset_history {} {
proc domain_make_domain_box {w title stuff height sb} {
proc domain_put_and_finish {domain} {
proc domain_put {domain} {
proc domain_unput {domain} {
proc domain_put_all {list in} {
proc scrolled_listbox {w label singlecom doublecom allnone height sb} {
proc domain_cmp {dom1 dom2} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/game.tcl]]
proc game_put_ship {} {
proc game_update {} {
proc game_make_splat {} {
proc game_new_shot {} {
proc game_shots {} {
proc game_random {n} {
proc game_new_bubble {} {
proc game_update_bubbles {} {
proc game {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/helpinfo.tcl]]
proc getMenuTopic {w x y} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/helpsys.tcl]]
proc help_define {w string} {
proc list_descendants {w} {
proc help_provide {topic {x 0} {y 0}} {
proc help_write_reference {} {
proc format_block {text indent length} {
proc help_show_manual { manual_name } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/help_iceman.tcl]]
proc help_setup {{base ""} {root_dir ""}} {
proc help_define {w item page tag} {
proc help_window {x y} {
proc help_window_path {w} {			; # Find help files
proc help_topic {file {tag ""}} {
    proc help_application {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/help_table.tcl]]
proc help_info_define {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/iceman.tcl]]
    proc enable_interface {} {}
    proc disable_interface {} {}
    proc backslashify {s {n 1}} {
    proc backslashify {s {n 1}} {
proc first_existing_font {fonts} {
proc beep {} {puts stdout "\007" nonewline; flush stdout}
proc lfirst {list} {lindex $list 0}
proc llast {list} {lindex $list [expr {[llength $list] - 1}]}
proc ldelete {list elem} {
proc busy {args} {}
proc mess {str {c ""} {f ""}} { infomsg "$str\n" }
proc reset_label_vars {} {
proc update_place {args} {
proc tkerror err {
	    proc update_ld_library_path {} {
	    proc update_ld_library_path {} {}
	proc update_ld_library_path {} {}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/interface.tcl]]
proc disable_interface {} {global active; set active 0}
proc enable_interface {} {global active; set active 1; focus .}
proc unimp {} {warningmsg "This command is not yet implemented."}
proc set_title {} {
proc put_iges {} {
proc put_dxf {} {
proc put_tvda {} {
proc put_set {} {
proc put_prebfc {} {
proc put_comak {} {
proc unput_iges {} {
proc unput_dxf {} {
proc unput_tvda {} {
proc unput_set {} {
proc unput_prebfc {} {
proc unput_comak {} {
proc make_menu {name label} {
proc make_entry {name label accel progname func {feats ""}} {
proc make_line {name} {
proc update_label {value which lorr} {
proc nothing {args} {}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/leoif.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/license.tcl]]
proc lpopup {mess {quest 0}} {
proc verify_license_daemon {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/locking.tcl]]
proc get_config_lock {config} {
proc process_exists {pid} {
proc release_config_lock {} {
proc unset_config_lock {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/mac-bindings.tcl]]
proc delete_selection {win} {
proc insert_char {win c} {
proc delete_char {win} {
proc move_caret {win state dir} {
proc clear_selection win {
proc entry_delete_selection {win} {
proc entry_insert_char {win c} {
proc entry_delete_char {win} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/messages.tcl]]
proc goto_end {} {
proc infomsg {text} {
proc catfile {msg file} {
proc warningmsg {text} {
proc errormsg {text} {
proc print_file {filename} {
proc putcenter {w} {
proc sf {file} {
proc numsort {names} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/misc.tcl]]
proc tmpname {} {return .restart.tmp}
proc run_editor {file} {
proc get_units {} {
proc get_draft {} {
proc get_partform {} {
proc check_dirtree {} {
proc possible_configurations {} {
proc possible_geometries {} {
proc check_path_all {path} {
proc check_path_component {string name {puts errormsg}} {
proc get_ddn_defaults {} {
proc build_tetra_param_file {file input output} {
proc run_ddn_interpreted {name what script libdir extras} {
proc run_ddn_linked {name what script extras} {
proc send_keyboard_events {name wait string} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/misc_iceman.tcl]]
proc tmpname {} {return .restart.tmp}
proc get_units {} {
proc get_draft {} {
proc get_partform {} {
proc check_dirtree {} {
proc possible_configurations {} {
proc possible_geometries {} {
proc check_path_all {path} {
proc check_path_component {string name {puts errormsg}} {
proc get_ddn_defaults {} {
proc get_pcube_defaults {} {
proc build_tetra_param_file {file input output} {
proc ddn_partname {pn} {
proc run_ddn_interpreted {name what script libdir extras} {
proc run_ddn_linked {name what script extras} {
proc check_license_expiration {} {
proc send_keyboard_events {name wait string} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/modals.tcl]]
proc update_pathnames {oldval newval} {
proc dump_modals {} {
proc dump_pathnames {} {
proc get_modal_choices {name} {
proc get_modal_choices_presets {name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/padammif.tcl]]
proc app_padamm {} {
proc rebuild_padamm_input {pifile} {
    proc first_existing_font {fonts} {
    proc beep {} {puts stdout "\007" nonewline; flush stdout}
    proc lfirst {list} {lindex $list 0}
    proc llast {list} {lindex $list [expr {[llength $list] - 1}]}
    proc enable_interface {} {}
    proc disable_interface {} {}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/partlist.tcl]]
proc nice_partname {} {
proc select_part {win num list} {
proc P {} { uplevel #0 source ../iceman/partlist.tcl }
proc locate_part {name parts_list list} {
proc set_part_partfile {partf} {
proc part_is_mulcad {} {
proc part_is_comak {} {
proc update_partlist {which callup} {
proc update_iges {} {
proc update_dxf {} {
proc update_tvda {} {
proc update_set {} {
proc update_prebfc {} {
proc unselect_part {} {
proc find_part {pname} {
proc pick_part {pinfo} {
proc partfile_is_binary {name} {
proc list_parts {place callup} {
proc list_parts_ddndir {place callup} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/pathentry.tcl]]
proc pathentry {what path} {
proc pathentry_clear {} {catch {destroy .pathentry_popup}}
proc pathentry_doit {ent} {
proc pathentry_clicked {ent comp} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/pickone.tcl]]
proc pickone {w msgArgs choices command alone} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/pickordered.tcl]]
proc pickord {w msgArgs names} {
proc pickord_set_all {on} {
proc pickord_change {varname index op} {
proc pickord_insert {index} {
proc pickord_insert_label {index label} {
proc pickord_remove {index} {
proc pickord_clear {} {
proc pickord_press {lab} {
proc pickord_clear_chosen {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/picksome.tcl]]
proc picksome {w msgArgs vname command alone} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/prism.tcl]]
proc add_prisms { } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/programs.tcl]]
proc locate_useful_programs {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/putarray.tcl]]
proc putarray {w list} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/query.tcl]]
proc query {w} {
proc query_message {w text} {
proc query_clear {w} {
proc query_enable {w text usedefault default yes no} {
proc query_question {w text} {
proc query_click {w text} {
proc query_enter {w text default} {
proc query_path {w text default} {
proc query_path_lc {w text default} {
proc query_two_choices {w text choice1 choice2} {
proc query_waitvar {w text} {
proc query_enter_or_waitvar {w text default} {
proc query_waitvar_done {w value} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/remove_domains.tcl]]
proc dcmp {d1 d2} {
proc put_all {in} {
proc put_one {pos which} {
proc remove_domains {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/routines.tcl]]
proc config_open {new} {
proc config_copy {} {
proc config_delete {} {
proc config_rename {} {
proc geom_open {} {
proc geom_copy {} {
proc geom_delete {} {
proc geom_rename {} {
proc config_objgeo {} {
proc config_chdir {} {
proc config_cpdir {} {
proc config_archive {} {
proc config_unarchive {} {
proc config_quit {} {
proc make_linked_apps {} {
proc util_edit_vars {} {
proc util_parse_solvers {mod} {
proc util_edit_paths {} {
proc util_change_icem_acn {} {
proc util_mulcad_convert {} {
proc util_delete_domains {} {
proc util_shell {pt} {
proc util_check_lic {} {
proc util_editor {} {
proc util_toggle_run {} {
proc util_cleanup {} {
proc util_tcl {} {
proc util_gplot {} {
proc util_autoplot {} {
proc util_clear_lock {} {
proc app_compose_remote {dlrem} {
proc app_ddn {} {
proc app_comak {} { app_mulcad "" COMAK comak }
proc app_mulcad {{extras ""} {appname MULCAD} {tfile mulcad}} {
proc app_auto_comak {} {
proc auto_comak {pname {answers ""}} {
proc auto_padamm {pname} {
proc app_ddn_tetra {} {
proc app_tetra {} {
proc app_cutter {} {
proc app_tetra_editor {} {
proc app_tetra_smoother {{triang 0}} {
proc app_coarsener {} {
proc app_stamp {what} {
proc app_blockmod {} {
proc app_input {} {run_ddn_linked ICEM_Input d inputg ""}
proc app_frontal {} {run_ddn_linked Frontal d frontg ""}
proc app_ddn_global {} {
proc get_tetin_file { place } {
proc app_hex {{extra ""}} {
proc app_unput {} {
proc app_thex {} {
proc app_global_gui {} {
proc app_tetra_gui {} {
proc check_tetin1 {} {
proc app_autohex {} {
proc app_med {} {
proc app_visual3 {} {
proc app_mom3d {} {
proc get_famnames {{surface_file ""}} {
proc app_prism {} {
proc app_quad {} {
proc view_grid_visualizer {} {
proc view_leo {} {
proc trans_ddn_iges {} {
proc trans_iges_ddn {} {
proc trans_iges_file {infile} {
proc trans_split {} {
proc trans_ddn_tvda {} {
proc trans_tvda_ddn {} {
proc trans_ddn_set {} {
proc trans_set_ddn {} {
proc trans_ddn_dxf {} {
proc trans_dxf_ddn {} {
proc trans_plot3d_domain {} {
proc trans_patran_domain {} {
proc trans_stl_domain {} {
proc trans_nastran_domain {} {
proc trans_rampant_domain {} {
proc trans_prebfc_ddn {} {
proc part_move {} {
proc part_copy {} {
proc part_delete {} {
proc set_pcube_user_tol {} {
proc delete_undos {} {
proc select_files {filespec message {type ""}} {
proc listbox_select_all {list} {
proc listbox_select_none {list} {
proc multiselect_listbox {w label singlecom doublecom allnone height sb} {
proc help_show_manual {manual_name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/runcom_unix.tcl]]
proc check_exec {args} {
proc get_preserved_vars {} {
proc runxcom {name com catfile hitreturn back} {
proc runxcom_remote {name com catfile hitreturn back} {
proc runcom {com {out ""} {noerrors 0}} {
proc run_editor {file} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/runcom_win.tcl]]
proc check_exec {args} {
proc runxcom {name com catfile hitreturn back} {
proc runxcom_remote {name com catfile hitreturn back} {
proc runcom {com {out ""} {noerrors 0}} {
proc run_editor {file} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/rundialog.tcl]]
proc run_dialog {w msgArgs stuff} {
proc run_dialog_alter {base name1 name2 what} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/scrollbbox.tcl]]
proc scroll_bbox {w name message options variable} {
proc scroll_bbox_labels {w name message options labels extras colorcommands \
proc scroll_radiobuttons {w name message options labels extras colorcommands \
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/scroller.tcl]]
proc scroller {frame top canvas middle bottom {height ""} {incr 1}} {
proc scroller_simple {frame} {
proc scroller_simple_update {frame} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/solvers.tcl]]
proc output_select_solver {} {
proc output_write {{set_sol ""}} {
proc output_g2u {} {
proc output_s2u {} {
proc output_merge {} {
proc output_super {all {supername ""}} {
proc output_qtet {} {
proc output_uncouple {} {
proc output_bandwidth {} {
proc get_boco_topo {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/sparams.tcl]]
proc solver_params {title variable params} {
proc solver_params_update {w h} {
proc solver_params_load {filename var} {
proc solver_params_save {filename var} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/sysinfo.tcl]]
proc check_sysinfo {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/tk_dialog.tcl]]
proc tk_dialog {w title text bitmap default args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/tnh_scalar.tcl]]
proc save_file {filename} {
proc load_file {filename} {
proc check_namelists {} {
proc switch_nl {} {
proc resize_window {} {
proc save_values {} {
proc revert_values {} {
proc add_namelist {} {
proc delete_namelist {} {
proc delete_nlform {nl} {
proc add_entry {} {
proc delete_entry {} {
proc create_nlform {nl} {
proc repack_top {} {
proc create_nlentry {nl var} {
proc sort_form {nl} {
proc quit {} {
proc toggle_active {ent nl vn} {
proc tk_dialog {w title text bitmap default args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/update.tcl]]
proc update_software {} {
proc update_grab {fromfile tofile} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/iceman/vcbox.tcl]]
proc varchange {w title vars} {
proc varchange_fetch_text {wid} {
proc varchange_flip_bool {but} {
proc varchange_advance_menu {menu items} {
proc varchange_okay {w vars what} {
proc varchange_cancel {w vars} {
proc varchange_defaults {w vars} {
proc varchange_pick_one {ent choices} {
proc varchange_pick_one_select {listbox y entry} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ic_xml/lib/assembly_report.tcl]]
    proc err {text}   { return [ic_xml_err   "AssemblyReport: $text"] }
    proc debug {text} { return [ic_xml_debug "AssemblyReport: $text"] }
proc AssemblyReport::test {} {
proc AssemblyReport::createDocument { attributes } {
proc AssemblyReport::openReport { xml_file } {
proc AssemblyReport::appendReport { xml_file {attributes ""} } {
proc AssemblyReport::addHeader { domKey children } {
proc AssemblyReport::writeReport { domKey file format } {
proc AssemblyReport::closeReport { domKey {file ""} {format ""} } {
proc AssemblyReport::addPart { domKey attributes {geomReportFile ""} {meshReportFile ""} } {
proc AssemblyReport::addMeshReport { domKey parentPartObj meshReportFile } {
proc AssemblyReport::addGeometryReport { domKey parentPartObj geomReportFile } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ic_xml/lib/batchsurf_report.tcl]]
proc BatchsurfReport::test {} {
proc BatchsurfReport::createDocument { attributes } {
proc BatchsurfReport::openReport { xml_file } {
proc BatchsurfReport::appendReport { xml_file {attributes ""} } {
proc BatchsurfReport::addHeader { domKey children } {
proc BatchsurfReport::addJob { domKey attributes inputData children } {    
proc BatchsurfReport::addPart { domKey attributes inputData children } {    
proc BatchsurfReport::writeReport { domKey file format } {
proc BatchsurfReport::closeReport { domKey {file ""} {format ""} } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ic_xml/lib/ic_xml_inter.tcl]]
    proc ::IcXmlInter {args} { return [IcXmlInter::_init $args] }
    proc err   {text} { if 1 { return [ic_xml_err   "IcXmlInter: $text"] } }
    proc debug {text} { if 1 { return [ic_xml_debug "IcXmlInter debug: $text"] } }
proc IcXmlInter::test {} {
proc IcXmlInter::_init {args} {
proc IcXmlInter::_nsImplGet {} {
proc IcXmlInter::_nsValid {} {
proc IcXmlInter::domKeyUnique {} {
proc IcXmlInter::domKeyIsValid { dom_key } {
proc IcXmlInter::domGet { dom_key } {
proc IcXmlInter::destroy {} {
proc IcXmlInter::domCreate { root_element_name } {
proc IcXmlInter::domOpen { xml_file } {
proc IcXmlInter::domFormat { domKey format args } {
proc IcXmlInter::domClose { domKey } {
proc IcXmlInter::domRoot { domKey {attributes ""} } {
proc IcXmlInter::elementCreate { domKey element_name {parent ""} {attributes ""} {value ""} } {
proc IcXmlInter::elementAdd { parentObj nodeObj } {
proc IcXmlInter::elementCopy { parentObj nodeObj } {
proc IcXmlInter::getElement { parentObj element_name } {    
proc IcXmlInter::getElementName { nodeObj } {
proc IcXmlInter::elementDelete { domKey nodeObj } {
proc IcXmlInter::textNodeCreate { domKey text {parent ""} } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ic_xml/lib/ic_xml_report.tcl]]
    proc err {text}   { if 1 { return [ic_xml_err   "IcXmlReport: $text"] } }
    proc debug {text} { if 1 { return [ic_xml_debug "IcXmlReport: $text"] } }
proc IcXmlReport::getRootElName { domKey } {
proc IcXmlReport::getNullToken {} {
proc IcXmlReport::checkEmpty {} {
proc IcXmlReport::createDocument { rootElName {attributes ""} } {
proc IcXmlReport::closeDocument { domKey } {
proc IcXmlReport::openReport { xml_file {required_root_element_name ""} } {
proc IcXmlReport::getReportObject { domKey } {
proc IcXmlReport::writeReport { domKey file format args } {
proc IcXmlReport::ensureReportElement { domKey elName {attributes ""} } {
proc IcXmlReport::addElement { domKey addToObj elementName attributes children } {
proc IcXmlReport::addDataSet { domKey addToObj attributes children } {
proc IcXmlReport::addHistogram { domKey addToObj attributes data } {
proc IcXmlReport::addHeader { domKey children } {
proc IcXmlReport::writeDTDFile { file rootElementName } {
proc IcXmlReport::getPossibleAttributes { elementName } {
proc IcXmlReport::getPossibleChildren { elementName } {
proc IcXmlReport::parseValidChildren  { elementName children } {
proc IcXmlReport::parseValidAttributes { elementName attributes } {
proc IcXmlReport::enforceAttributes { attributes attributes_to_enforce } {
proc IcXmlReport::compareFiles {standard proposed {ignoreCallBack ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ic_xml/lib/ic_xml_setup.tcl]]
    proc ::IcXml {args} { return [IcXml::_init $args] }    
    proc ic_xml_put {text {color black}} {
    proc ic_xml_err {text} {
    proc ic_xml_debug {text} {
    proc ic_xml_lib_path {} {
    proc err {text}   { return [ic_xml_err   "IcXml: $text"] }
    proc debug {text} { return [ic_xml_debug "IcXml: $text"] }
proc IcXml::_init {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ic_xml/lib/job_report.tcl]]
proc JobReport::test {} {
proc JobReport::createDocument { attributes } {
proc JobReport::openReport { xml_file } {
proc JobReport::appendReport { xml_file {attributes ""} } {
proc JobReport::addHeader { domKey children } {
proc JobReport::writeReport { domKey file format } {
proc JobReport::closeReport { domKey {file ""} {format ""} } {
proc JobReport::addJob { domKey jobReportObj attributes inputData children } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ic_xml/lib/mesh_report.tcl]]
    proc err {text}   { return [ic_xml_err   "MeshReport: $text"] }
    proc debug {text} { return [ic_xml_debug "MeshReport: $text"] }
proc MeshReport::test {} {
proc MeshReport::createDocument { attributes } {
proc MeshReport::addHeader { domKey addToObj children } {
proc MeshReport::addSummary { domKey attributes } {
proc MeshReport::addSummaryData { domKey attributes children } {
proc MeshReport::addQuality { domKey attributes } {
proc MeshReport::addQualityMetric { domKey attributes children {histogramData ""} } {
proc MeshReport::addCustomQuality { domKey attributes {metricsData ""} {histogramData ""}} {
proc MeshReport::addDiagnostics { domKey attributes } {
proc MeshReport::addDiagnosticCriterion { domKey name children } {
proc MeshReport::openReport { xml_file } {
proc MeshReport::appendReport { xml_file {attributes ""} } {
proc MeshReport::writeReport { domKey file format } {
proc MeshReport::closeReport { domKey {file ""} {format ""} } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ic_xml/lib/tdom_impl.tcl]]
    proc err {text}   { return [ic_xml_err   "tDomImpl: $text"] }
    proc debug {text} { return [ic_xml_debug "tDomImpl: $text"] }
proc tDomImpl::domCreate { root_element_name } {
proc tDomImpl::domRoot { docObj } {
proc tDomImpl::domOpen { xml_file } {
proc tDomImpl::domDelete { docObj } {
proc tDomImpl::domGetAsXml { docObj } {
proc tDomImpl::domGetAsHtml { docObj {xsl_file ""} } {
proc tDomImpl::domElementCreate { docObj element_name } {
proc tDomImpl::domElementGet { parentObj element_name } {
proc tDomImpl::domTextNodeCreate { docObj text } {
proc tDomImpl::domElementDelete { nodeObj } {
proc tDomImpl::domElementSetValue { nodeObj val } {
proc tDomImpl::domElementGetName { nodeObj } {
proc tDomImpl::domElementAddAttribute { nodeObj attName attVal } {
proc tDomImpl::domElementGetAttribute { nodeObj attName } {
proc tDomImpl::domElementAppendChild { parentObj childObj } {
proc tDomImpl::domCloneElement { nodeObj } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ic_xml/lib/testbench_report.tcl]]
    proc err {text}   { return [ic_xml_err   "TestBenchReport: $text"] }
    proc debug {text} { return [ic_xml_debug "TestBenchReport: $text"] }
    proc ic_xml_testbench_create_document {args} {
    proc ic_xml_testbench_add_testcase {title namesvals} {
    proc ic_xml_testbench_write_report {output_file args} {
proc TestBenchReport::test {} {
proc TestBenchReport::createDocument { {attributes ""} } {
proc TestBenchReport::addTestcase { domKey title children } {
proc TestBenchReport::openReport { xml_file } {
proc TestBenchReport::writeReport { domKey file format } {
proc TestBenchReport::closeReport { domKey {file ""} {format ""} } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ic_xml/main.tcl]]
proc do_test {{which all}} {
proc do_setup {{which lib}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ic_xml/tests/all.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/ic_xml/tests/tdom_test.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med/med_start.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/boco_funcs.tcl]]
proc ic_boco_load {file} {
proc ic_boco_load_atr {file} {
proc boco_get_arg_names_defaults_types_and_positions {solname} {
proc boco_computepos {have_names bctype args} {
proc ic_boco_save {file} {
proc ic_boco_save_atr {file {ss ""}} {
proc unused__ic_boco_save_atr {file {ss ""}} {
proc ic_boco_is_loaded {} {
proc ic_boco_is_modified {} {
proc ic_boco_set_modified {} {
proc ic_boco_unload {} {
proc ic_empty_boco {} {
proc ic_boco_solver {{solver ""}} {
proc ic_boco_get {fam {bctypes ""} {not_bctypes ""}} {
proc ic_get_boco {fam} { return [ic_boco_get $fam] }
proc ic_boco_set {fam bocos} {
proc ic_boco_append {fam nbcs} {
proc ic_boco_modify {fam obc nbc} {
proc ic_boco_delete_bctypes {fam bctypes} {
proc ic_set_boco {fam bocos} { return [ic_boco_set $fam $bocos] }
proc ic_boco_delete_all_bctype {bctype} {
proc ic_boco_bctypes_used_by_families {{which ""}} {
proc ic_boco_list_with_bctype {bcargs {exclude_fam_pattern ""}} {
proc ic_boco_classify_by_bctype {bctype {exclude_fam_pattern ""}} {
proc unused__ic_boco_groups_with_bctype {bcargs {exclude *:*}} {
proc ic_boco_list_bcargs_for_bctypes {types pos} {
proc unused__ic_boco_get_with_matching_name {t1s t2 v2} {
proc unused__ic_boco_get_unused_bcarg {bctype prefix} {
proc ic_boco_get_unused_group {prefix {avoid ""}} {
proc unused__ic_boco_replace_with_matching_name {newbcs t2 v2 {replace_these ""}} {
proc ic_boco_replace_in_part {newbcs part {replace_these ""}} {
proc ic_boco_replace_in_group {newbcs group {replace_these ""}} {
proc ic_boco_add {fam bocos} {
proc ic_boco_replace {fam bcarg newbcs} {
proc ic_boco_get_for_tetin {} {
proc ic_boco_reload {} {
proc ic_boco_list_families {{pat ""}} {
proc ic_boco_list_families_only {} {
proc ic_boco_set_for_tetin {newboco} {
proc ic_boco_fam_dim {fam {all_dim 0}} {
proc ic_boco_parts_dim {parts} {
proc ic_boco_reset_fam_dim {} {
proc ic_boco_clear_icons {} {
proc ic_boco_rename_family {old new} {
proc ic_boco_add_icon {type fam icontype locations scale maxnum color label params vis only_dims} {
proc ic_boco_apply_attr_symbol {group bctype setname icontype parsed params labels vis lvis} {
proc extract_option {vals pvar} {
proc ic_boco_set_attr_symbol_group_visible {group bctype vis lvis} {
proc ic_boco_add_attr_symbol {bctype group icontype set params label vis lvis} {
proc ic_boco_delete_attr_symbol {id} {
proc ic_boco_list_attr_symbols {{bctype ""} {group ""} {set ""}} {
proc ic_boco_modify_attr_symbol_params {id params} {
proc ic_boco_modify_attr_symbol_label {id label} {
proc ic_boco_modify_attr_symbol_visible {id vis lvis} {
proc ic_boco_get_attr_symbol_visible {id} {
proc ic_boco_create_trivial {{bocofilename "./family_boco_trivial"}} {
proc ic_boco_ensure_part_exists {nfam} {
proc ic_boco_set_for_objects {objects bocos pre nfam} {
proc ic_boco_apply_generic_icon {fam obtype ctype params vis {only_dims ""}} {
proc ic_boco_apply_solver_icon {fam bctype icontype iconparams vis {only_dims ""} {bcargs ""}} {
proc boco_arg_subst {__val __iconparams __bcargs} {
proc ic_boco_apply_generic_icon_to_group {group ctype params vis {only_dims ""}} {
proc ic_boco_apply_solver_icon_to_group {group bctype icontype iconparams vis {bcargs ""}} {
proc ic_boco_apply_solver_icon_to_part {part bctype icontype iconparams vis {bcargs ""}} {
proc unused__ic_boco_set_visible {bcargs bctypes on} {
proc ic_boco_delete_icons_for_bctypes {fam bctypes} {
proc ic_boco_set_family_visible {fams bctypes on} {
proc ic_boco_remove_objects_from_groups {objlist bcargs} {
proc ic_boco_add_parts_and_subsets_to_group {name parts_or_subsets} {
proc ic_boco_what_groups_go_with_part_or_subset {type name} {
proc ic_boco_change_part {oldfam newpart} {
proc ic_boco_change_subset {oldfam subset add} {
proc ic_boco_add_or_remove_bc_icons {on_fam add objects} {
proc ic_boco_replace_arg {fams replace_types replace_pos replace_val} {
proc ic_boco_delete_group_with_bcs {bcargs} {
proc ic_boco_list_icons {{fam ""} {type ""}} {
proc ic_boco_delete_group {group} {
proc ic_boco_clear_family {fam} {
proc ic_boco_set_part_color {famname {update_uns 1}} {
proc ic_boco_nastran_csystem {what args} {
proc ic_boco_delete_unused {keep_groups} {
proc ic_boco_list_unused {} {
proc ic_boco_get_fams_of_part {partname} {
proc ic_boco_get_part_of_fam {famname} {    
proc ic_solver_mesh_info {solver} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/cart3d_funcs.tcl]]
proc ic_mesh_cart3d_auto_inputs { c3dint_file args } {
proc ic_mesh_cart3d { tetin_file c3d_file args } {
proc ic_run_tetin2cart3d {tetin_file c3dtri_file {fix_normals 1}} {
proc ic_run_intersect {args} {
proc ic_run_cubes {c3d_file argv} {
proc ic_run_cart3d2df { c3dmesh_file domain_file } {
proc ic_run_c3dtri2df { c3dtri_file domain_file {triq 0} {gamma ""} \
proc ic_run_df2cart3d { domain_file c3dtri_prefix {single 0} {nofix_normals 0}} {
proc ic_run_reorder {args} {
proc ic_run_mgPrep {args} {
proc ic_create_flowCart_input {args} {
proc ic_run_flowCart {args} {
proc check_flowCart_progress {maxcycle pid line} {
proc ic_run_clic {args} {
proc ic_create_flowCart_LDM {infile} {
proc ic_run_sixdof_multiple {args} {
proc ic_run_sixdof {args} {
proc get_sixdof_axis_trf {val var} {
proc ic_cart3d_solver_stop {} {
proc ic_run_c3dvis {args} {
proc ic_cart3d_write_clic_cntl_file {clic_file args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/cart_funcs.tcl]]
proc ic_cart_is_loaded {} {
proc ic_cart_is_modified {{set ""}} {
proc ic_cart_get_bbox {} {
proc ic_cart_unload {} {
proc ic_cart_load {file} {
proc ic_cart_save {file} {
proc ic_cart_initialize {from_proj {bbox ""}} {
proc ic_cart_stats {} {
proc ic_cart_visible {on} {
proc ic_cart_grid_type {} {
proc ic_cart_set_grid_type {type} {
proc ic_cart_add_screen {pt vec} {
proc ic_cart_select_screen {pt vec} {
proc ic_cart_delete_selected {} {
proc ic_cart_list_stations {dir} {
proc ic_cart_set_stations {dir stats} {
proc ic_cart_list_ranges {dir} {
proc ic_cart_set_ranges {dir ranges} {
proc ic_cart_get_axes {} {
proc ic_cart_set_axes {origin axis0 axis1 axis2} {
proc ic_cart_is_from_ddn {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/diag_subs.tcl]]
proc unstruct_check_vol_orient {which which_bad {display 1}} {
proc unstruct_diag_mesh {what {which ""} {do_fix ""} {fix_fam ""} \
proc unstruct_clear_diag_display {} {
proc unstruct_disconnected_verts {{do_fix ""} {skip 0}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/display_funcs.tcl]]
proc ic_view {what} {
proc ic_visible {type what on} {
proc ic_set_family_color_for_name {name color} {
proc ic_display_update {{mode ""} {new_fams 1} {types ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/file_funcs.tcl]]
proc ic_argv {} {
proc ic_save_project_file {file {data ""} {AppName ""}} {
proc ic_load_project_file {prj_file {convert 0} {quiet 0}} {
proc ic_unload_mesh {{quiet 0}} {
proc ic_unload_uns_mesh {} {
proc ic_read_external {backend files {create 1} {prec 1} {tstep 0} args } {
proc ic_rfint_re_delete {} {
proc ic_delete_empty_parts {} {
proc ic_set_max_map_size {what { size "" } } {
proc ic_set_program_paths {vals} {
proc ic_set_clean_up_tmp_files {on} {
proc ic_domain_types {args} {
proc ic_set_project { project } {
proc ic_temp_dir {{dir ""}} {
proc ic_convert_struct_to_unstruct {domains_dir numbers topofile famtopo \
proc ic_convert_domains_to_unstruct {domains_dir {numbers ""} {unsfile ""}} {
proc ic_convert_struct_to_super {domains_dir numbers topofile singledomain listfile {pref ""}} {
proc ic_file_is_ascii {file} {
proc ic_linux_certified {{ignore_enterprise_version 0}} {
proc ic_set_project_names {{names ""}} {
proc ic_exit_icemcfd {{exit 0}} {
proc ic_save_project {settings} {
proc ic_replay {file} {
proc ic_get_ic_functions {type} {
proc ic_load {file {quiet 0} {arg ""}} {
proc ic_save {file {quiet 0}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/file_subs.tcl]]
proc domain_put_info {string} {
proc domain_clear_info {} {
proc domain_print_info {} {
proc ic_start_bigunsop {{reset_verts 0}} {
proc ic_finish_bigunsop {} {    
proc ic_newop {} {
proc newop_save {whole {reset_verts 0}} {
proc undo_on {on} {
proc undo_redo_update {nu nr} {
proc after_phase_enable {} {
proc undo_tmp_delete_graphics { type num state param val } {
proc undo_geom_update_graphics { type num state param val } {
proc old_junk_undo_geom_update_graphics { type num state param val } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/geoclean.tcl]]
proc tsf_pre_callback {edge_id1 edge_id2 edge_name1 edge_name2 dist partial} {
proc tsf_post_callback {mod_curves mod_surfs} {
proc tsf_mod_obj_callback {mod_obj} {
proc tsf_fill_hole_callback {mod_obj} {
proc tsf_midsurface_callback {{mod_obj} all partial alternate} {
proc tsf_midsurface_old_callback {mod_obj} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/geometry_funcs.tcl]]
proc ic_load_tetin {filenames {tri_tolerance 0} {keep_model_params 1} {blanks 0} {quiet 0}} {
proc ic_empty_tetin {} {
proc ic_save_tetin {file {only_visible 0} {v4 0} {only_fams ""} {only_ents ""} {v10 0} \
proc ic_unload_tetin {{quiet 0}} {
proc ic_geo_import_mesh {{domains ""} {do_seg 1} {no_orfn 1} {do_merge 1}} {
proc update_surface_display {obj} {
proc ic_geo_export_to_mesh {merge {fams ""} {quiet 0}} {
proc ic_ddn_app {type partname partdir extra_cmds {batch 1}} {
proc ic_list_ddn_parts {dir update} {
proc ic_geo_summary {} {
proc ic_geo_lookup_family_pid {fam} {
proc ic_geo_is_loaded {} {
proc ic_geo_is_modified {} {
proc ic_geo_valid_name {name no_colon} {
proc ic_geo_set_modified {on} {
proc ic_geo_check_family {name} {
proc ic_geo_check_part {name} {
proc ic_geo_new_family {name {do_update 1}} {
proc ic_geo_new_name {type prefix} {
proc ic_geo_get_unused_part {prefix {no_first_num 0}} {
proc ic_geo_delete_family {names} {
proc ic_geo_params_blank_done {type {reset 0}} {
proc ic_geo_match_name {type pat} {
proc ic_geo_update_visibility {type vis_fams visible} {
proc ic_geo_get_visibility {type name} {
proc ic_geo_set_visible_override {type name val} {
proc ic_geo_temporary_visible {type objects vis {force 0}} {
proc ic_geo_get_temporary_invisible {{type entity}} {
proc ic_geo_set_visible_override_families_and_types {fams types} {
proc ic_redraw_geometry {type name} {
proc ic_geo_incident {type names {even_if_dormant 0}} {
proc ic_geo_surface_get_objects {surface {type "embedded_points"}} {
proc ic_geo_loop_get_objects {loop {type "surface"}} {
proc ic_geo_face_surface_mesh_type { name { type "" } } {
proc ic_geo_surface_edges_incident_to_curve {surfname curvename} {
proc ic_geo_surface_normals_orient {{refsurfname ""} {outward 1}} {
proc ic_geo_get_side_surfaces {tol how {list ""}} {
proc ic_geo_boundary {type {names ""} {outer 0} {even_if_dormant 0} {embedded 0}} {
proc ic_geo_object_visible {type names visible} {
proc ic_geo_configure_objects {type simp shade st sp sh sq \
proc ic_geo_configure_one_attribute {type what val} {
proc ic_geo_configure_one_object {type name what {val -}} {
proc ic_geo_list_families {{only_material 0} {non_empty 0}} {
proc ic_geo_list_parts {{prefix ""} {non_empty 0}} {
proc ic_geo_check_part {name} {
proc ic_geo_list_families_in_part {part} {
proc ic_geo_list_families_with_group {gname} {
proc ic_geo_list_parts_with_group {gname} {
proc ic_geo_family_is_empty {fam} {
proc ic_geo_family_is_empty_except_dormant {fam} {
proc ic_geo_non_empty_families {} {
proc ic_geo_non_empty_families_except_dormant {} {
proc ic_geo_num_objects {type} {
proc ic_geo_list_visible_objects {type {even_if_dormant 1}} {
proc ic_geo_num_visible_objects {type {any 0}} {
proc ic_geo_num_segments {type name} {
proc ic_geo_set_family {type newfam how objs {rename 1}} {
proc ic_geo_set_part {type names newpart {rename_part 1}} {
proc ic_geo_set_name {type name newname {make_new 0} {warn 1}} {
proc ic_geo_get_valid_namelen {} {
proc ic_geo_rename_family {fam newfam {rename_ents 1}} {
proc ic_geo_replace_entity {type e1name e2name } {    
proc ic_geo_get_ref_size {} {
proc ic_set_meshing_params {type num args} {
proc ic_get_mesh_growth_ratio {} {
proc ic_get_meshing_params {type num} { 
proc ic_geo_scale_meshing_params {types factor} {
proc ic_geo_set_curve_bunching {curves args} {
proc ic_geo_get_curve_bunching {name} {
proc ic_geo_create_surface_segment {name how args} {
proc ic_geo_create_curve_segment {name how args} {
proc ic_geo_split_curve {curve points} {
proc ic_geo_split_curve_at_point {curve point {tol 0}} {
proc ic_geo_create_loop {name fam how curves all_separate surfs {fams ""} {pts ""} {crs ""}} {
proc ic_geo_modify_loop {name curves {surfs ""} {pts ""} {crs ""}} {    
proc ic_geo_pick_location {args} {
proc ic_geo_get_object_type {type names} {
proc ic_geo_trim_surface {surf curves {build_topo 1}} {
proc ic_geo_intersect_surfaces {fam surfs {bsp_flag ""} {multi_flag ""}} {
proc ic_geo_intersect_surfs_by_groups {groups {fam ""} {bsp_flag ""} {multi_flag ""}} {
proc ic_geo_create_unstruct_curve_from_points {name fam pts} {
proc ic_geo_create_unstruct_surface_from_points {name fam pts} {
proc ic_geo_create_empty_unstruct_surface {name fam} {
proc ic_geo_create_empty_unstruct_curve {name fam} {
proc ic_geo_create_curve_ends {names} {
proc ic_geo_mod_crv_set_end {crv pnt crvend {tol -1}} {
proc ic_geo_crv_get_end {crv crvend} {
proc ic_geo_create_points_curveinter {curves tol fam {name ""}} {
proc ic_geo_create_point_location {fam pt {in_lcs 1}} {
proc ic_geo_create_material_location {fam pt} {
proc ic_geo_create_density {name size pts {width 0.0} {ratio 0.0} \
proc ic_geo_get_density_color {{get_default_color 0}} {
proc ic_geo_set_density_color {clr} {
proc ic_geo_extract_points {names angle} {
proc ic_geo_extract_curves {names bound angle minedge} {
proc ic_geo_create_surface_edges {names} {
proc ic_geo_get_srf_edges {srf} {
proc ic_geo_stats {type name} {
proc ic_geo_get_point_location {name} {
proc ic_get_point_location {name} { return [ic_geo_get_point_location $name] }
proc ic_geo_get_material_location {name} {
proc ic_get_material_location {name} { return [ic_geo_get_material_location $name] }
proc ic_geo_get_body_location {name} {
proc ic_set_point_location {args} {
proc ic_set_material_location {args} {
proc ic_create_material {names} {
proc ic_delete_material {names} {
proc ic_geo_check_objects_exist {type args} {
proc ic_geo_get_objects {types {fams ""} {even_if_dormant 0}} {
proc ic_geo_count_in_family {types fams} {
proc ic_geo_objects_in_family {types fams} {
proc ic_geo_objects_in_parts {types parts} {
proc ic_geo_get_internal_object {type name} {
proc ic_geo_get_name_of_internal_object {obj} {
proc ic_geo_get_text_point {type name} {
proc ic_geo_get_centroid {type name} {
proc ic_geo_num_segments {type name} {
proc ic_geo_num_nodes {type name} {
proc ic_geo_get_node {type name num} {
proc ic_geo_drag_nodes {type name ptnums startpts startmouse spos svec how} {
proc ic_geo_drag_point {name startpt startmouse spos svec} {
proc ic_geo_drag_material {name startpt startmouse spos svec} {
proc ic_geo_drag_body {name startpt startmouse spos svec} {
proc ic_geo_project_point {type names pt {dir "0 0 0"} {tan_ext 0}} {
proc ic_geo_project_and_move_point {type names pt {dir "0 0 0"} {tan_ext 0} {fam ""}} {
proc ic_geo_project_coords {type names ptloc {dir "0 0 0"} {tan_ext 0}} {
proc ic_geo_nearest_object {type pt {dir "0 0 0"} {tol 0}} {
proc ic_geo_project_curve_to_surface { crvs surfs name {fam ""} {new_name 0} \
proc ic_geo_create_surface_curves { crv1 crv2 name } {
proc ic_geo_create_surface_curtain { crvs surfs name fam {bld_topo 0} {quiet 0}} {
proc ic_geo_set_node {type name num pt} {
proc ic_geo_get_family {type name} {
proc ic_geo_get_part {type name} {
proc ic_build_topo {args} {
proc ic_geo_default_topo_tolerance_old {} {
proc ic_geo_default_topo_tolerance {} {
proc ic_delete_geometry {type how {objects ""} {report_err 1} {even_if_dormant 0}} {
proc ic_geo_pnt_mrg_inc_crv {how objects} {
proc ic_facetize_geometry {type name args} {
proc ic_move_geometry {type args} {
proc ic_geo_unmark_all {} {
proc ic_copy_geometry {type args} {
proc ic_geo_duplicate {type name {newname ""} {facetize 0}} {
proc ic_geo_duplicate_set_fam_and_data {type name {newname ""} {famlist ""} {famext _1} {only_surfs 0}} {
proc ic_geo_fixup {{mesh 0}} {
proc ic_geo_min_edge_length {args} {
proc ic_geo_coarsen {args} {
proc ic_geo_gap_repair {args} {
proc ic_geo_midsurface {args} {
proc ic_geo_lookup {types how {spec ""}} {
proc ic_geo_get_entity_types {entnames} {
proc ic_geo_memory_used {} {
proc ic_geo_project_mode {which} {
proc ic_csystem_get_current {} {
proc ic_csystem_set_current {what} {
proc ic_csystem_list {} {
proc ic_csystem_get {name} {
proc ic_csystem_delete {name} {
proc ic_csystem_create {name type center axis0 axis1 axis2} {
proc ic_coords_into_global {pt {system ""}} {
proc ic_coords_dir_into_global {pt {system ""}} {
proc ic_coords_into_local {pt {system ""}} {
proc ic_csystem_display {name on} {
proc ic_get_coordinate_system {name} {
proc ic_csystem_convert_lcs_to_mechanical {lcs {quiet 1}} {
proc ic_csystem_get_lcs_for_mechanical {} {
proc ic_geo_untrim_surface {surf} {
proc ic_geo_get_thincuts {} {
proc ic_geo_set_thincuts {data} {
proc ic_geo_get_periodic_data {} {
proc ic_geo_set_periodic_data {data} {
proc ic_geo_get_family_param {fam name} {
proc ic_geo_set_family_params {fam args} {
proc ic_geo_reset_family_params {fams params} {
proc ic_geo_delete_unattached { { fams "" } {quiet 0} {only_if_dormant 0}} {
    process_deletes $deletes
proc ic_geo_remove_feature {curves} {
    process_deletes $deletes
proc ic_geo_merge_curves {curves} {
    process_deletes $deletes
proc ic_geo_modify_curve_reappr {curves tol {ask 1} {quiet 0}} {
proc ic_geo_modify_surface_reappr {surfaces tol {ask 1} {each 0} {curves ""}} {
proc gm_crv_reappr_pre {crv_id crv_name appr_id dist} {
proc gm_srf_reappr_pre {appr_id} {
proc gm_crv_reappr_post { crv_id } {
proc ic_geo_calculate_thickness {mid_surfaces {sol_surfaces ""} \
proc ic_geo_reset_data_structures {} {
proc ic_geo_params_update_show_size {type size} {
proc ic_geo_stlrepair_holes {type segs add_nodes int_surf {complete_edges 1} {dcurves ""} {toler ""} {part ""}} {
proc ic_geo_stlrepair_edges {type segs merge_tol {merge_ends -1}} {
proc ic_show_geo_selected {type names on {color ""} {force_visible 0}} {
proc ic_reset_geo_selected {} {
proc ic_get_geo_selected {} {
proc ic_set_geo_selected {selected on} {
proc ic_select_geometry_option {} {
proc ic_geo_add_segment {type name item pts} {
proc ic_geo_delete_segments {type name item pts} {
proc ic_geo_restrict_segments {type name item pts} {
proc ic_geo_split_segments {type name item how pts} {
proc ic_geo_split_edges {type name pts} {
proc ic_geo_split_one_edge {type name ed} {
proc ic_geo_swap_edges {type name pts} {
proc ic_geo_move_segments {type name1 name2 item pts} {
proc ic_geo_move_node {type name nodes args} {
proc ic_geo_merge_nodes {type name nodes} {
proc ic_geo_merge_nodes_tol {type name tol} {
proc ic_geo_merge_surfaces {to from} {
proc ic_geo_merge_objects {type dest objs} {
proc ic_geo_merge_points_tol {pts tol} {
proc ic_geo_finish_edit {type name} {
proc ic_geo_delete_if_empty {type name} {
proc ic_geo_smallest_segment {type name} {
proc ic_geo_get_config_param {type name param} {
proc ic_geo_set_config_param {type name param val} {
proc ic_geo_set_tag {type names tagname on} {
proc ic_geo_highlight_segments {type name add hsmode segs} {
proc ic_geo_bounding_box {objlist} {
proc ic_geo_bounding_box2 {objlist} {
proc ic_geo_model_bounding_box {} {
proc ic_geo_feature_size {type name} {
proc ic_geo_replace_surface_mesh {name pts tris} {
proc ic_geo_replace_curve_mesh {name pts bars} {
proc ic_geo_vec_diff { p1 p2 } {
proc ic_geo_vec_dot { v1 v2 } {
proc ic_geo_vec_mult { v1 v2 } {
proc ic_geo_vec_nrm { vec } {
proc ic_geo_vec_len { vec } {
proc ic_geo_pnt_dist {pnt1 pnt2} {
proc ic_geo_get_nearest_existing_point {loc {part ""}} {
proc ic_geo_vec_smult {vec  scal} {
proc ic_geo_vec_sum { v1 v2 } {
proc ic_geo_crv_length { crvs {t_min 0} {t_max 1}} {
proc ic_geo_cre_srf_rev { family name gen base zaxis srtang endang {dxn a} {bld_topo 0}} {
proc ic_geo_cre_crv_iso_crv { family name srfs par sel {do_split 0} {coord 0}} {
proc ic_geo_cre_srf_pln_3pnts { family name p1 p2 p3 rad} {
proc ic_geo_cre_srf_pln_nrm_pnt { family name pnt nrm rad} {
proc ic_geo_cre_srf_pln_nrm_dist { family name nrm dist rad} {
proc ic_geo_cre_arc_from_pnts { family name p1 p2 p3} {
proc ic_geo_cre_bsp_crv_n_pnts { family name pnts {tol 0.0001} {deg 3}} {
proc ic_geo_cre_bsp_crv_n_pnts_cons { family name pnts fixPnts tanCons tanIndx {tol 0.001}} {
proc ic_geo_cre_crv_arc_ctr_rad { family name center x_ax normal \
proc ic_geo_cre_srf_cyl { family name center x_ax z_ax \
proc ic_geo_cre_line { family name p1 p2} {
proc ic_geo_cre_pnt {family name pnt {in_lcs 1}} {
proc ic_geo_cre_mat {fam name pt {in_lcs 1}} {
proc ic_geo_get_srf_nrm { upar vpar srf } {
proc ic_geo_get_srf_pos { upar vpar srf } {
proc ic_geo_cre_pnt_on_srf_at_par { family name upar vpar srf } {
proc ic_geo_cre_pnt_on_crv_at_par { family name par crv } {
proc ic_geo_cre_crv_concat { family name tol crvs } {
proc ic_geo_create_curve_concat { family name tol crvs } {
proc ic_geo_cre_srf_from_contour {family name tol crvs} {
proc ic_geo_create_surface_from_curves {family name tol crvs {bld_topo 0}} {
proc ic_geo_create_param_surface {family name nu nv ord_u ord_v \
proc ic_geo_list_crv_data {file format crvs} {
proc ic_geo_list_srf_data {file format srfs} {
proc ic_geo_make_conn_regions {type entities {surf_angle 180} {surf_curvature 360}} {
proc ic_geo_get_attached_entities {attach_type orig_type entities} {
proc ic_geo_get_entities_by_attach_num {type num {entities ""}} {
proc ic_geo_get_internal_surface_boundary {surf {not_single 0}} {
proc ic_geo_find_internal_outer_loops {surfs {not_single 0} {all_boundary 0}} {
proc ic_geo_find_internal_surfaces { loop surrounding_surfs {outer_curves ""} {exclusion_surfs ""}} {
proc ic_geo_make_conn_buttons {loop {exclusion_surfs ""}} {
proc ic_geo_split_surfaces_at_thin_regions {srfs tolerance min_res_curve_len} {
proc ic_geo_surface_create_smart_nodes {srfs tolerance min_res_curve_len} {
proc ic_geo_surface_topological_corners {surfs} {
proc ic_geo_flanges_notch_critical_points {surfs} {
proc ic_geo_trm_srf_at_par {srf par sel} {
proc ic_geo_trm_srfs_by_curvature {srfs ang} {
proc ic_surface_curvature {surf {tol 100} {debug 0}} {
proc ic_hull_2d {{entities ""} {tol 0} {four 1} {type "surface"} {shrink 0} {debug 0}} {
proc ic_surface_from_points {points {part ""} {name ""}} {
proc ic_geo_surface_extend {curve surfaces {toler 0} {bld_topo 1} {perpendicular 1} \
proc ic_geo_cre_srf_crv_drv_srf {family name gencrv ctrcrv {bld_topo 0}} {
proc ic_geo_get_types {{which all}} {
proc ic_flood_fill_surface_angle { surf curve angle } {
proc ic_geo_flood_fill {what ents {all 1} {feat_angle 0} {bound_mode "all"} {nedges 0}} {
proc ic_geo_get_triangulation_tolerance {} {
proc ic_geo_convex_hull {entities name fam} {
proc ic_geo_remove_triangles_on_plane {surf plane tol} {
proc ic_geo_bbox_of_entities {ents} {
proc ic_geo_classify_by_regions {planes entities how} {
proc ic_geo_split_surfaces {surfs planes} {
proc ic_geo_elem_assoc {domain assoc} {
proc ic_geo_cre_bsp_srf_by_pnt_array { family name n_ptu n_ptv pnts {tol 0.0001}} {
proc ic_geo_cre_geom_input {in_file \
proc ic_geo_import_str_to_cad {doms {srf_fam SRFS} {crv_fam ""} {pnt_fam ""}} {
proc ic_geo_crv_data { crvs datums} {
proc ic_geo_srf_data {srfs datums} {
proc ic_geo_cre_srf_loft_crvs {family name tol crvs {sec_ord 4} {form 0} {bld_topo 0}} {
proc ic_geo_cre_crv_test_project_surface {family name surface curve dir} {
proc ic_geo_cre_surface_section {family name surface mode P0 P1 {P2 ""} {trim 0}} {
proc ic_geo_offset { family name surface_to_offset offset {max_factor 3} } {
proc ic_geo_cre_crv_datred {family name crvs {tol 0.001}} {
proc ic_geo_cre_srf_datred {family name srfs {tol 0.001}} {
proc ic_geo_cre_srf_sweep { family name gen drv {bld_topo 0}} {
proc ic_geo_crv_is_opposite { crv1 crv2} {
proc ic_geo_crv_is_edge { crv } {
proc ic_geo_fix_degen_geom {{switch 0}} {
proc ic_geo_find_nearest_srf_pnt { srf pnt {want_ext 0}} {
proc ic_geo_find_nearest_crv_pnt { crv pnt } {
proc ic_geo_distance_from_surfaces {surfs coords} {
proc ic_geo_nearest_surface_list {coords surfaces} {
proc ic_geo_get_crv_nrm { par crv } {
proc ic_geo_get_crv_pos { par crv } {
proc ic_geo_get_crv_binrm { par crv } {
proc ic_geo_cvt_uns_to_bsc { family base uns} {
proc ic_geo_srf_area { {srfs ""} } {
proc ic_geo_sort_by_srf_area {surf_list {args ""}} {
proc ic_geo_reduce_face { srfs } {
proc ic_geo_get_crv_tan { par crv } {
proc ic_geo_mod_crv_tanext {crvs dist srtend} {
proc ic_geo_mod_srf_tanext {srfs dist srtend {bld_topo 0}} {
proc ic_geo_mod_srf_ext {srfs dist edge {bld_topo 0}} {
proc ic_geo_mod_crv_match_crv {crv1 crv2 {crv1end 0} {crv2end 0} {modes ""}} {
proc ic_geo_mod_crv_match_pnt {crv pnt {crvend 0} {modes ""}} {
proc ic_geo_cre_srf_offset { family name base offset {all_conn 0} {stitch 0}} {
proc ic_geo_build_bodies {{fam LIVE} {buildtopo 0} {tol 0.01} {multi 0} {newm 0} {surf ""} {assem 0} {from_solids 0} {incr_fam 0}} {
proc ic_geo_build_material_from_solids {{fam ""} {quiet 0} {assembly 0}} {
proc ic_geo_remove_solids_without_material {{quiet 0}} {
proc ic_geo_delete_solid {name} {
proc ic_geo_count_solids_without_material {} {
proc ic_geo_solids_without_material_names {{part ""}} {
proc ic_geo_solids_without_material_in_part {part} {
proc ic_geo_solids_without_material_meshing_params {names args} {
proc ic_set_meshing_params_body {num args} {
proc ic_geo_create_volume { matlpt {name ""} {fam LIVE}} {
proc ic_geo_reset_bodies {} {
proc ic_geo_create_body { surfs {name ""} {fam ""} {quiet 0}} {
proc ic_geo_get_body_matlpnt {bdy} {
proc ic_geo_srf_radius { srfs } {
proc ic_geo_cre_srf_offset_edge { family name crv offset} {
proc ic_geo_body_lower_entities { bdy } {
proc ic_geo_body_part_lower_entities { part } {
proc ic_geo_cre_geom_plot3d { \
proc ic_geo_cre_srf_db_pnts {srfs} {
proc ic_geo_cre_crv_db_pnts {crvs} {
proc ic_geo_read_off_file {fam name in_file} {
proc ic_geo_read_xyz_file {fam name in_file off_file {mode ""}} {
proc ic_geo_crv_is_arc { crvs {tol -1}} {
proc ic_geo_get_keypoints {dir border {bb ""}} {
proc ic_geo_reverse_crv { crvs } {
proc ic_geo_cre_edge_concat { crvs {require_topo 0}} {
proc ic_geo_create_histogram_box { min max lblList } {
proc ic_geo_build_topo_on_srfs { srfs {crvs ""} {tol -1} {trim_srfs 0} {concat_crvs 0} {quiet 0}} {
proc ic_geo_contact_surfaces {surfaces {distance 0} {family ""} {debug 0}} {
proc ic_geo_map_tetin_sizes {tetin {what 0}} {
proc ic_geo_surface_thickness {surfaces order {thickness ""}} {
proc ic_geo_srf_in_srf_fam_set {srf fams} {
proc ic_geo_cre_srf_over_holes {fam srfs} {
proc ic_geo_subset_exists {name} {
proc ic_geo_subset_copy {oldname newname} {
proc ic_geo_subset_clear {name} {
proc ic_geo_subset_unused_name {{pref "subset"}} {
proc ic_geo_subset_delete {name} {
proc ic_geo_subset_visible {name vis} {
proc ic_geo_subset_list_families {name} {
proc ic_geo_subset_list {{pat *}} {
proc ic_geo_subset_add_items {name items} {
proc ic_geo_subset_remove_items {name items} {
proc ic_geo_subset_handle_bc_changes {items subset add} {
proc ic_geo_subset_get_items {name} {
proc ic_geo_subset_bbox {name} {
proc ic_geo_subset_add_layer {name all feat_angle bound_mode} {
proc ic_geo_subset_remove_layer {name} {
proc ic_geo_subset_names_to_parts {} {
proc ic_geo_get_srf_edges {srf} {
proc ic_geo_get_vert_edges {pnt} {
proc ic_geo_calc_bisector_pnt {pnt1 pnt2 pnt3 len inverse} {
proc ic_geo_cre_srf_simple_trim {families names srf crvs} {
proc ic_geo_set_simplification_level {pixels} {
proc ic_surface_thickness_check {names {newfam ""} {return_unassigned 0}} {
proc ic_geo_close_contour {crvs srf} {
proc ic_geo_find_srf_prc_pnt { srf pnt vec} {
proc ic_geo_get_dormant {type {only_if_visible ""}} {
proc ic_geo_get_dormant_entity {type name} {
proc ic_geo_set_dormant_entity {type names set_to} {
proc  ic_set_dormant_pickable {type how {only_parts ""}} {
proc ic_get_facets {type list} {
proc ic_geo_filter_curves {angle fams} {
proc ic_geo_cre_bridge_crv { fam name crv1 crv2 {end1 0} {end2 0} {mag1 0.3} {mag2 0.3}} {
proc ic_geo_cre_pln_crv { fam name crv base nrm} {
proc ic_geo_pln_n_pnts { pnts } {
proc ic_geo_sub_get_numbers_by_names { type ent_names } {
proc ic_geo_get_pnt_marked {name} {
proc ic_geo_set_pnt_marked {name set_to} {
proc ic_geo_get_all_marked_pnts {} {
proc ic_geo_add_embedded_crv {srf crvs} {
proc ic_geo_add_embedded_pnt {srf pnts} {
proc ic_geo_is_crv_on_srf {crv srf {tol -1}} {
proc ic_geo_register_crv {crv_name new_fam} {
proc ic_geo_cre_midline_crv {{crvs ""} tol {debug 0} {crvs2 ""} {fam ""}} {
proc ic_geo_get_units {{fullname 0}} {
proc ic_geo_set_units {units} {
proc ic_geo_get_points_from_curves { curves } {
proc ic_geo_test_cmd {vec pnt crvs srfs} {
proc ic_geo_cre_crv_ell { family name center srt_pnt next_pnt \
proc ic_geo_root_surface_built {} {
proc ic_geo_improve_edge { crvs } {
proc ic_geo_just_do_it { srfs } {
proc ic_geo_srf_off_crv { crv offset srf } {
proc ic_geo_get_prism_families {} {
proc ic_geo_set_prism_families {prism_fams {excl 1}} {
proc ic_geo_get_prism_family_params {fam} {
proc ic_geo_set_prism_family_params {fam args} {
proc ic_geo_objects {type args} {
proc ic_geo_shrink_tetinfile {infile outfile} {
proc ic_geo_define_geom_objects {{type ""}} {
proc ic_geo_convert_units {from to} {
proc ic_geo_find_ngh_curves_angle_limit {limit {want_dormant 0}} {
proc ic_geo_create_tglib_sfbgrid {args} {
proc ic_geo_recreate_all_geometry {} {
proc ic_geo_reinit_geom_objects {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/geometry_subs.tcl]]
proc uniquify_pairs {pairs} {
proc present_geometry {objs mess answers {center_objs ""}} {
proc center_geometry {objs} {
proc geo_import_from_uns {uns no_seg no_merge} {
proc geo_export_to_uns {uns no_merge {fams ""}} {
proc update_geom_visible_obj {obj} {
proc geo_lookup {types how objects {report_err 1} {even_if_dormant 0}} {
proc bbox_of_images {ims} {
proc bbox_of_images2 {ims} {
proc create_empty_tetin_if_needed {} {
proc incident_objects {obj} {
proc boundary_objects {obj outer} {
proc boundary_of_image {im {outer 0} {even_if_dormant 0} {embedded 0}} {
proc after_create_geom_object {type family no} {
proc comak_isoparametric {fam name srf pnt dir} {
proc comak_matching_curve_tangent {part name c1 e1 c2 e2} {
proc comak_curve_end_position {part name c1 e1 pnt} {
proc comak_curve_end_tangent {part name c1 e1 vec} {
proc comak_offset_within_surf {part name crv srf pnt end ds de} {
proc vid_exist {txt args} {
proc comak_intersect_curve_surface {part name crv srf} {			
proc vid_extend_trim_curves {crv1 crv2 end1 tan_ext} {
proc vid_extend_crv_to_xyz {crv xyz p_end v_tan v_cen} {
proc comak_bsinterp_srf_from_crvs {part name crvs} {
proc vid_reorder_pts_using_topo {end_pts crvs} {
proc vid_find_curves_loop {crvs} {
proc vid_find_multiple_loops {fam name {crvs ""} {PartMode 0} {DoNotConcat 0} {Do3 0}} {
proc vid_srf_from_crvs_or_chains {tol fam name ccs} {
proc vid_dummy_pre {args} {return 1}
proc vid_intersect_with_bbox {part def} {
proc comak_reorder_contour_crvs {how_first how_next crvs} {
proc vid_concat_crvs {fam name crvs {keep_old 0}} {
proc va_set_aux_pnts {fam name pts_list {aux 0} {vid_mode 0}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/geom_vid_funcs.tcl]]
proc ic_vcalc {{op ""} args} {
proc ic_highlight {args} {
proc ic_vset {args} {
proc ic_vsettings {args} {
proc ic_vdefine {args} {
proc ic_vfile {args} {
proc ic_vcreate {args} {
proc ic_point {method part name def args} {
proc ic_curve {method part name def args} {
proc ic_surface {method part name def args} {
proc ic_modify {method type names args} {
proc ic_geo_get_crv_end_generic {crv how} {
proc ic_geo_cre_va_arc {part name p1 p2 c r} {
proc ic_geo_file_rename_entities {filein fileout delete_others lists} {
proc ic_geo_file_rename_fams {filein fileout delete_others type part} {
proc ic_geo_get_crv_data_at_par {par crv} {
proc ic_pre_project_nearest_srfs {how srfs coords restrict_dir angle {return_what 0}} {
proc ic_pre_project_tangent_srfs {how srfs coords srf_tan_dir {return_what 0}} {
proc ic_pre_get_crv_dir {crv par_list} {
proc ic_image {{what ""} {name ""} args} { 
proc ic_move_geometry_match_crv_end_pts {crv pts {entities ""}} {
proc ic_geo_move_lcs_lcs {from to type names} {
proc ic_is_triplet {xyz} {
proc ic_geo_mesh_srf_angle {srf args} {
proc ic_vdefine_calculate {name method data} {
proc ic_vid_object {mac {P PART1} {N 1} args} {
	proc macro {P N} {
	proc line {P N Ref p1 p2} {
	proc box0 {P N Ref W L H} {
	proc box8.initxyz {P N Ref {W 1} {L 1} {H 1}} {
	proc box8 {P N} {
	proc box8.delete {P N {what geom}} {
	proc box8.init {P N Ref {L 1} {W 1} {H 1}} {
	proc body_1 {P N} {
	proc body_1.init {P N Ref {Axis "1 0 0"} {L 5} {R 2} {D 2} {Axis2 "1 0 2"} {L2 5} {R2 1}} {
	proc cyl.init  {P N Ref {Pdir "0 1 0"} {Axis "1 0 0"} {L 5} {R 2}} {
	proc cyl {P N} {
proc ic_gui_set {name {value ""} {args ""}} {
proc ic_gui_set2 {name {value ""}} {
proc ic_vid_options {what {data ""}} {
proc ic_regenerate_tris {} {
proc ic_geo_get_points_near {type name {tol ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/hex_funcs.tcl]]
proc ic_hex_init {} {
proc ic_hex_is_loaded {} {
proc ic_hex_ensure_is_loaded {} {
proc ic_hex_dladaptobj_is_loaded {} {
proc ic_hex_remove_dladaptobj {args} {
proc ic_hex_update_dladaptobj {args} {
proc ic_hex_is_modified {{onoff ""}} {
proc ic_hex_curve_radius {args} {
proc ic_hex_curve_length {args} {
proc ic_hex_point_distance {args} {
proc ic_hex_error_messages {args} {
proc ic_hex_set_piercing {args} {
proc ic_hex_set_unproj_internal {args} {
proc ic_hex_reference_blocking {args} {
proc ic_hex_set_ref_uns_mesh {args} {
proc ic_hex_update_ref_uns_mesh {args} {
proc ic_hex_ref_mesh_set {args} {
proc ic_hex_set_uns_face_mesh {args} {
proc ic_hex_set_face_input_mesh {args} {
proc ic_hex_surface_blocking {args} {
proc ic_hex_multizone_blocking {args} {
proc ic_hex_bfcart_blocking {args} {
proc ic_hex_virtual_topo_blocking {args} {
proc ic_hex_twod_to_threed {args} {
proc ic_hex_make_edge_smooth {args} {
proc ic_hex_reset_ogrid_orthogonality {args} {
proc ic_hex_blank_blocks {args} {
proc ic_hex_blank_selected_blocks {use_output use_blank blocks} {
proc ic_hex_unblank_blocks {args} {
proc ic_hex_blank_free_faces {args} {
proc ic_hex_check_face_radii {args} {
proc ic_hex_update_node_indices {args} {
proc ic_hex_update_node_locations {args} {
proc ic_hex_remove_unused_grid_lines {args} {
proc ic_hex_set_edge_tangents {args} {
proc ic_hex_smooth_edges_at_vertex {args} {
proc ic_hex_edge_node_dim {args} {
proc ic_hex_get_edge_node {args} {
proc ic_hex_point_location {args} {
proc ic_hex_get_surface_family {args} {
proc ic_hex_define_family {args} {
proc ic_hex_auto_split_edge {args} {
proc ic_hex_undo_major_start {args} {
proc ic_hex_undo_major_end {args} {
proc ic_hex_add_boco {args} {
proc ic_hex_display_mat_points {args} {
proc ic_hex_region_zoom {args} {
proc ic_hex_get_block_family {args} {
proc ic_hex_get_block_families_and_types {args} {
proc ic_hex_get_block_type_number {type args} {
proc ic_hex_read_domains {args} {
proc ic_hex_reverse_dimension {args} {
proc ic_hex_write_family_boco {args} {
proc ic_hex_clear_bocos {args} {
proc ic_hex_align_superblocks {args} {
proc ic_hex_vertex_ijk {args} {
proc ic_hex_vertex_number {args} {
proc ic_hex_list_vertex_edges {args} {
proc ic_hex_get_block_vertices {args} {
proc ic_hex_get_vertex_blocks {args} {
proc ic_hex_get_edge_blocks {args} {
proc ic_hex_get_face_blocks {args} {
proc ic_hex_get_vertex_faces {args} {
proc ic_hex_get_edge_faces {args} {
proc ic_hex_get_vertex_edges {args} {
proc ic_hex_uncollapse_edge {args} {
proc ic_hex_link_shape {args} {
proc ic_hex_get_edge_shape_factor {args} {
proc ic_hex_link_shape_dimension {args} {
proc ic_hex_topo_vertex_number {args} {
proc ic_hex_topo_edge_number {args} {
proc ic_hex_list_edge_constraints {args} {
proc ic_hex_topo_face_number {args} {
proc ic_hex_topo_face_number_list {args} {
proc ic_hex_get_super_faces_topo {args} {
proc ic_hex_get_super_faces_in_plane {args} {
proc ic_hex_change_mouse_buttons {args} {
proc ic_hex_global_smooth {args} {
proc ic_hex_edge_ijk {args} {
proc ic_hex_gls_init {args} {
proc ic_hex_gls_display_bucket {args} {
proc ic_hex_display_ijk_region {args} {
proc ic_hex_delete_blocks {args} {
proc ic_hex_mesh_dimension {args} {
proc ic_hex_dim_to_mesh {args} {
proc ic_hex_create_block {args} {
proc ic_hex_create_sheet {args} {
proc ic_hex_create_unstruct_sheet {args} {
proc ic_hex_merge_sheet_with_unstruct {args} {
proc ic_hex_solidify_sheets {args} {
proc ic_hex_create_block_primitive {args} {
proc ic_hex_create_yblock {args} {
proc ic_hex_create_degen_block {args} {
proc ic_hex_count_unstruct_blocks {args} {
proc ic_hex_create_unstruct_block {args} {
proc ic_hex_split_unstruct_block {args} {
proc ic_hex_split_unstruct_block3d {args} {
proc ic_hex_transfer_blocks {args} {
proc ic_hex_compute_spline_distribution {args} {
proc ic_hex_max_superblock_number {args} {
proc ic_hex_threed_to_twod {args} {
proc ic_hex_select_blocks {args} {
proc ic_hex_set_edge_length {args} {
proc ic_hex_align_vertices {args} {
proc ic_hex_align_vertices2 {args} {
proc ic_hex_align_vertices3 {args} {
proc ic_hex_update_association {args} {
proc ic_hex_clear_curve_association {curve} {
proc ic_hex_default_bunching_law {args} {
proc ic_hex_merge_blocking {args} {
proc ic_hex_merge_blocking_models {args} {
proc ic_hex_change_origin {args} {
proc ic_hex_invert_super_block {args} {
proc ic_hex_rotate_super_block {args} {
proc ic_hex_set_super_block_ijk {args} {
proc ic_hex_auto_merge {args} {
proc ic_hex_decimate_blocks {args} {
proc ic_hex_multi_grid_level {args} {
proc ic_hex_transfinite_degree {args} {
proc ic_hex_projection_limit {args} {
proc ic_hex_select_surf_uv {args} {
proc ic_hex_isocurve {args} {
proc ic_hex_scale_mesh_size {args} {
proc ic_hex_init_output_blocks {args} {
proc ic_hex_wing_gri {args} {
proc ic_hex_define_point {args} {
proc ic_hex_write_tetin_file {args} {
proc ic_hex_extrude_faces {args} {
proc ic_hex_extrude_faces_interactive {args} {
proc ic_hex_extrude_face {args} {
proc ic_hex_split_face {args} {
proc ic_hex_split_face_auto {args} {
proc ic_hex_merge_face {args} {
proc ic_hex_invert_blocking {args} {
proc ic_hex_pack_superblocks {args} {
proc ic_hex_change_superblocks {args} {
proc ic_hex_add_buffer_blocks {args} {
proc ic_hex_query_refinement {args} {
proc ic_hex_query_face_proj {args} {
proc ic_hex_set_refinement {args} {
proc ic_hex_refine_blocks {args} {
proc ic_hex_insert_blocking {args} {
proc ic_hex_copy_blocking {args} {
proc ic_hex_print_topo_tree {args} {
proc ic_hex_extract_blocking {args} {
proc ic_hex_delete_blocking {args} {
proc ic_hex_smooth {args} {
proc ic_hex_make_nodes_not_periodic {args} {
proc ic_hex_make_nodes_periodic {args} {
proc ic_hex_match_edges {args} {
proc ic_hex_match_edges_auto {args} {
proc ic_hex_extrude_blocks {args} {
proc ic_hex_copy_blocking_periodic {args} {
proc ic_hex_copy_blocking_mirror {args} {
proc ic_hex_make_blocking_periodic {args} {
proc ic_hex_create_voi {args} {
proc ic_hex_get_node_location {args} {
proc ic_hex_set_node_location {args} {
proc ic_hex_normalize_grid_lines {args} {
proc ic_hex_floating_grid {args} {
proc ic_hex_separate_classes {args} {
proc ic_hex_separate_grid_lines {args} {
proc ic_hex_place_nodes {args} {
proc ic_hex_rotate_nodes {args} {
proc ic_hex_list_surfaces {args} {
proc ic_hex_make_nodes_not_periodi {args} {
proc ic_hex_set_periodicity {args} {
proc ic_hex_update_periodicity {args} {
proc ic_hex_clear_association {args} {
proc ic_hex_rename_blocking {args} {
proc ic_hex_set_linewidth {args} {
proc ic_hex_set_linewidth2 {args} {
proc ic_hex_switch_blocking {args} {
proc ic_hex_duplicate_blocking {args} {
proc ic_hex_transform_blocking {args} {
proc ic_hex_move_node {args} {
proc ic_hex_move_face {args} {
proc ic_hex_read_bocofile {args} {
proc ic_hex_get_indices_should_look_good {args} {
proc ic_hex_assemble_topo {args} {
proc ic_hex_write_ppm_file {args} {
proc ic_hex_graphics_loc_h {args} {
proc ic_hex_load_undo_file {args} {
proc ic_hex_merge_blocks {args} {
proc ic_hex_set_background {args} {
proc ic_hex_multi_block {args} {
proc ic_hex_delete_composite {curves} {
proc ic_hex_get_proj_curves {compcurve} {
proc ic_hex_find_comp_curve {curve} {
proc ic_hex_collapse_blocks {args} {
proc ic_hex_collapse_edge {args} {
proc ic_hex_delete_node_on_edge {args} {
proc ic_hex_vertex_to_edge {args} {
proc ic_hex_merge_vertices {args} {
proc ic_hex_n_nodes_edge {args} {
proc ic_hex_set_mesh_params {args} {
proc ic_hex_set_curve_params {args} {
proc ic_hex_set_surface_params {args} {
proc ic_hex_create_composite {curves} {
proc ic_hex_composite_curve {args} {
proc ic_hex_compute_mesh_size {args} {
proc ic_hex_set_node_projection {args} {
proc ic_hex_set_element_materials {args} {
proc ic_hex_mark_blocks {args} {
proc ic_hex_select_value {args} {
proc ic_hex_ray_x_edge_value {args} {
proc ic_hex_set_edge_projection {args} {
proc ic_hex_auto_associate_geometry {args} {
proc ic_hex_morph_blocking_to_geometry {args} {
proc ic_hex_unproject_face {args} {
proc ic_hex_select_curve {args} {
proc ic_hex_select_point {args} {
proc ic_hex_select_nodes {args} {
proc ic_hex_select_node {args} {
proc ic_hex_mesh_params {args} {
proc ic_hex_select_edge {args} {
proc ic_hex_erase_edge_mesh {args} {
proc ic_hex_display_bounding_box {args} {
proc ic_hex_display_periodic_faces {args} {
proc ic_hex_display_text {args} {
proc ic_hex_create_window {args} {
proc ic_hex_display_edge_mesh {args} {
proc ic_hex_display_faces {args} {
proc ic_hex_display_surfaces {args} {
proc ic_hex_select_super_faces {args} {
proc ic_hex_display_curves {args} {
proc ic_hex_scan_plane {args} {
proc ic_hex_display_elements {args} {
proc ic_hex_select_surface {args} {
proc ic_hex_set_depthcue {args} {
proc ic_hex_display_axes {args} {
proc ic_hex_erase_axes {args} {
proc ic_hex_display_nodes {args} {
proc ic_hex_display_points {args} {
proc ic_hex_display_super_edges {args} {
proc ic_hex_display_super_faces {args} {
proc ic_hex_select_super_face {args} {
proc ic_hex_display_super_blocks {args} {
proc ic_hex_dynamic_edge_mesh {args} {
proc ic_hex_orient {args} {
proc ic_hex_multi_grid_level_check {args} {
proc ic_hex_change_element_id {args} {
proc ic_hex_cei {args} {
proc ic_hex_dls {args} {
proc ic_hex_rh {args} {
proc ic_hex_rr {args} {
proc ic_hex_dem {args} {
proc ic_hex_dcr {args} {
proc ic_hex_sp {args} {
proc ic_hex_del {args} {
proc ic_hex_wh {args} {
proc ic_hex_ps {args} {
proc ic_hex_rb {args} {
proc ic_hex_oo {args} {
proc ic_hex_sg {args} {
proc ic_hex_se {args} {
proc ic_hex_sm {args} {
proc ic_hex_rep {args} {
proc ic_hex_sd {args} {
proc ic_hex_worst_hex {args} {
proc ic_hex_project_to_surface {args} {
proc ic_hex_project_to_points {args} {
proc ic_hex_ogrid {args} {
proc ic_hex_write_file {args} {
proc ic_hex_save {args} {
proc ic_hex_print_coordinate_system {args} {
proc ic_hex_list_coordinate_systems {args} {
proc ic_hex_set_coordinate_system {what} {
proc ic_hex_define_coordinate_system {args} {
proc ic_hex_delete_coordinate_system {args} {
proc ic_hex_define_variable {args} {
proc ic_hex_undefine_variable {args} {
proc ic_hex_list_families {args} {
proc ic_hex_list_block_families {args} {
proc ic_hex_list_block_families_without {{skip VORFN}} {
proc ic_hex_list_surface_families {args} {
proc ic_hex_list_block_numbers {args} {
proc ic_hex_non_empty_families {args} {
proc ic_hex_manhattan {args} {
proc ic_hex_fluent {args} {
proc ic_hex_superdomain {args} {
proc ic_hex_save_blocking {args} {
proc ic_hex_set_mesh {args} {
proc ic_hex_split_grid {args} {
proc ic_hex_delete_station {args} {
proc ic_hex_outer_o {args} {
proc ic_hex_restore_blocking {args} {
proc ic_hex_blocking_loaded {args} {
proc ic_hex_place_node {args} {
proc ic_hex_split_edge {args} {
proc ic_hex_remove_edge_points {args} {
proc ic_hex_remove_edge_point {args} {
proc ic_hex_ijk_max {args} {
proc ic_hex_ijk_material {args} {
proc ic_hex_ratio_histogram {args} {
proc ic_hex_ratio_range {args} {
proc ic_hex_push_text {args} {
proc ic_hex_undo {args} {
proc ic_hex_redo {args} {
proc ic_hex_define_shared_wall {args} {
proc ic_hex_list_shared_walls {args} {
proc ic_hex_remove_shared_wall {args} {
proc ic_hex_get_curve_params {args} {
proc ic_hex_get_surface_params {args} {
proc ic_hex_unhighlight_curves {args} {
proc ic_hex_extend_split {args} {
proc ic_hex_index_from_edge {args} {
proc ic_hex_straighten {args} {
proc ic_hex_initialize_mesh {args} {
proc ic_hex_set_family_projection {args} {
proc ic_hex_list_family_projection {args} {
proc ic_hex_rescale_ogrid {args} {
proc ic_hex_project_face {args} {
proc ic_hex_check_mesh {args} {
proc ic_hex_create_mesh {args} {
proc ic_hex_create_auto_surface_mesh  {args} {
proc ic_hex_renew {args} {
proc ic_hex_unload_blocking {args} {
proc ic_hex_new_blocking {ents fam {bbox ""} {trf ""} {version 50}} {
proc ic_hex_keypoint_blocking {args} {
proc ic_hex_initialize_blocking { args } {
proc ic_hex_initialize_blocking { ents fam oriented {version 50}} {
proc ic_hex_transform_point {trf pt} {
proc ic_hex_convert_to_struct {args} {
proc ic_hex_convert_sides_to_mapped3d {args} {
proc ic_hex_convert_to_unstruct {args} {
proc ic_hex_convert_to_swept {args} {
proc ic_hex_convert_unstruct_to_swept {args} {
proc ic_hex_imprint_face {args} {
proc ic_hex_imprint_loop {args} {
proc ic_hex_imprint_loop_and_split_block3d {args} {
proc ic_hex_connect_edges {args} {
proc ic_hex_get_blk_info {args} {
proc ic_hex_find_aligned_faces {args} {
proc ic_hex_create_swept_block {args} {
proc ic_hex_unstruct_face_type {args} {
proc ic_hex_set_sblock_mesh_type {args} {
proc ic_hex_set_ublock_mesh_type {args} {
proc ic_hex_set_n_tetra_smoothing_steps {args} {
proc ic_hex_convert_degen_to_yblock {args} {
proc ic_hex_update_comp_curves {args} {
proc ic_hex_write_cart_file {args} {
proc ic_hex_print_sblock_info {args} {
proc ic_hex_print_block_type_info {args} {
proc ic_hex_create_subset {args} {
proc ic_hex_create_named_selection_subset {args} {
proc ic_hex_subset_add_items {args} {
proc ic_hex_subset_add_named_selection_items {args} {
proc ic_hex_subset_remove_items {args} {
proc ic_hex_subset_remove_named_selection_items {args} {
proc ic_hex_delete_subset {args} {
proc ic_hex_delete_named_selection_subset {args} {
proc ic_hex_subset_exist {args} {
proc ic_hex_display_subset {args} {
proc ic_hex_subset_unused_name {args} {
proc ic_hex_list_subsets {args} {
proc ic_hex_rename_subset {args} {
proc ic_hex_rename_named_selection_subset {args} {
proc ic_hex_list_subset_entities {subset type} {
proc ic_hex_get_subset_centroid {args} {
proc ic_hex_subset_named_selection {{name ""}} {
proc ic_hex_subset_list_named_selections {} {
proc ic_hex_super_determinant {args} {
proc ic_hex_oriented_bbox {ents} {
proc ic_hex_list_blocking_parts {} {
proc ic_hex_display_loc {args} {
proc ic_hex_report_blocking {file} {
proc ic_hex_write_grid {file} {
proc ic_hex_block_surfaces_base {args} {
proc ic_hex_block_surfaces_status {args} {    
proc ic_hex_mesh_free_surfaces {args} {
proc ic_hex_cut_plane {args} {
proc ic_hex_reverse_swept_direction {args} {
proc ic_hex_make_edge_curve_type {args} {
proc ic_hex_get_edge_param {n1 n2 param} {
proc ic_hex_is_edge_linked {n1 n2} {
proc ic_hex_match_and_link_edges {rn1 rn2 n1 n2} {
proc ic_hex_copy_edge_params {from to {absolut 0} {no_nodes 0}} {
proc ic_hex_reset_edge_mesh {params e1 e2 e3 e4} {
proc ic_hex_cmd_select_edge {{fams ""} {range ""} {bunching 1} {volume 0} {segment 0} {output 0}} {
proc ic_hex_ratio_check_minquality {which {fams ""} {range ""} {project_type 2} {full 0}} {
proc ic_hex_scale_mesh_size_with_spacings_gui {scale {fams ""} {range ""} {use_output_blocks 0}} {
proc ic_hex_scale_mesh_size_with_spacings {scale edges} {
proc ic_hex_get_edge_segment_number {args} {
proc ic_hex_get_hidden_nodes {args} {
proc ic_hex_get_edge_surface_assoc {args} {
proc ic_hex_get_edge_curve_type {args} {
proc ic_hex_set_unstruct_face_method {args} {
proc ic_hex_ogrid_smooth_transition {args} {
proc ic_hex_project_to_topo {args} {
proc ic_hex_move_lcs_lcs {from to top_current move_how subset} {
proc ic_hex_get_nearest_existing_point {vertex {part ""}} {
proc ic_hex_get_hexlib {} {
proc ic_hex_sketch_create_blocking_without_geometry {what {tol 0.01} {part SOLID}} {
proc ic_hex_sketch_set_projections {what part} {
proc ic_hex_sketch_unset_projections {{what "vertex edge face"}} {
proc ic_mesh2block {} {
proc ic_hex_compute_curvature_asf {args} {
proc ic_hex_imprint_face3d {args} {
proc ic_hex_match_swept_levels3d {args} {
proc ic_hex_split_ublock_connect_faces {args} {
proc ic_hex_set_default_ublock_mesh_type {args} {
proc ic_hex_count_blocks {type {orfn 0}} {
proc ic_hex_select_all_free_faces {} {
proc ic_hex_number_all_free_faces {} {
proc ic_hex_split_unstruct_block3d_by_edge_loops {args} {
proc ic_hex_split_block3d_absolute {edge num_splits} {
proc ic_hex_convert_to_struct_from_nodes {args} {
proc ic_hex_check_split_mappable_convert_face {args} {
proc ic_hex_read_blocking_mesh {args} {
proc ic_hex_write_blocking_mesh {args} {
proc ic_hex_get_edge_to_apply {n1 n2} {
proc ic_hex_reset_unstruct_node_locs {args} {
proc ic_hex_block_transfer {how use_output_blocks blocks} {
proc ic_hex_set_out_of_date {args} {
proc ic_hex_set_dim_to_project {args} {
proc ic_hex_get_faces_of_superface {args} {
proc ic_hex_get_source_edge_shape_factor {args} {
proc ic_hex_convert_faces_to_cad {file {prefix ""}} {
proc ic_hex_get_parallel_edges {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/med_batch.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/meshdirect_funcs.tcl]]
proc md_debug {s} {
proc ic_meshdirect_available_directives_get {} {
proc ic_meshdirect_get_icon_direction {directive source_family target_family {source_type ""} \
proc ic_meshdirect_icons_visibility {family vis} {
proc ic_meshdirect_add_icon {directive source_family {target_family ""} {source_type ""} \
proc ic_meshdirect_delete_icon {directive families} {
proc ic_meshdirect_delete_icon_on_ents {type ents} {
proc ic_meshdirect_arbitrary_connector_set {source_fams source_type \
proc ic_meshdirect_boltspider_set {bolthole_fams result_fam {extra_args ""}} {
proc ic_meshdirect_boltspider_set_mesh_sizes {bolthole_fams} {
proc ic_meshdirect_seamweld_set {source_fams target_fam result_fam {extra_args ""}} {
proc ic_meshdirect_spotweld_set {source_fams target_fam result_fam {extra_args ""}} {
proc ic_meshdirect_spotweld_types_verbose_list {} {
proc ic_meshdirect_spotweld_types_verbose_get {param} {
proc ic_meshdirect_seamweld_types_verbose_list {} {
proc ic_meshdirect_seamweld_types_verbose_get {param} {
proc ic_meshdirect_spotweld_types_param_get {verbose_type} {
proc ic_meshdirect_seamweld_types_param_get {verbose_type} {
proc ic_meshdirect_weld_splitting_verbose_list {} {
proc ic_meshdirect_weld_splitting_param_get {verbose_type} {
proc ic_meshdirect_weld_splitting_verbose_get { param } {
proc ic_meshdirect_glinka_side_param_get {verbose_type} {
proc ic_meshdirect_glinka_subtype_verbose_get {param} {
proc ic_meshdirect_glinka_side_verbose_get { param } {
proc ic_meshdirect_directive_set_vals_by_tag {directive fams vals} {
proc ic_meshdirect_directive_set_val_by_tag {directive fams tag val} {
proc ic_meshdirect_directive_get_val_by_tag {directive fam tag} {
proc ic_meshdirect_target_fam_params_get {directive} {
proc ic_meshdirect_model_has_directives { } {
proc ic_meshdirect_get_directive_of_fam {famnames} {
proc ic_meshdirect_directive_uses_family {given_fam} {
proc ic_meshdirect_param_requires_remeshing {} {
proc ic_meshdirect_target_fam_vals_get {directive fam} {
proc ic_meshdirect_directive_tags_get {directive} {
proc ic_meshdirect_spotweld_file_import {filename {args ""}} {
proc ic_meshdirect_standalone_exec { idomain tetin {odomain ""} args } {
proc ic_meshdirect_object_exec {types {args ""}} {
proc ic_meshdirect_weld_prepoint_standard {ppname args} {
proc ic_meshdirect_weld_prepoint {ppname args} {
proc ic_meshdirect_spot_weld {args} {
proc ic_meshdirect_spot_weld_shadow_points_create {args} {
proc ic_meshdirect_entity_is_shadow_entity {ent_name} {
proc ic_meshdirect_spot_weld_shadow_points_on_surface {srf} {
proc ic_meshdirect_seam_weld_shadow_curves_create {args} {
proc ic_meshdirect_seam_weld_shadow_curves_on_surface {srf} {
proc ic_meshdirect_enforce_curve_shadow_nodes_on_surfaces { source_curves target_surfaces } {
proc ic_geo_crv_parent_srf_is_coplanar_to_nearest {crv srfs} {
proc ic_meshdirect_seam_weld_glinka_geo_create_simplified { source_curves target_family extra_args } {
proc ic_meshdirect_seam_weld_glinka_geo_create { source_curves target_family extra_args } {
proc ic_meshdirect_seam_weld_glinka_find_valid_connections {res_srfs source_curves valid_parts} {
proc ic_meshdirect_seam_weld_glinka_geo_valid { glinka_source_family } {
proc notyetused_ic_meshdirect_ensure_good_curtain_connectivity { weld_families } {
proc fixme {} {
proc ic_meshdirect_setlist {directive list} {
proc ic_meshdirect_set {directive flexentry} {
proc ic_meshdirect_get {directive {fams ""}} {
proc ic_meshdirect_reset {{directives ""} {fams ""}} {
proc ic_meshdirect_get_current_for_flexlist {{directives ""} {fams ""}} {
proc ic_meshdirect_find_curve_contacts {distance {parts ""} {weld_args ""} } {
proc ic_meshdirect_seam_weld_glinka_thickness_attached_to_curve { crv {warn 0}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/meshdirect_subs.tcl]]
proc ic_meshdirect_sub_available_directives_get {} {   
proc ic_meshdirect_sub_param_for_tag {directive tag} {
proc ic_meshdirect_sub_params_set {fams args} {
proc ic_meshdirect_sub_extra_args_set {fams arg_pairs} {
proc ic_meshdirect_shadow_name_suffix {} { return "_SHADOW" }
proc ic_meshdirect_spot_weld_shadow_point_name {srf pnt} {
proc ic_meshdirect_spot_weld_shadow_point_family {srf} {
proc ic_meshdirect_seam_weld_shadow_curve_name {srf crv} {
proc ic_meshdirect_seam_weld_shadow_curve_family {srf} {
proc ic_meshdirect_sub_boltspider_icon_locs { family } {
proc ic_meshdirect_sub_seamweld_icon_locs {family} {
proc ic_meshdirect_sub_spotweld_icon_locs {family} {
proc ic_meshdirect_sub_set_list {type list} {
proc old_ic_meshdirect_set_old {type entry} {
proc unstruct_meshdirect_get {type {fams ""}} {
proc unstruct_meshdirect_reset {{types ""} {fams ""}} {
proc unstruct_meshdirect_list {{types ""} {fams ""}} {
proc ic_meshdirect_welding_spot_import {filename mode projection_max {report_file ""}} {
proc ic_meshdirect_bolt_holes {d1 d2 {number_of_nodes ""} {ratio 1} {width 2} {loops ""} {curves ""} {part HOLE} {smart_sizing 1} } {
proc ic_meshdirect_remove_unclosed_loops { loops } {
proc ic_meshdirect_make_conn_loops {curves} {
proc ic_meshdirect_find_button_features {{surfs ""}	{exclusion_surfs ""} {butt_type ""}} {
proc ic_meshdirect_find_seam_buttons { {surfs ""} {exclusion_surfs ""}}  {
proc ic_meshdirect_fillet_find_surf {
proc ic_meshdirect_fillet_find {a_min a_max l_min {surfs ""}} {
proc ic_meshdirect_fillet_find_arc {cr a_min a_max l_min {tol -1}} {
proc ic_meshdirect_fillet_find_by_arc {{surfs ""} {l_min 1} {l_max  20} {min_curvature 15} \
proc ic_meshdirect_fillet_continues {fllt_type} {
proc ic_meshdirect_fillet_continues_tri {tri_lst tri_nm sng_nm tri_crv fllt_type} {
proc ic_meshdirect_set_param_crvs_prll {crv_p} {
proc ic_meshdirect_set_param_crvs {crv_list msh_lmt} {
proc ic_meshdirect_find_opposite_side {srf {bnd ""} {ret 0}} {
proc ic_meshdirect_find_angle_between_curves {crv1 crv2 {pnt ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/meshing_funcs.tcl]]
proc ic_run_tetra {tetin uncut_dom args} {
proc check_tetra_progress {pid line} {
proc ic_write_fieldmesher_params_xml_file {working_dir input_mesh output_mesh tetin_file meshing_controls\
proc ic_run_fieldmesher {inpfile outfile args} {
proc ic_run_tri2tet {inpfile outfile args} {
proc check_tri2tet_progress {pid line} {
proc ic_run_afmesh {inpfile outfile args} {
proc ic_run_tgrid {inpfile outfile args} {
proc ic_run_cutter {tetin uncut_dom cut_dom args} {
proc ic_run_prism {tetin cut_dom prism_dom args} {
proc ic_run_hexa {tetin blocking replay  { proj_dir "" } { domains_dir "" } {  mesh_dir "" } } {
proc ic_run_frontal { args} {
proc ic_application_terminate {} {
proc ic_quad {args} {
proc ic_quad_from_geometry {what entities {element 4} {proj 0} {iters 20} {conver 0.025} \
proc ic_get_ignore_size {} {
proc ic_quad2 {args} {
proc ic_quad_debug {{db 0}} {
proc ic_quad_from_elements {name {element 4} {proj 0} {remesh 0} {iters 20} \
proc ic_quad_from_bars {name {element 4} {proj 0} {iters 20} {conver 0.025} \
proc ic_quad_mesh_surface_from_edge_mesh {sname} {
proc ic_quad_from_loops {name element proj iters conver improvement bunch loopnames \
proc ic_smooth_quad {name {proj 0} {iters 20} {conver 0.025} {improvement 0} \
proc ic_smooth_hexa {name {proj 0} {iters 20} {conver 0.025} {w 0} {debug 0} \
proc ic_mesh_curve {name} {
proc ic_remesh_edges {name tol merge_ends {mtol 0} {db 0}} {
proc ic_remesh_bad_elements {name {element 3} {proj 0} {db 0} {all_dim 0} \
proc ic_quad_remesh_bad_elements_by_quality {fams types metric {quality_limit 0.6} \
proc ic_quad_remesh_by_diagnostic {diagnostic fams types nlayers {eltype 2} \
proc ic_enforce_vertex {name {element 3} {proj 0} {db 0} {all_dim 0} {vertex -1} \
proc ic_change_tri_quad_2 {name {proj 0} {db 0} {all_dim 0} {max_steps -1} \
proc ic_quad_offset_curve_layers {how which {n_layers ""} {db 0}} {
proc ic_run_meshdirect { idomain tetin {odomain ""} args } {
proc ic_run_meshdirect_obj {types args} {
proc ic_mapped_mesh { min_len asp_ratio len_ratio fams } {
proc ic_delete_bad_tets {} {
proc ic_remesh_tets { } {
proc ic_create_pyramids {{args ""}} {
proc ic_mesh_hexcart {args} {
proc check_hexcart_progress {pid line} {
proc ic_uns_cart3d_shrinkwrap {tetin_file minsize {proj_fact 0.3} {nsmooth 5} {fam ENVELOPE}} {
proc ic_hexcart_shrinkwrap {tetin_file minsize {proj_fact 0.3} {nsmooth 5} {fam inherited} {force_load 0} {mtype 0} {batch 1}} {
proc ic_hexcart_body_fitted {tetin_file minsize parts args} {
proc ic_hexcart_bfcart_inflation {} {
proc ic_mesh_hexdom {family {remesh 0}} {
proc ic_run_mapped_based_mesher {{type "Quad Dominant"} {surfs ""} {min_edge 0} {mode ""} {no_merge 1} {version 100}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/meshing_subs.tcl]]
proc after_create_uns_stuff {} {
proc display_quad_results {} {
proc quad_uniquify_pairs {pairs} {
proc ic_quad_undo {what {big 0}} {
proc ic_quad_type {{shape 0}} {
proc ic_tri_type {{shape 0}} {
proc ic_bar_type {{shape 0}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/misc_funcs.tcl]]
proc ic_rename_family {old new} {
proc ic_print {args} {
proc ic_view_zvector {} {
proc ic_comment { text }  {
proc ic_get_n_processors {} {
proc ic_gui_update {{what ""}} {
proc ic_set_global {name value {field ""}} {
proc ic_unset_global {name {field ""}} {
proc ic_get_global {name {field ""}} {
proc ic_get_global_array_names {name} {
proc ic_get_meshing_param_value {type param} {
proc ic_autosizing {type {force 0}} {
proc ic_get_non_empty_parts {} {
proc ic_solution_set_solver {ch getbc} {
proc ic_set_path_to_libpython2_5 {} {
proc ic_socket_set_server_info {what value} {
proc ic_socket_get_server_info {what} {
proc ic_socket_output_server_info {} {
proc ic_socket_unset_server_info {{what ""}} {
proc ic_socket_puts {sock line} {   
proc ic_socket_gets {sock} {
proc ic_socket_connect_client_to_server {port {client ""}} {
proc ic_socket_connect_client_to_server1 {port} {
proc ic_socket_connect_client_to_server2 {port client} {
proc ic_socket_disconnect_server {} {
proc ic_socket_error {error} {
proc ic_socket_message {mess {color blue}} {
proc ic_socket_send_to_wb2 {line} {
proc ic_socket_exec_client_command {sock} {
proc ic_socket_is_client_connection_alive {client} {
proc ic_socket_connect_client {sock addr port} {
proc ic_socket_connect_icemcfd_server {port} {
proc ic_socket_start_icemcfd_server {port {client "workbench"}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/output_funcs.tcl]]
proc ic_create_output {solver domain args} {
proc ic_export_mesh {args} {
proc ic_import_nastran {prog outfile rbe3 bars shell projname} {
proc ic_export_nastran {nas_file domain family_boco solver_params \
proc ic_run_stars_result2df { srf_file domain_file mesh_info type } {
proc ic_multiblock_domain_list {{fm ""}} {
proc ic_domain_cmp {dom1 dom2} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/params_funcs.tcl]]
proc ic_param_load {file {clear_old 1}} {
proc ic_param_save {file {pats ""}} {
proc ic_param_is_loaded {} {
proc ic_param_is_modified {} {
proc ic_param_set_modified {{flag 1}} {
proc ic_param_add_node {parent name values} {
proc ic_param_delete_node {node} {
proc ic_param_list_children {node {tail 0}} {
proc ic_param_node_list {{pat *}} {
proc ic_param_node_exists {node} {
proc ic_param_unused_child_name {node {prefix ""}} {
proc ic_param_get_values {node} {
proc ic_param_set_values {node values} {
proc ic_param_rename {oldprefix newprefix {delete_non_matching 0}} {
proc ic_param_set_all {vals} {
proc ic_param_get_all {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/regression_funcs.tcl]]
proc ic_regression_list {args} {
proc ic_regression_test {action cfile \
proc ic_regression_test_rfint {rfint action cfile \
proc ic_regression_createinterface {} {
proc ic_regression_compareopts {match mesh compareopts} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/reports_funcs.tcl]]
proc ic_compare_mesh_report {model domain msh_version remote_host os} {
proc ic_reports_write_mesh_report_ {what file args} {
proc ic_reports_write_mesh_report {what file args} {
proc ic_reports_compare_mesh {stdmesh {curmesh ""}} {
proc ic_reports_write_assembly_report { infiles informat outfile outformat args } {
proc ic_compare_geom_report {model geom_file geo_version remote_host os} {
proc ic_compare_blk_report {model geom_file blk_file blk_version remote_host os} {
proc ic_compare_get_mesh_report {cur_msh_rpt std_msh_rpt remote_host {tol 0.7}} {
proc ic_compare_get_solver_input_file_report {cur_solver_input_file std_solver_input_file remote_host} {
proc ic_compare_get_geom_report {cur_geom_rpt std_geom_rpt remote_host {tol 1}} {
proc ic_compare_get_blk_report {cur_blk_rpt std_blk_rpt remote_host {tol 0.5}} {
proc ic_compare_get_solver_report {solver_input_file std_solver_input_file remote_host} {
proc ic_compare_get_fea_solver_report {solver_input_file std_solver_input_file remote_host os} {
 proc ic_get_c3d_report {model c3d_pref_file plat_name remote_host} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/rmi_funcs.tcl]]
proc ic_rmi_get_splines {fam_list} {
proc ic_rmi_save_map {name} {
proc ic_rmi_read_node_map {name save n_maps \
proc ic_rmi_merge_hex_quad_mesh {hex_file quad_file tol} {
proc ic_rmi_create_display_map {cut display clear} {
proc ic_rmi_add_type {type} {
proc ic_rmi_del_params {} {
proc ic_rmi_compute_mesh {file on app} {
proc ic_rmi_substitute_fam {file type app} {
proc ic_rmi_outp_star {file on out} {
proc ic_rmi_get_param_file {} {
proc ic_rmi_comp_max_lift {on fn factor max min nlayers} {
proc ic_rmi_chk_filename {one two three app} {
proc ic_rmi_nodes_storage_init {} {
proc ic_rmi_dynamic_motion {outp angle start end range1 range2 inc {fn ""} {subtr 0}} {
proc ic_rmi_partition_mesh {fn1 fn2} {
proc ic_rmi_separate_domain_comb_piston {conf} {
proc ic_rmi_triangulation_tol {tri} {
proc ic_rmi_adjust_comb_families {fn i_num e_num} {
proc ic_rmi_extrude_cylbottom {fn i_num e_num len nlayers} {
proc ic_rmi_geometry_preview {app start end inc} {
proc ic_rmi_mesh_preview {app start end inc} {
proc ic_rmi_compute_station_list {tol} {
proc ic_rmi_adddel_stations {on {del ""}} {
proc ic_rmi_get_station_list {on} {
proc ic_rmi_get_station_info {} {
proc ic_rmi_compute_stations {type sta} {
proc ic_rmi_set_station {type dca info layers in1 in2} {
proc ic_rmi_set_station_info {a0 a1 a2 a3 a4 a5 a6 b0 b1 b2 b3 b4 b5 b6 b7} {
proc ic_rmi_chk_station_exist {on sta} {
proc ic_rmi_answer_surf_family {found} {
proc ic_rmi_chad_batch {fn1 fn2} {
proc ic_rmi_check_base_station_exist {on} {
proc ic_rmi_check_ext_port_geom {one two} {
proc ic_rmi_chad_merge_base_mesh {} {
proc ic_rmi_chk_chad_comb_exist {on} {
proc ic_rmi_merge_station {on} {
proc ic_rmi_diag {args} {
proc ic_rmi_diag_func {args} {
proc ic_rmi_extrude {args} {
proc ic_rmi_set_params {what \
proc ic_rmi_ic3m_batch {args} {
proc ic_rmi_merge_fambocos {bocofiles merged_bocofile} {
proc ic_rmi_fam_delete_unused {{quiet 0}} {
proc ic_rmi_change_s0_fam { orig_file orig_bocofile new_file new_bocofile valve_no } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/rmi_subs.tcl]]
proc rmi_GetTriangulationTolerance {{tetin_file ""}} {
proc rmi_RenameStationFiles {old new} {
proc rmi_RemoveStationFiles {path} {
proc rmi_CheckSurfFamily {file name} {
proc rmi_CreateStationFiles {path} {
proc rmi_ic3m_quad {{Volume ""} {Surface ""} {Result ""}} {
proc rmi_chad_extrude_base_mesh { merge_file } {
proc rmi_switch_display_to_surf {} {
proc rmi_switch_display_all {} {
proc rmi_chad_set_node_map { node_map numlayers } {
proc rmi_create_display_map { make_cut loaded_display clear_map } {
proc rmi_merge_conn_families { name_conn_pref } {
proc rmi_merge_hex_quad { hex_file quad_file } {
proc rmi_separate_comb_piston { file_comb_piston file_comb file_piston save_csq change_fam } {
proc rmi_set_dynamic_files { what } {
proc rmi_set_node_map { name_node_map n_maps get_node get_node_number \
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/struct_funcs.tcl]]
proc ic_str_is_loaded {} {
proc ic_str_is_modified {} {
proc ic_str_set_modified {mod} {
proc ic_str_families_changed {} {
proc ic_str_ijk_limits {num} {
proc ic_str_domain_dimension {num} {
proc ic_str_domainfile_dimension {domain} {
proc ic_str_get_topo_info {what num full} {
proc ic_str_get_family {what num} {
proc ic_str_get_name {what num} {
proc ic_str_get_ijk {what num} {
proc ic_str_list_in_families {what fams} {
proc ic_str_count_in_families {fams} {
proc ic_str_adjacent_surfs {what num} {
proc ic_str_boundaries_of_entity {what num} {
proc ic_str_load {domain_prefix topofile famtopofile subfaceprojfile {suffices ""} \
proc ic_load_struct {domain_prefix topofile famtopofile {subfaceprojfile ""}} {
proc ic_str_readexternal {backend nfiles files {create 1} {prec 1} \
proc ic_str_settopo {merging {ask 1}} {
proc ic_str_set_basic_topo {} {
proc ic_str_summary {} {
proc ic_str_save {domain_dir topofile famtopofile subfaceprojfile {dompref domain.}} {
proc ic_save_domain_proj {proj_dir} {
proc ic_str_num_entities {type} {
proc ic_str_list_entities {type} {
proc ic_str_list_entities_visible {type vis} {
proc ic_str_list_families {} {
proc ic_str_clear_diagnostics {} {
proc ic_str_metric {type domains} {
proc ic_str_create_diagnostic_subset {{vis 1}} {
proc ic_str_configure_diagnostic_subset {args} {
proc ic_str_set_with_diagnostic {intervals domains} {
proc ic_str_histogram {min max nbars domains} {
proc ic_str_copy_domain {num} {
proc ic_str_move_domain {num args} {
proc ic_str_create_selection_subset {{vis 1} {nodes 0}} {
proc ic_str_clear_selection_subset {} {
proc ic_str_selection_numnodes {} {
proc ic_str_selection_get_bbox {} {
proc ic_str_domain_orient {num} {
proc ic_str_align_all_ijks {num stop_num} {
proc ic_str_update_surfs {} {
proc ic_str_domain_centroid {num} {
proc ic_str_merge_subfaces {num1 num2} {
proc ic_str_split_subface {num} {
proc ic_str_change_family {type nums fam} {
proc ic_str_families_color_changed {part color} {
proc ic_str_topo_make_surfs {stype force} {
proc ic_str_recompute_topo {{do_assign 1} {symfams ""} {callback struct_comptopo_callback}} {
proc ic_str_assign_subface_families {} {
proc ic_str_dump_topo_info {file} {
proc ic_str_configure {what nums shade type_color nodes ijk names numbers \
proc ic_str_configure_one_attribute {what num param value} {
proc ic_str_highlight {what nums on {color ""}} {
proc ic_str_unset_temp_highlight_array {} {
proc ic_str_set_nums_visible {type nvals} {
proc ic_str_set_type_family_visible {tvals fvals} {
proc ic_str_scanp_create {name color} {
proc ic_str_scanp_set {name dom ijk ind ext color} {
proc ic_str_scanp_move {name dir ext} {
proc ic_str_scanp_configure {name args} {
proc ic_str_scanp_delete {name} {
proc ic_str_scanp_list {} {
proc ic_str_scanp_exists {name} {
proc ic_str_pick_polygon {type poly how mode} {
proc ic_str_pick_single {type x y how} {
proc ic_str_add_pick_polygon {what poly vect partial} {
proc ic_str_add_pick_single {what pt vec} {
proc ic_str_pick_scan_plane_nodes {} {
proc ic_str_uniqify_selection {} {
proc ic_str_push_node_positions {} {
proc ic_str_clear_node_positions {} {
proc ic_str_pop_node_positions {} {
proc ic_str_drag_nodes {startpt pt vec do_proj allow_invert} {
proc ic_str_pick_remove_last {} {
proc ic_str_check_blockif_surf {type number} {
proc ic_str_list_blockif_subfaces {} {
proc ic_str_list_blockif_surfs {type} {
proc ic_str_list_boundary_subfaces {} {
proc ic_str_save_previous_nodes {} {
proc ic_str_glb_sm_init {} {
proc ic_str_post_diagnostic {type list show} {
proc ic_str_post_add_diagnostic {iv list} {
proc ic_str_create_zone {color shade} {
proc ic_str_delete_zone {im} {
proc ic_str_configure_zone {im param value} {
proc ic_str_clear_ijk_zone {im} {
proc ic_str_add_ijk_zone {im dom min max} {
proc ic_str_scanp_move_zone {type number what ext} {
proc ic_str_get_surf_zone {type number} {
proc ic_str_smooth_glsm {change project smooth_domain face_methods volume_methods \
proc ic_str_smooth_glsm_clear {} {
proc ic_str_get_num_nodes {what num} {
proc ic_str_get_bbox {what num} {
proc ic_str_move_nodes_exact {what num set_pos dox doy doz xv yv zv} {
proc ic_str_list_vertex_edges {numbers} {
proc ic_str_list_edge_vertices {numbers} {
proc ic_str_nspacking {dir nspack_domain base_subfaces_no \
proc ic_str_calc_load_balancing {np {ctype 0} {crit 2} {all_info 1} \
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/struct_subs.tcl]]
proc domain_load_struct {domain_prefix topofile famtopofile \
proc str_topo_surfs {str} {
proc list_families_for_type {str type} {
proc str_topo_make_surfs {str stype force} {
proc str_topo_make_one_surf {str stype num} {
proc str_topo_make_surf {stype num inf vis} {
proc str_recolor_objects {} {
proc str_topo_delete_surf {str surf} {
proc str_topo_clear_surfs {str} {
proc struct_summary {{str ""}} {
proc str_topo_visible_surfs {str} {
proc domain_copy {odom do_build} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/translation_funcs.tcl]]
proc ic_trans_ddn_tetin {ddn tetin} {
proc ic_trans_ug_tetin {prt tetin {mode ug_default} {usr_script ""} {usr_opts ""}} {
proc ic_trans_gems_tetin {prt {tetin ""} {tol 0.0001} {isRel 1}} {
proc ic_trans_tetin_ddn {tetin iparta {pname ""} {units -mm}} {
proc ic_trans_tetin_brepxml {tetin brepxmlfile {light_export ""}} {
proc ic_trans_iges_ddn {igesfile ddnpart ddnfile {dir_file default} {dir_file_user ""} {data_red 0} {listing_file ""} {run_icempt 0} {trans_dos 0}} {
proc ic_trans_iges_tetin {igesfile tetinfile {dir_file default} {dir_file_user ""} {data_red 0} {list_file ""} {run_icempt 0} {trans_dos 0}} {    
proc ic_trans_ddn_iges {ddn_file iges_name {listing_file ""} {dir_file ""}} {
proc ic_trans_ddn_tvda {infile outfile selected {tvda_dir ""} {tvda_list ""}} {    
proc ic_trans_tvda_ddn {infile outfile {tvda_dir ""} {tvda_list ""}} {
proc ic_trans_ddn_dxf {file outfile {dxf_list ""} {directive_file ""}} {
proc ic_trans_dxf_ddn {infile file {dxf_list ""} {directive_file ""}} {
proc ic_trans_idi_tetin {prt {tetin ""} {tol 0.0001} {isRel 1} {idi_options ""}} {
proc ic_trans_sw_tetin {infile {swVer ""}} {
proc ic_trans_proe_tetin_protcl {prt {tetin ""}} {
proc ic_trans_proe_tetin { {prtfile ""} {tetfileloc ""} {method "0"} } {
proc ic_trans_read_esf_file {prt {do_tri 0} {fam ""}} {
proc ic_trans_acis_tetin {acisfile outfile} {
proc ic_trans_dwg_tetin {dwgfile outfile} {
proc ic_trans_anf_tetin {anffile outfile} {
proc ic_trans_ideas_tetin {mdlfile tetinfile} {
proc ic_trans_ideas_tetin {mdlfile tetinfile} {
proc ic_trans_step_tetin {infile outfile {facet 0} {tolarg ""} {stepver 0} {args ""}} {
proc ic_trans_tetin_step {infile outfile {tolarg ""}} {
proc ic_trans_ps_tetin {infile outfile {units "meter"} } {
proc ic_trans_tetin_ps {infile outfile} {
proc ic_wb_set_default_properties {} {
proc ic_wb_set_parameters {{wb_import_geom ""} {wb_import_mesh ""} {wb_import_mat_points ""} {wb_NS_to_subset ""} \
proc ic_wb_brep_read {prt {make_absolute_paths 1} {merge 0} {mesh 0} {subset 0} {geom 1} \
proc ic_read_geometry {prt {merge 0} {subset 0}} {
proc ic_wb_brep_load {{load_file ""} {module_name ""} {doUpdate 0} {assemId 0xFFFFFFFF}} {
proc ic_wb_write_params_xml_file {file prt import_subset_2 tmp_mesh_file import_geom import_mesh import_solid import_surface \
proc ic_wb_import_part_mesh_params {{what ""}} {
proc ic_wb_brep_attach {{load_file ""}} {
proc ic_trans_cos_ccl {file} {
proc ic_wb_contains_blocking {file} {
proc ic_wb_import_blockings {file {metric "Default"}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/unstruct_funcs.tcl]]
proc ic_uns_is_loaded {} {
proc ic_uns_is_modified {} {
proc ic_uns_set_modified {mod} {
proc ic_uns_load {files {maxdim 3} {quiet 0} {reset_family_prefix ""} {check_orient 1}} {
proc ic_load_unstruct {files {maxdim 3}} {
proc ic_uns_load_one_domain {file {maxdim 3} {quiet 0} {reset_family_prefix ""} {check_orient 1}} {
proc ic_uns_readexternal {backend nfiles files {create 1} {prec 1} \
proc ic_uns_create_empty {} {
proc ic_save_unstruct {file {inc_subs 1} {resnames ""} {only_types ""} \
proc ic_uns_print_info {what {name ""} {opt 0} {subset_name1 "max_edge_sides"} {subset_name2 "min_edge_sides"}} {
proc ic_uns_get_immutable_elements {name} {
proc ic_uns_check_duplicate_numbers {{skip_0 1}} {
proc ic_uns_lookup_family_pid {fam} {
proc ic_uns_rename_family {old new} {
proc ic_uns_count_in_families {fams {total 0}} {
proc ic_uns_non_empty_families {{prefix ""}} {
proc ic_uns_count_family_neighbors {fams} {
proc ic_uns_family_has_quadratic {fam} {
proc ic_uns_family_has_type {fam type} {
proc ic_uns_family_match_type {fam type} {
proc ic_uns_subset_add_by_neighbors {fams to nsides} {
proc ic_uns_families_changed {} {
proc ic_uns_check_family {name} {
proc ic_uns_move_family_elements {old_fam_name new_fam_name {quiet 0}} {
proc ic_uns_new_family {name {vis 1}} {
proc ic_uns_new_family_replay_result {} {
proc ic_uns_delete_family {fams} {
proc ic_uns_list_types {} {
proc ic_uns_list_possible_types {} {
proc ic_uns_num_verts_in_type {type} {
proc ic_uns_dimension {} {
proc ic_uns_list_families {{with_dim ""}} {
proc ic_count_elements {{type MIXED}} {
proc ic_count_nodes {} {
proc ic_uns_num_couplings {} {
proc ic_uns_project_to_geometry {mapn type} {
proc ic_uns_create_element {type fam nodes make_consistent \
proc ic_uns_create_hexa_from_faces { name faces { inherit_part 1 } { part "" }} {
proc ic_uns_create_node_element_near_point {pname fam} {
proc ic_uns_change_family {name fam} {
proc ic_uns_set_part {name newpart} {
proc ic_uns_set_projected_family {mapname} {
proc ic_uns_change_family_if_project {mapname ofam nfam geotype geoname} {
proc ic_uns_get_attached_elements {geotype geoname {mapname ""}} {
proc ic_uns_list_material_numbers {} {
proc ic_uns_list_material_families {} {
proc ic_uns_split_elements {name} {
proc ic_uns_split_spanning_edges {name { args "" } } {
proc ic_uns_split_edges {name {propagate 0} {project 1} {check 0}} {
proc ic_uns_swap_edges {name try_harder} {
proc ic_uns_swap_edges_node_numbers {node_numbers try_harder} {
proc ic_uns_swap_edges_auto {name minasp numiter {maxdev "-1.0"}} {
proc ic_uns_change_type {name from to {proj 0} { cons 0 } {normal 0}} {
proc ic_uns_change_shell_solid {name thickness adjust hext} {
proc ic_uns_change_type_by_quality {fams from to metric {quality_limit 0.2}} {
proc ic_smooth_elements {args} {
proc ic_uns_smooth_by_quality {fams types metric {quality_limit 0.5} {additional_args ""}} {
proc ic_delete_elements {args} {
proc ic_move_nodes {args} {
proc ic_uns_project_nodes_to_line {pt1 pt2 unset_dim name} {
proc ic_uns_project_nodes_to_plane {pt norm name} {
proc ic_change_family_elements {args} {
proc ic_change_linear_quadratic {args} {
proc ic_change_quadratic_linear {name refine {keep_interf 0}} {
proc ic_uns_refine_by_midside_nodes {args} {
proc ic_change_tri_quad {args} {
proc ic_extrude {args} {
proc unstruct_extrude_eval {expr layer} {
proc ic_uncouple_main {args} {
proc ic_test_mesh {{id ""} {min 0} {tol 0} {db -1}} {
proc ic_test_mesh_quality {{min 0} {tol 0} {db -1}} {
proc ic_test_premesh {{id "n_hexa-n_quad-0-0-n_bar-n_coupling-n_vertex-quality"} \
proc ic_test_premesh_quality {{min 0} {tol 0} {fam ""} \
proc ic_uns_length {{name "visible"}} {
proc ic_uns_area {{name "visible"}} {
proc ic_uns_volume {{name "visible"}} {
proc ic_worst_angle {} {
proc ic_merge_meshes {merge_fams fixed_fams { remove_interface 0 } } {
proc ic_struct_to_unstruct {which dims all_elems} {
proc ic_uns_move_mesh {origin axis trans theta mm_cmd surfs fsurfs vols} {
proc ic_yplus {ypsurfs fsurfs fluids movemesh_cmd yplus \
proc ic_cache_nodepos {} {
proc ic_free_nodecache {} {
proc ic_uns_uncouple {which {proj 0} {three 0} {db 0}} {
proc ic_uns_redistribute_prism_edge { height {fix_height 1} {ratio 0.0} {local 0} {end_aspect 0.3} \
proc ic_uns_split_prisms {which layers ratio { layer_number "" } \
proc ic_uns_dissolve_prisms {which height_ratio prism_qual triangle_qual \
proc ic_uns_convert_to_hexas {{min_aspect 1} {volfams ""} {use_active_lcs 0}} {
proc ic_uns_convert_to_hexas_in_batch {infile outfile {min_aspect 1} {volfams ""} {use_active_lcs 0}} {
proc ic_uns_coupling {what args} {
proc ic_uns_thickness {what {name all} {val 0} {strict 1} {from_solid 0} {surfs ""}} {
proc ic_uns_thickness_at_node {name val} {
proc ic_uns_bar_orientation {what {name all} {x1 0} {x2 0} {x3 0} {wa1 0} {wa2 0} {wa3 0} {wb1 0} {wb2 0} {wb3 0}} {
proc ic_uns_list_strings {} {
proc ic_uns_set_string {name val} {
proc ic_uns_split_double_wall {which} {
proc ic_uns_split_internal_faces {which fam {new_fam_suffix ""} {splitfam 0} {volfam ""}} {
proc ic_uns_make_consistent {which { count_open "" } { flood_fill 1 } } {
proc ic_uns_check_edges {which} {
proc ic_uns_split_pyras {which} {
proc ic_uns_check_orientation {{which All} {err_name ""} {do_fix 0} {quiet 0}} {
proc ic_uns_orient { dir } {
proc ic_uns_reorient {name how args} {
proc ic_uns_reorder {name how args} {
proc ic_uns_max_vertex_degree {which} {
proc ic_uns_coarsen {which aspect fixfams tol n_iter surface \
proc ic_uns_coarsen_quad { {name visible} {dev 0.1} {edge_len -1} {steps 1} } {
proc ic_uns_merge_nodes {name tol { pos "0 0 0" } { norm "0 0 0" } \
proc ic_uns_merge_nodes_old {name tol} {
proc ic_uns_merge_node_numbers {nums tol { pos "0 0 0" } { norm "0 0 0" } \
proc ic_uns_min_tri_size {name} {
proc ic_uns_min_quad_size {name} {
proc ic_uns_move_nodes_exact {name set pos dir { csys_name "" }} {
proc ic_uns_delete_nodes {name {fix_uncovered 1}} {
proc ic_uns_refine_surface {name dev steps proj {tri_only 0} {edge -1} \
proc ic_uns_insert_tetra {{name all} {mid 0}} {
proc ic_uns_delete_contents {name} {
proc ic_uns_set_node_dimension {name how {add_bars 0} {fam_active ""} {proj_mth 0} {normal_flag 0} {dir_vec ""}} {
proc ic_uns_get_node_positions {name} {
proc ic_uns_set_node_positions {name pos_list} {
proc ic_uns_get_element_vertex_positions {name allow_dups} {
proc ic_uns_add_adjacent_tetras {dest src} {
proc ic_uns_add_near_node {dest src} {
proc ic_uns_update_family_type {name {fams __all__} {types __all__} {what update} {force 1}} {
proc ic_uns_split_node_non_man {sel_map move_map} {
proc ic_uns_fix_non_man {name} {
proc ic_uns_fix_missing_internal {name fam proj} {
proc ic_uns_fix_uncovered_faces {name fam {quiet 0}} {
proc ic_uns_fix_triangle_boxes {name fam} {
proc ic_uns_fix_volume_orientation {name} {    
proc ic_uns_fix_subset_by_remeshing {mapname} {    
proc ic_uns_scan_plane {mapname what args} {
proc ic_uns_duplicate_elements {src dest} {
proc ic_uns_move_elements {name args} {
proc ic_uns_subset_create {{name ""} {vis 0} {copy_from ""} {pid_colors 1} \
proc ic_uns_subset_create_family_type {fams types {empty_ok 0} {make_visible 1} {make_explicit 0}} {
proc ic_uns_subset_exists { name } {
proc ic_uns_subset_rename {old new} {
proc ic_uns_subset_unused_name {{pref ""}} {
proc ic_uns_subset_color {name color} {
proc ic_uns_subset_copy {dest src {etype ""}} {
proc ic_uns_subset_copy_verts {dest src} {
proc ic_uns_subset_copy_if_not_explicit {name} {
proc ic_uns_invert_subset {name {refmap all}} {
proc ic_uns_subset_into_connected_regions {which} {
proc ic_uns_subset_into_connected_regions2 {which how} {
proc ic_uns_subset_surface_boundary {sname} {
proc ic_uns_subset_get_vertices_on_curves { curve_names } {
proc ic_uns_subset_get_current {} {
proc ic_uns_subset_set_current {name} {
proc ic_uns_subset_delete {name} {
proc ic_uns_subset_configure {name args} {
proc ic_uns_subset_configure_replay_result {} {
proc ic_uns_subset_configure_toggle {name args} {
proc ic_uns_subset_configure_get {name param} {
proc ic_uns_subset_visible {name vis} {
proc ic_uns_subset_list_visible {{except ""}} {
proc ic_uns_subset_is_cut { name } {
proc ic_uns_subset_count_elements {name {type MIXED}} {
proc ic_uns_subset_count_nodes {name} {
proc ic_uns_subset_average_edge_length {name} {
proc ic_uns_subset_average_surface_deviation {name} {
proc ic_uns_subset_list_families {name} {
proc ic_uns_subset_list_volume_families {name} {
proc ic_uns_subset_families_used {name parts} {
proc ic_uns_subset_copy_only_families {from fam ispart} {
proc ic_uns_subset_list_elements {name} {
proc ic_uns_subset_nodes_are_periodic {name} {
proc ic_uns_subset_list_types {name} {
proc ic_uns_subset_list {{only_user 0}} {
proc ic_uns_map_list {only_vis {pat *}} {
proc ic_uns_subset_clear {name} {
proc ic_uns_subset_add_from {dest src} {
proc ic_uns_subset_subtract_from {dest src} {
proc ic_uns_subset_add_number {name nums rel type} {
proc ic_uns_subset_add_node_numbers {name nums {extern 0}} {
proc ic_uns_subset_list_node_numbers {name {extern 0}} {
proc ic_uns_subset_add_region {name p1 p2 partly {dims {0 1 2 3}}} {
proc ic_uns_subset_add_near_pos {name pos {dims {0 1 2 3}} {max_dim ""}} {
proc ic_uns_subset_add_near_nodes {name nodes {ext 0}} {
proc ic_uns_subset_add_layer {name nlayers fams types} {
proc ic_uns_subset_remove_layer {name nlayers types} {
proc ic_uns_subset_add_attached {name src how {angle 0}} {
proc ic_uns_subset_get_elements_attached_to_subset { src_map {des_families ""} {des_types ""} } {
proc ic_uns_subset_remove_normal {name norm} {
proc ic_uns_subset_remove_manifold_elements {name} {
proc ic_uns_subset_get_cutspeed {name} {
proc ic_uns_subset_cut {name what {on 0} {whole 1} {pt "0 0 0"} {norm "1 0 0"} {in_scan 0}} {
proc ic_uns_subset_bbox {name {no_cut 0}} {
proc ic_uns_subset_normal {name} {
proc ic_uns_subset_is_editable {name} {
proc ic_uns_subset_info {name} {
proc ic_uns_subset_metric {{parts ""} {types ""} {crit Quality} {verbose 1}} {
proc ic_uns_min_metric {{crit Quality} {parts ""} {types ""}} {
proc ic_uns_subset_types_metric {{crit Quality} {verbose 0} {dim ""}} {
proc ic_uns_create_selection_subset {color_first_different {color ""}} {
proc ic_uns_create_selection_edgelist {on} {
proc ic_uns_subset_add_pick_polygon {what name poly vect from_names \
proc ic_uns_subset_add_pick_circle {what name vect cent radp from_names \
proc ic_uns_subset_add_pick_single {what name pt vec from_names} {
proc ic_uns_subset_add_flood {what name from} {
proc ic_uns_subset_add_remove_last {name} {
proc ic_uns_create_vertex {name pt dim} {
proc ic_uns_subset_make_all {name} {
proc ic_uns_subset_make_families {name fams} {
proc ic_uns_subset_add_families_and_types {name fams types} {
proc ic_unstruct_make_families_exist {fams} {
proc ic_uns_uniqify {name} {
proc ic_uns_node_position_stack {name what} {
proc ic_uns_node_position_drag {name startpt pt vec spl curvis allow_invert \
proc ic_uns_bandwidth {name iters type} {
proc ic_uns_renumber_nodes {which start {skip_0 0} {dir "0 0 0"}} {
proc ic_uns_renumber_elements {which start {skip_0 0} {dir "0 0 0"}} {
proc ic_uns_renumber_all_nodes {start {skip_0 0}} {
proc ic_uns_renumber_all_elements {start {skip_0 0}} {
proc ic_uns_subset_elements_range {name} {
proc ic_uns_subset_move_part_elements {name oldpart newpart} {
proc ic_uns_create_diagnostic_subset {{vis 1}} {
proc ic_uns_create_diagnostic_edgelist {on} {
proc ic_uns_convert_edgelist_to_bars {name family} {
proc ic_uns_diagnostic {args} {
proc ic_uns_get_diagnotic_info {diagnostic param} {
proc ic_uns_metric {{name all} {type Quality} {args ""}} {
proc ic_uns_n_els_in_metric_range {fams types diag from to} {
proc ic_uns_subset_n_els_in_metric_range {map diag from to} {
proc ic_uns_set_metric_weight {metric eltype args} {
proc ic_uns_set_metric_weights {list {reset 1}} {
proc ic_uns_get_metric_names {} {
proc ic_uns_get_metric_weights {metric} {
proc ic_uns_print_diagnostic_quality_key {metric_name} {
proc ic_uns_diagnostic_keys {} {
proc ic_uns_histogram {name min max nbars} {
proc ic_uns_set_with_diagnostic {name from intervals} {
proc ic_uns_diagnostics_update {} {
proc ic_clear_diag_display {} {
proc ic_uns_mesh_distribution {p1 p2 {what 0}} {
proc ic_uns_show_selected {type names on {color ""} {force_all_types 0}} {
proc ic_uns_reset_selected {} {
proc ic_uns_make_periodic {name} {
proc ic_uns_make_periodic_from_element_pair {e1 e2} {
proc ic_uns_make_auto_periodic {src dest} {
proc ic_uns_remove_periodic {name} {
proc ic_flood_fill { { args "" } {keep_orfn 0}} {
proc ic_flood_fill_mesh {{keep_orfn 0} {only_mat 0}} {
proc ic_auto_orphan { } {
proc ic_uns_quad_remesh {map args} {
proc ic_uns_force_node_loc {subset_name location {method "move"}} {
proc ic_get_disconnected_vertices {} {
proc ic_delete_disconnected_vertices {{quiet 0}} {
proc ic_uns_build_mesh_topo {which args} {
proc ic_uns_offset {distance} {
proc ic_uns_offset_mesh {args} {
proc ic_uns_internal_wall_elements_get {} {
proc ic_uns_internal_wall_families_get {} {
proc ic_uns_internal_wall_families_reorient {fams} {
proc ic_uns_create_staircase_envelope {{fam ""}} {
proc ic_uns_smooth_staircase_envelope {lamda mu relax_factor niter type} {
proc ic_uns_ysplit_hexas_at_vertex {name} {
proc ic_uns_split_hexa_into_prisms_propagete {name} {
proc ic_uns_spectral_elements {name file order law} {
proc ic_uns_list_edgelist_vertices {edgelist} {
proc ic_validate_families {} {
proc ic_uns_load_temporary {file {params "-color white"}} {
proc ic_uns_unload_temporary {name} {
proc ic_uns_get_thickness {name} {
proc ic_uns_contact_sets {dist {contactpartlist ""} {debug 0}} {
proc ic_uns_immutable {name what} {
proc ic_uns_isimmutable {name} {
proc ic_unstruct_grad_smooth {iter_sf iter_vl alpha_sf alpha_vl \
proc ic_unstruct_elliptical_smooth {iter_sf iter_vl gexpr_sf gexpr_vl \
proc ic_uns_thickness_exists_mesh {} {
proc ic_uns_get_thickness_node {name} {
proc ic_uns_surface_volume {name} {
proc ic_uns_bcfield_define {name def} {
proc ic_uns_bcfield_exists {name} {
proc ic_uns_bcfield_list {} {
proc ic_uns_bcfield_get {name mapn def_ok} {
proc ic_uns_bcfield_default {name {val ""}} {
proc ic_uns_bcfield_set {name mapn val} {
proc ic_uns_bcfield_rename {name newname} {
proc ic_uns_subset_update_bcfield_color_map {bcfield subset} {
proc ic_uns_set_part_bar_orientations {parts args} {
proc ic_uns_enforce_bar_direction {name} {
proc ic_uns_associate_geometry {} {
proc ic_uns_update_paramesh {{delta_move ""}} {
proc ic_uns_split_edges_propagate {which {par 0.5}} {
proc ic_uns_split {p0 p1 {args .5}} {
proc ic_uns_splitoutline {p0 p1 {args .5}} {
proc ic_uns_convert_tet2_hexcore {{fams ""} {fill_holes 0} {refinement 1} {bbox ""} {csys global} {conformal 0} {use_tg_tri2tet 0}} {
proc ic_uns_write_node_list {map file {scale 1}} {
proc ic_uns_write_elem_list {map file} {
proc ic_uns_import_bcfield {name file on_nodes colnum defval} {
proc ic_uns_export_bcfield {name file on_nodes} {
proc ic_list_volume_families {} {
proc ic_uns_count_nodes_in_families {fams} {
proc ic_uns_mark_enclosed_elements {name surfs matlpnts {only_vol 0}} {
proc ic_uns_mesh_to_bars { name { all_elem 1} { inherit_part 1 } { part "" }} {
proc ic_uns_bounding_box {} {
proc ic_uns_count_elements_in_family {fams} {
proc ic_uns_diag_set_degen_min {diag_name minv} {
proc ic_uns_diag_set_degen_max {diag_name maxv} {
proc ic_uns_diag_reset_degen_min_max {} {
proc ic_uns_move_lcs_lcs {from to name} {
proc ic_uns_print_node_locs { out_file } {
proc ic_uns_subset_list_element_numbers {name {extern 0} {out_file ""}} {
proc ic_uns_subset_from_part {parts {verts 0}} {
proc ic_uns_get_periodic_parts {} {
proc ic_uns_count_periodic_nodes {name} {
proc ic_uns_import_modeler_mesh {file} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/unstruct_subs.tcl]]
proc layer_fam_list {how} {
proc layer_type_list {how} {
proc ic_smooth_decide_post_smoother {} {
proc domain_after_load_mesh {{quiet 0} {check_orientation 1}} {
proc print_orientation_messages {res} {
proc unstruct_summary {{uns ""} {maxfams 0} {calc_min_max 0} {subset_name1 "max_edge_sides"} {subset_name2 "min_edge_sides"}} {
proc make_standard_maps { uns } {
proc make_new_uns_mesh {dfile} {
proc uns_mesh_attach_family_boco {on} {
proc domain_save_unstruct {mesh dfile {typevar ""} {famvar ""}
proc setup_pid_colors {map} {
proc start_new_elems {{no_sw_tdv_active 0}} {
proc finish_new_elems {} {
proc big_uns_op {do_save cmd {reset_verts 0} {no_sw_tdv_active 0}} {
proc ensure_unstruct_mesh_exists {} {
proc uns_subset_maps {mesh} {
proc domain_list_all_selections {} {
proc uns_get_subset {name} {
proc uns_all_subsets {} {
proc ic_uns_sub_custom_metric_keys {} {
proc ic_uns_sub_get_diagnotic_info {diagnostic param} {
proc ic_uns_sub_set_diagnotic_info {diagnostic param val} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/utility_funcs.tcl]]
proc ic_mess {args} {
proc ic_mess_skipped {args} {
proc status_message {args} {
proc ic_print_error_log {res} {
proc ic_write_file {name text} {
proc ic_quit {} {
proc ic_dialog {args} {
proc ic_question {args} {
proc ic_confirm {mess} {
proc ic_yes_or_no {mess} {
proc ic_multiple_choice {mess args} {
proc ic_multiple_choice_default {default mess args} {
proc ic_pause {ms} {
proc ic_batch_mode {} {
proc ic_run_application_command {dir progdir progname arguments} {
proc ic_run_application_batch {dir progdir progname envname arguments \
proc ic_run_application_exec {dir progdir progname arguments } {
proc ic_exec {args} {
proc ic_run_application_direct {dir progdir progname envname arguments} {
proc ic_unique_id { } {
proc ic_open { filename read_write fp_ext } {
proc ic_puts { fp_ext string } {
proc ic_close { fp_ext } {
proc ic_rm { args } {
proc ic_rm_r { file } {
proc ic_mv { from to } {
proc ic_gzip { args } {
proc ic_rename { old new } {
proc ic_cp { old new } {
proc ic_cp_r { old new } {
proc ic_mkdir { dir } {
proc ic_remove_duplicate {names} {
proc undo_debug {s} {
proc ic_undo {} {
proc ic_redo {} {
proc ic_undo_group_begin { {text "undo_group"} } {
proc ic_undo_group_end { {text "undo_group"} } {
proc ic_undo_suspend {} {
proc ic_undo_suspended {} {
proc ic_undo_resume {} {
proc ic_undo_enable_largeop {val} {
proc ic_undo_logging {on} {
proc ic_undo_start {} {
proc ic_undo_stop {} {
proc ic_undo_clear {} {
proc ic_save_model_for_undo {} {
proc ic_archive_dir {dir archive} {
proc ic_unarchive_file {file dest} {
proc ic_stopwatch_start {} {
proc ic_stopwatch_get_elapsed {{stop_the_watch 0}} {
proc ic_stopwatch_end {} {
proc ic_list_uniquify {list} {
proc ic_plural {number} {
proc ic_list_remove_duplicated {list} {
proc ic_list_get_duplicated {list} {
proc ic_list_remove_from_grouped {groups orig} {
proc ic_list_median {list} {
proc ic_trap_fpe {} {
proc ic_chdir {dir} {
proc ic_check_licensing_aienv {} {
proc ic_reinit_geom_objects {{all ""}} {
proc ic_get_compile_date {} {
proc ic_get_tglib_info {} {
proc ic_has_apip {} {
proc ic_is_debug {} {
proc ic_aienv_license_exit {} {
proc ic_include_file {file} {
proc ic_error {} { error "got it" }
proc ic_diagnostic_info {{ordered 1}} {
proc ic_win_shortname {pathname} {
proc ic_set_icemcfd_idle {} {
proc ic_tb_dir {} {
proc ic_version {{dot 1}} {
proc ic_get_icemcfd_license_used {} {
proc ic_current_tetin_version {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_batch/wb_funcs.tcl]]
proc ic_wb2 {{file ""}} {
proc ic_wb2_set_import_file_options {file} {
proc ic_wb2_import_parameters {file} {
proc ic_wb2_set_cad_associativity_properties {ext file} {
proc ic_wb2_refresh {{file ""}} {
proc ic_wb2_update_file_names {} {
proc ic_wb2_set_default_properties {} {
proc ic_wb2_update_properties {args} {
proc ic_wb2_get_property {n} {
proc ic_wb2_update_global_properties {args} {
proc ic_wb2_sort_global_properties {params} {
proc ic_wb2_update_while_input_parameter_mode {} {
proc ic_wb2_cur_dir {dir} {
proc ic_wb2_duplicate {file} {
proc ic_wb2_import {path} {
proc ic_wb2_execute {args} {
proc ic_wb2_update {{file ""} {solver ""}} {
proc ic_wb2_cleanup {} {
proc ic_wb2_backup_files {} {
proc ic_wb2_update_upstream_data_filename {{file ""}} {
proc ic_wb2_send_wb_status {status} {
proc ic_wb2_get_wb_status {status} {
proc ic_wb2_run_solution {which} {
proc ic_wb2_detect_dimension {{change 0}} {
proc ic_wb2_create_uns_subset {} {
proc ic_wb2_run_mesher {which} {
proc ic_wb2_run_tetra {} {
proc ic_wb2_run_hexa {} {
proc ic_wb2_run_prism {} {
proc ic_wb2_set_parameter {type param value {invoke 0}} {
proc ic_wb2_set_icemcfd_parameter {param value} {
proc ic_wb2_is_input_meshing_param_set {param {type ""} {obj ""}} {
proc ic_wb2_is_input_editmesh_param_set {param} {
proc ic_wb2_is_input_blocking_param_set {param {edge ""}} {
proc ic_wb2_is_input_part_param_set {param part} {
proc ic_wb2_get_input_prism_part_value {param part} {
proc ic_wb2_set_upstream_data_status {status} {
proc ic_wb2_set_update_data_status {status} {
proc ic_wb2_get_upstream_data_status {} {
proc ic_wb2_set_solver_status {{status ""}} {
proc ic_wb2_get_parameter {type param} {
proc ic_wb2_delete_parameter {param {invoke 0}} {
proc ic_wb2_delete_all_parameters {} {
proc ic_wb2_update_parameters {{types "input output"} {invoke 0} {skip_blocking 0}} {
proc ic_wb2_update_blocking_input_parameter {} {
proc ic_wb2_delete_parameters_by_pattern {type pattern} {
proc ic_wb2_get_parameters {type} {
proc ic_wb2_get_parameters_by_pattern {type pattern} {
proc ic_wb2_is_input_parameter {param} {
proc ic_wb2_is_input_blocking_parameter {param} {
proc ic_wb2_is_output_parameter {param} {
proc ic_wb2_exists_blocking_input_parameter {} {
proc ic_wb2_exists_prism_input_parameter {} {
proc ic_wb2_exists_output_parameter {} {
proc ic_wb2_exists_user_defined_parameter {} {
proc ic_wb2_exists_blocking_replay_parameter {} {
proc ic_wb2_exit_icemcfd {{exit 0} {wb 0}} {
proc ic_wb2_get_return_status {} {
proc ic_wb2_is_upstream_data_updated {} {
proc ic_wb2_is_mesh_data_updated {} {
proc ic_wb2_input_parameter_mode {} {
proc ic_wb2_skip_saving {} {
proc ic_wb2_skip_loading {} {
proc ic_wb2_message {mess {color brown}} {
proc ic_wb2_init_files_done {} {
proc ic_wb2_get_icemcfd_state {} {
proc ic_wb2_is_running {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/applications_med.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/cad_trans_med.tcl]]
proc do_map_tetin_sizes {} {
proc ddn_trans_iges_imp {} {
proc old__ddn_trans_iges_imp_doit {} {
proc ddn_trans_iges_exp {} {
proc ddn_trans_iges_exp_doit {} {
proc trans_ddn_tvda {} {
proc trans_tvda_ddn {} {
proc trans_ddn_dxf {} {
proc trans_dxf_ddn {} {
proc trans_prebfc_ddn {} {
proc ddn_app_before_prebfc { parts partname } {
proc ddn_app_after_prebfc { parts partname } {
proc trans_iges_tetin {} {
proc trans_iges_tetin_doit {} {
proc trans_ddn_tetin {} {
proc trans_ug_tetin {} {
proc trans_gems_tetin {} {
proc trans_gems_tetin_doit {} {
proc trans_tetin_iges {} {
proc old_trans_tetin_iges {} {
proc trans_tetin_ddn {} {
proc trans_tetin_brepxml {} {
proc get_catia4_filter_list {} {
proc set_catiamif_defaults {} {
proc trans_catia_tetin {} {
proc trans_catia_tetin_doit {} {
proc trans_cadds_tetin {} {
proc trans_ideas_tetin {} {
proc trans_idi_tetin {} {
proc trans_idi_tetin_doit {} {
proc trans_proe_tetin {} {
proc trans_proe_tetin_action {} {
proc trans_proe_tetin_doit {} {
proc trans_sw_tetin {} {
proc trans_acis_tetin {} {
proc trans_ps_tetin {} {
proc trans_tetin_ps {} {
proc trans_autocad_tetin {} {
proc trans_step_tetin {} {
proc trans_step_tetin_doit {} {
proc trans_esf_tetin {} {
proc trans_input_tetin {} {
proc trans_bgplus_tetin {} {
proc trans_bgplus_tetin_doit {} {
proc trans_3dm_tetin {} {
proc trans_3dm_tetin_doit {} {
proc trans_tetin_3dm {} {
proc trans_tetin_3dm_doit {} {
proc trans_cos_ccl {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/cart3d.tcl]]
proc cart3d_start {} {
proc cart3d_end {} {
proc cart3d_change_projdir {{name ""} {element ""} {op ""}} {
proc cart3d_convert_c3dtri2df {} {
proc cart3d_convert_df2c3dtri {} {
proc cart3d_triq2df {} {
proc cart3d_convert_stars_result2df {} {
proc cart3d_convert_c3dvis {} {
proc cart3d_reorder_multigrid {} {
proc flowCart_edit_params {} {
proc flowCart_run_solver {} {
proc cart3d_solver_start {{run_input 1}} {
proc cart3d_solver_apply {} {
proc cart3d_solver_stop {} {
proc cart3d_run_flowCart_cmd {} {
proc cart3d_trials_validate { } {
proc cart3d_trials_read_trial_data {} {
proc cart3d_trials_load_trial_data {} {
proc cart3d_trials_write_trial_data {} {
proc cart3d_trials_load_trial_data {} {
proc cart3d_trials_write_trial_data {} {
proc cart3d_trials_run {} {
proc cart3d_trials_recompute {} {
proc cart3d_trials_create_surface {} {
proc cart3d_trials_clear {} {
proc cart3d_trials_draw {} {
proc cart3d_trials_display {} {
proc cart3d_trials_update_listbox {} {
proc cart3d_trials_get_lists {} {
proc cart3d_trials_ntrials {} {
proc cart3d_trials_update_vals { {type ""} } {
proc cart3d_trials_apply {} {
proc cart3d_trials {} {
proc cart3d_trials_transform_comps_reset {} {
proc cart3d_trials_transform_comps_apply {} {
proc cart3d_trials_transform_comps {} {
proc cart3d_clic {} {
proc flowCart_update_family_info {result_file} {
proc flowCart_clic_apply {{run_clic 1}} {
proc read_clic_cntl_file {clic_cntl_file} {
proc write_clic_cntl_file {clic_file} {
proc clic_family_params { } {
proc clic_family_params_apply {} {
proc clic_family_params_cancel {} {
proc clic_surface_params { } {
proc clic_surface_params_apply {} {
proc clic_surface_params_cancel {} {
proc clic_all_params {} {
proc clic_all_params_apply {} {
proc clic_all_params_cancel {} {
proc clic_get_refparams {} {
proc clic_cp_distribution { } {
proc clic_cp_clear {} {
proc clic_cp_use_cuts {} {
proc set_clic_cpdists {p} {
proc clic_cp_distribution_apply {} {
proc clic_cp_distribution_cancel {} {
proc cart3d_sixdof {} {
proc sixdof_update_file_info {tri_file} {
proc select_sixdof_moving_comps {} {
proc set_sixdof_moving_comps {} {
proc sixdof_write_moving_data {} {
proc sixdof_read_moving_data {} {
proc sixdof_moving_comps_apply {} {
proc sixdof_moving_comps_cancel {} {
proc set_sixdof_efm { } {
proc set_sixdof_efm_comps {p} {
proc sixdof_efm_clear {} {
proc sixdof_efm_apply {} {
proc sixdof_efm_cancel {} {
proc set_sixdof_bfm { } {
proc set_sixdof_bfm_comps {p} {
proc sixdof_bfm_clear {} {
proc sixdof_bfm_apply {} {
proc sixdof_bfm_cancel {} {
proc flowCart_sixdof_apply {} {
proc write_sixdof_cntlfile {} {
proc write_sixdof_logfile {} {
proc write_sixdof_efmfile {} {
proc write_sixdof_bfmfile {} {
proc cart3d_config_matrix {} {
proc cart3d_intersect_comps {} {
proc cart3d_mesher_start {} {
proc mesher_cart3d_default_box {{name ""} {element ""} {op ""}} {
proc mesher_cart3d_advanced {name element op} {
proc mesher_cart3d_default_inputs {{run_intersect 1}} {
proc mesher_cart3d_apply {} {
proc mesher_cart3d_reset {} {
proc mesher_cart3d_done {} {
proc cart3d_start_visual3p {} {
proc cart3d_update_family_info {{reset 0} {domfile ""}} {
proc cart3d_family_refparams {} {
proc cart3d_family_refparams_apply {} {
proc cart3d_family_refparams_cancel {} {
proc cart3d_all_refparams {} {
proc cart3d_all_refparams_apply {} {
proc cart3d_all_refparams_cancel {} {
proc cart3d_get_refparams {} {
proc cart3d_save_guistate {} {
proc cart3d_restore_guistate {} {
proc cart3d_solver_monitor {} {
proc uns_mon_close_fps {} {
proc uns_monitor_create {{title ""}} {
proc uns_monitor_create_resmon {w ylabels title read_all \
proc uns_mon_done {{force 0}} {
proc uns_mon_inputproc {} {
proc uns_mon_inputproc_all {} {
proc uns_mon_handle_line {line dat} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/cartfile_med.tcl]]
proc cartfile_edit {} {
proc cartfile_initialize {{bbox ""}} {
proc cartfile_reset {} {
proc cartfile_load {{file ""}} {
proc cartfile_save {{file ""}} {
proc cartfile_unload {{ask 1}} {
proc cartfile_is_ok {file} {
proc cartfile_display {{on ""}} {
proc cartfile_add_stations {} {
proc cartfile_del_stations {} {
proc cartfile_edit_stations {} {
proc cartfile_edit_stations_apply {} {
proc cartfile_edit_ranges {} {
proc cartfile_edit_ranges_apply {res} {
proc cartfile_update_defs {w num name nval} {
proc cartfile_update_type {} {
proc cartfile_edit_cylparams {} {
proc cartfile_edit_cylparams_apply {} {
proc cartfile_merge {} {
proc cartfile_merge_done {} {
proc cartfile_merge_start {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/commands_med.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/convex_hull.tcl]]
proc geo_convex_hull {} {
proc geo_convex_hull_doit {orig_surfs} {
proc geo_split_by_regions {surfs planes} {
proc geo_split_make_grid {surfs dtype xd yd zd} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/csystem_med.tcl]]
proc list_coordinate_systems {} {
proc get_coordinate_system {name} {
proc set_coordinate_system {name} {
proc csystem_select_point {how var basevar} {    
proc delete_coordinate_system {name} {
proc create_coordinate_system {type name center axis0 axis1 axis2} {
proc axes_update_command {args} {
proc famboco_after_load_param_callback {} {
proc famboco_before_save_param_callback {} {
proc famboco_list_csystems {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/ddn_med.tcl]]
proc ddn_tetin_to_iparta {} {
proc ddn_copymove_part {copy} {
proc ddn_copy_part {} {
proc ddn_rename_part {} {
proc ddn_delete_part {} {
proc ddn_delete_part_int {dir name} {
proc ddn_get_partfile {dir name} {
proc ddn_select_part {which exists} {
proc ddn_run {what {partname ""} {dir ""} {extra_cmds ""} {batchddn 0} {do_after 1}} {
proc ddn_options {{tt ""} {hd 1}} {
proc ddn_pick_part {dir islocal exists} {
proc ddn_list_parts {dir update} {
proc ddn_partname {pn} {
proc ddn_select_part_full {which exists} {
proc ddn_select_part_full_set {d which name} {
proc ddn_app_before_mif {parts partname} {
proc ddn_app_after_mif {parts partname} {
proc ddn_run_mulcad {} {
proc ddn_app_before_mulcad {parts partname} {
proc ddn_app_after_mulcad {parts partname} {
proc mulcad_cleanup {} {
proc ddn_app_before_comak {parts partname} {
proc ddn_app_after_comak {parts partname} {
proc ddn_app_before_frontal {parts partname} {
proc ddn_app_after_frontal {parts partname} {
proc ddn_app_before_input {parts partname} {
proc ddn_app_after_input {parts partname} {
proc update_partlist {which callup} {
proc nice_partname {} {
proc partfile_is_binary {name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/diag_med.tcl]]
proc unstruct_diag {} {
proc unstruct_diag_something_changed {} {
proc unstruct_clear_diag {} {
proc unstruct_do_diag {} {
proc unstruct_do_histo {{title ""} {nbars ""} {min ""} {max ""}
proc unstruct_plot_histo {w intervals args solid} {
proc unstruct_select_histo {add} {
proc diag_replace_triangles_with_tetra {map {skip 0}} {
proc diag_fix_uncovered_faces {map {skip 0}} {
proc diag_fix_missing_internal_faces {map {skip 0}} {
proc diag_fix_nmanvert {map} {
proc diag_fix_volume_orientation {map} {
proc diag_fix_overlapping_elements {map} { return [ic_uns_fix_overlapping_elements $map] }
proc unstruct_diag_mesh {what {ask_what ""}} {
proc unstruct_diag_check {what {mode ""} {busy_off 0} {run_twice 0} {skip 0}} {
proc unstruct_diag_check_list {{mode ""}} {
proc unstruct_diag_query_forfix {what map {ask_what ""} {diag_map_name ""} {skip 0}} {
proc diag_fix_surf_orient {map} {
proc unstruct_diag_set_all {dtype on} {
proc unstruct_diag_form {} {
proc unstruct_quality {} {
proc unstruct_diag_color {{reset 0}} {
proc unstruct_update_histo {{title ""} {nbars ""} \
proc unstruct_diag_custom_metric {} {
proc unstruct_diag_custom_metric_set {{which ""}} {
proc unstruct_diag_recompute {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/dispmenus_med.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/disp_hexa.tcl]]
proc hex_update_display {args} {
proc hex_mesh_up_to_date {ask {redraw 1} {d_to_mesh -1 } {recompute 1} {ret 0}} {
proc max { a1 a2 } {
proc display_edge_mesh_params { } {
proc mesh_scan_planes {w} {
proc scan_form_done {} {
proc scan_update_color {ind} {
proc scan_auto_repeat {d ndim} {
proc scan_reset {} {
proc scan_select_edge {} {
proc scan_major {ind dir {callup 1}} {
proc scan_minor {ind dir} {
proc scan_update {ind} {
proc mesh_scan_done {} {
proc setup_index_box {{w ""}} {
proc index_show {} {
proc index_add {} {
proc index_clear {} {
proc index_set_loaded {i} {
proc index_save {} {
proc index_load {} {
proc index_form_done {} {
proc index_update_all {{update 1}} {
proc index_modify {ind max dir {update 1}} {
proc index_reset {} {
proc index_from_corners {} {
proc range_string {} {
proc hex_query {what} {
proc hex_block_nodes_info {n1 n2} {
proc hex_block_vertex_info2 {n1 n2 ijk1 d} {
proc hex_misc_blocking_info {} {
proc hex_number_of_blocks_info {} {
proc hex_mesh_size {{block_info 0} {check 0}} {
proc hex_display_edge_segment {edge {seg 0} {action ""}} {
proc hex_find_duplicate_block_numbers {{quiet 0}} {
proc hex_get_face_surface_part_proj {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/disp_med.tcl]]
proc make_display_window {} {
proc disp_new_stuff {} {
proc display_update {{mode ""} {new_fams 1} {types ""}} {
proc disp_pack_edit_toplevel {reset} {
proc make_fam_window {w} {
proc fam_new_window {} {
proc fam_del_window {w} {
proc update_fam_window {{which ""} {force 0}} {
proc add_new_family {f v} {
proc update_fam_visible {leaving} {
proc update_family_labels {} {
proc disp_set_tearoff_name {title m1 m2} {
proc fam_get_id {f} {
proc fam_get_current_list {} {
proc fam_edit {} {
proc fam_good_colors {} {
proc fam_stuff_changed {} {
proc fam_delete_unused {{quiet 0}} {
proc fam_delete_unused_on_unload {{quiet 0}} {
proc fam_create_new {} {
proc fam_reset {} {
proc fam_check_new {fam {do_update 1}} {
proc fam_toggle_highlight {fam var} {
proc gui_change_visibility {type what on} {
proc undo_redo_update {nu nr} {
proc clear_fam_visible_prev { what } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/domain_med.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/domselect.tcl]]
proc domain_select {dir message type {mult 0} {useboco 1} {usetopo 1}} {
proc domain_reset_history {} {
proc domain_make_domain_box {w title stuff height sb} {
proc domain_put_and_finish {domain} {
proc domain_put {domain} {
proc domain_unput {domain} {
proc domain_put_all {list in} {
proc scrolled_listbox {w label singlecom doublecom allnone height sb} {
proc domain_cmp {dom1 dom2} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/edit_med.tcl]]
proc edit_copymove {} {
proc edit_smooth {} {
proc edit_refine {} {
proc edit_repair {} {
proc edit_coarsen {} {
proc edit_merge {} {
proc edit_extrude {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/file_med.tcl]]
proc file_openproject {{opendir ""}} {
proc file_newproject {} {
proc file_do_open_project {dir} {
proc select_tetin_extra_widgets {what d} {
proc file_loadtetin {def_tetin home_after} {
proc file_loadmesh {def_domain home_after} {
proc file_emptymesh {} {
proc file_emptydomain {} { file_emptymesh }
proc file_loadfamboco {def_fboco} {
proc file_loadcartfile {def_cart} {
proc file_openproject_select_3 {} {
proc open_3_set_config {conf} {
proc open_3_set_geom_list { conf } {
proc open_3_set_config2 {} {
proc open_3_set_geom {geom} {
proc open_3_set_geom2 {} {
proc file_openproject_select_4 {new_ok} {
proc dir_is_project {dir} {
proc dir_is_42project {dir} {
proc open_project_switch_style {} {
proc file_openproject_pick {settings} {
proc file_openproject_pick_cmdline {type file} {
proc file_openproject_pick_domain {dom} {
proc file_openproject_select_40 {dir {only_blank 0}} {
proc file_saveproject {{ask 1}} {
proc file_savetetin {ask} {
proc file_savefamboco {ask} {
proc file_savecartfile {ask} {
proc file_do_save_domain {domain topo_mulcad_out family_topo subface_proj} {
proc file_savetetin_opts {d} {
proc file_savedomain_opts {d} {
proc file_save_check_box_active {d} {
proc file_closeproject {{ask 1}} {
proc file_needs_save {what} {
proc file_save_one {what if_modified} {
proc select_domain_extra_widgets {d} {
proc file_select_domainfiles {how default {load_dim_opts 0}} {
proc select_domains_has_multiblock {dir} {
proc file_unload {what {ask 0}} {
proc file_unload_or_merge {is_str} {
proc file_canon_name {dir} {
proc file_chdir {} {
proc compare_domain_creation {ff1 ff2} {
proc file_savedomain_extra_widgets {fr} {
proc file_savemesh {ask {to_same 1} {str_famboco 1}} {
proc file_delete {what} {
proc file_do_load_tetin {filenames} {
proc file_check_load_tetin {tetinfile} {
proc file_do_load_domain {domain topo_mulcad_out family_topo subface_proj \
proc gui_load_domains { domains { max_dim 3 } } {
proc make_default_file_name {what suff} {
proc file_newfile {what} {
proc file_emptytetin {} {
proc file_emptycartfile {} {
proc file_emptyfamboco {} {
proc unused__create_empty_tetin_if_needed {} {
proc make_new_filename {dir def prefix} {
proc med_file_select {what new {def ""} {mess ""}} {
proc file_quit {{ask 1}} {
proc file_shell {dir} {
proc file_play_game {} { game }
proc file_import_choose_extra_widgets {type w} {
proc file_hardcopy_med {} {
proc directory {args} {
proc dir_is_40_project {dir} {
proc file_is_domain {dom} {
proc file_is_tetin {tet} {
proc file_is_family_boco {file} {
proc file_is_cart_file {file} {
proc file_change_icem_acn {} {
proc file_gplot {} {
proc file_clear_lock {} {
proc file_annotations {} {
proc file_copyproject {} {
proc file_renameproject {} {
proc file_archive {} {
proc file_unarchive {} {
proc file_is_archive {file} {
proc mesh_import {source} {
proc file_convert_directory_structure {} {
proc file_verbose_description {what} {
proc file_is_loaded {what} {
proc file_continue_loading {what} {
proc file_there_are_tetins {dir} {
proc file_there_are_domains {dir} {
proc unused__file_get_current_path {what} {
proc file_ask_delete_disconnected_vertices {} {    
proc file_confirm_multiple_load {what filenames} {    
proc home_directory {} {
proc set_project_names {{n ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/geodisp_med.tcl]]
proc make_geom_window {w} {
proc update_geom_window {} {
proc update_geom_visible {what how { redraw 1 } { force 0 } } {
proc disp_geo_command_mode_update {in} {
proc gui_present_geometry {obj_list mess answers {center_obj ""}} {
proc gui_center_geometry {obj_list} {
proc disp_toggle_solid {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/geometry_med.tcl]]
proc geo_check_available_space {} {
proc update_project_mode {} {
proc pick_geom_entity {what} {
proc blank_geom_entity {type { how "select" } } {
proc restrict_geom_entity {what} {
proc old__geo_change_famboco {{nfb ""}} {
proc boco_edit_sol_show_fam {fam on} {
proc geo_famboco_edit {} {
proc geo_famboco_load {} {
proc geo_famboco_save {} {
proc geo_params_edit_model {} {
proc geo_params_get_model {} {
proc geo_params_update_show_size {what} {
proc geo_params_edit_model_apply {} {
proc old__geo_scale_meshing_params {type name ofact nfact} {
proc geo_params_number_on_curve { num {curves} } { 
proc geo_params_changed { changed } { 
proc geo_entity_has_params {type} {
proc geo_params_edit {how} {
proc geo_params_do_blank_done {type} {
proc geo_params_edit_done {type w} {
proc geo_params_edit_select {type} {
proc geo_params_update_sizes {type} {
proc geo_params_edit_apply {type} {
proc geo_params_get_vals {type sel} {
proc geo_params_etyp2_to_etyp {{back 0}} {
proc geo_params_etyp_to_etyp2 {} {
proc geo_create_add {var what} {
proc geo_create_clear {var what} {
proc geo_create_surface_boundary {} {
proc geo_create_surface_segment {} {
proc geo_create_surface_segment_param {objs} {
proc geo_create_surface_segment_fac { objs } {
proc geo_create_surface_from_ncurves {} {
proc geo_create_surface_from_curves {} {
proc geo_cre_srf_from_contour {} {
proc geo_create_curve_isocurve_doit {} {
proc geo_create_curve_isocurve {} {
proc geo_create_surface_points {{npts 4}} {
proc geo_select_surface_points_all {method npts} {
proc geo_create_surface_points_box {} {
proc geo_create_surface_points_doit {} {
proc geo_create_curve_segment {} {
proc geo_create_curve_segment_param { objs } {
proc geo_select_points {type var} {
proc geo_create_curve_segment_mesh { objs } {
proc geo_create_curve_extract {} {
proc geo_create_curve_extract_param {objs append} {
proc geo_create_curve_extract_facet {objs append} {
proc geo_create_curve_intersect {} {
proc geo_create_curve_points {} {
proc geo_create_curve_points_doit {} {
proc geo_create_point_extract {} {
proc geo_create_point_extract_param {names} {
proc geo_create_point_extract_facet { objs } {
proc geo_create_point_screen {} {
proc geo_create_point_midpoint {} {
proc geo_create_point_explicit {} {
proc geo_create_material_screen {} {
proc geo_create_point_curveinter {} {
proc geo_create_material_midpoint {} {
proc geo_create_material_explicit {} {
proc midpoint_of_points {pts} {
proc geo_create_density_screen_defaults {} {
proc geo_create_density_points {} {
proc geo_create_density_screen {{npts 8} {name ""}} {
proc geo_modify_density_screen {} {
proc geo_create_loop_screen {} {
proc geo_create_loop_surfaces {{per_family 0}} {
proc geo_create_loop_surface {} {
proc geo_modify_loop_merge_loops {} {
proc geo_modify_loop_merge_curves {} {
proc geo_modify_loop {action what {type ""}} {
proc geo_modify_loop_delete {what loop points curves surfaces corners type} {
proc geo_modify_loop_add {what loop points curves surfaces corners type} {
proc geo_modify_loop_add_prescribed {curves surfaces points corners to_add} {
proc geo_modify_loop_prescribed_curves {start curves to_add points end} {
proc geo_modify_loop_prescribed_surfaces {surfaces} {
proc geo_modify_loop_prescribed_points {points} {
proc geo_modify_loop_prescribed_corners {corners} {
proc geo_delete {what} {
proc geo_delete_last {what} {
proc geo_delete_all {how type} {
proc geo_import {source {infiles ""} {force_seg 1}} {
proc geo_import_type {name type from infiles} {
proc geo_import_str_to_cad {} {
proc geo_export {switch} {
proc geo_export_selfam {} {
proc geo_get_current_mode {} {
proc geo_family {{type ""}} {
proc geo_replace_entity {{type ""}} {
proc geo_copymove {what} {
proc geo_do_copymove {} {
proc geo_move_apply_param {t ns all_cent} {
proc geo_move_apply_params {ents} {   
proc geo_move_ent_add {what} {
proc geo_move_ent_remove {what} {
proc geo_move_clear {} {
proc geo_thincuts {} {
proc geo_thincut_select {var} {
proc geo_periodic {} {
proc geo_delete_unattached {} {
proc geo_remove_feature {} {
proc geo_prompt_build_topology {} {
proc geo_build_topo {} {
proc geo_clean_apply {} {
proc geo_fix_gaps {{toggle 0}} {
proc geo_fix_gaps_apply {do} {
proc geo_surface_extend {} {
proc geo_coarsen_surface {{tol ""}} {
proc geo_stlrepair_holes {use_curves intern int_surf complete_edges save_old {part ""}} {
proc geo_stlrepair_edges {use_curves merge_tol {merge_ends -1}} {
proc geo_repair_update_topo {} {
proc point_question_location {pt} {
proc geo_modify_surface_untrim {} {
proc geo_modify_curve_merge { } {
proc geo_modify_curve_reappr { } {
proc geo_modify_surface_reappr {selcurves selsurfaces ask each} {
proc geo_modify_object_facetize {what} {
proc geo_frontal {} {
proc geo_surface_area {} {
proc geo_project_curve_surface {} {
proc geo_select {what {max_num 0} {mess ""} {create_new 0} \
proc geo_select_either_set_prefix {pref} {
proc geo_select_either {what {max_num 0} {mess ""} {create_new 0} \
proc geo_select_segments {type name sel_type {max_num 0} {first_diff 0} {also_xyz 0} {show_selected 0} {bindings_already_done 0} {no_unify 0}} {
proc geo_select_segments_via_curves {} {
proc geom_get_objects {type how {only_if_dormant 0}} {
proc geo_select_loc {what var} {
proc geo_select_part_from_screen {{max_num 0}} {
proc geo_create_curve_proj_to_surface { } {
proc geo_create_curve_proj_doit {} {
proc geo_create_surface_curves { } {
proc geo_create_surface_curves_doit {} {
proc geo_create_surface_curtain { } {
proc geo_create_surface_curtain_doit {} {
proc select_curve_var { var {nmax 1}} {
proc select_surface_var { var {nmax 1}} {
proc geo_create_curve_concat {} {
proc geo_create_surface_from_curves_doit {} {
proc geo_cre_srf_from_contour_doit {} {
proc geo_create_curve_3pnt_arc_doit {} {
proc geo_create_curve_3pt_arc {} {
proc geo_create_curve_line {} {
proc geo_create_curve_line_doit {} {
proc geo_create_curve_listdata {} {
proc geo_create_curve_listdata_doit {} {
proc geo_create_surface_mid {} {
proc geo_midsurface_apply {} {
proc geo_split_folded_surface {} {
proc geo_split_folded_surface_apply {} {
proc geo_create_curve_test_project_surface {} {
proc geo_params_edit_allfamilies { } {
proc geo_params_update_highlighting {w {sortedfams ""}} {
proc geo_params_allfamilies_get_vals {} {
proc geo_params_edit_allfamilies_apply {} {
proc geo_contact_surfaces {{debug 0}} {
proc geo_surface_thickness {{order 2}} {
proc geo_calculate_thickness {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/geomodify_med.tcl]]
proc geo_show_edit {what names on {color white}} {
proc geo_modify_object_add {what npts item} {
proc geo_modify_object_delete {what item} {
proc geo_modify_object_restrict {what item} {
proc geo_modify_splitseg {what item how} {
proc geo_modify_movenode {what proj_to} {
proc geo_modify_mergenode {what} {
proc geo_modify_mergenode_tol {what {tol ""}} {
proc geo_modify_splitedge {what} {
proc geo_modify_swapedge {what} {
proc geo_modify_moveseg {what item to_new {newfam ""} {name ""}} {
proc geo_modify_merge {what} {
proc geo_modify_merge_edges {} {
proc old__geo_modify_object_addcrease {what} {
proc old__geo_modify_addcrease_one {surf edgelist pt1 pt2 vec} {
proc old__geo_modify_addcrease_release {surf} {
proc geo_modify_point_newpos {} {
proc geo_modify_point_merge {} {
proc geo_modify_point_screen {} {
proc geo_modify_material_newpos {} {
proc geo_modify_material_screen {} {
proc geo_modify_body_screen {} {
proc geo_modify_object_rename {type} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/glsm_med.tcl]]
proc struct_smooth_callback {mess pct} {
proc struct_smooth {} {  
proc etm_Main {} {
proc etm_LoadMethods {} {
proc etm_MainWin {} {
proc etm_SetFunctionsState {} {
proc etm_ListSelectedEntities {type} {
proc etm_ClearSelectedEntities {what} {
proc etm_ProgSelect {} {
proc etm_SelectbyWhat {what which label} {
proc etm_ApplySelectbyWhat {} {
proc etm_SelectDomainsByNumber {type} {
proc etm_SelectDomainsByNumberShow {type i} {
proc etm_UnselectedDomainsSingle {} {
proc etm_UnselectedDomainsAll {} {
proc etm_PackWidget { win side list } {
proc etm_SetAllMethods_2D { which } {
proc etm_SetOneMethod_2D { win } {
proc etm_SetAllMethods_3D { which } {
proc etm_SetAllFaceMethods_3D { which } {
proc etm_Settings { what } { 
proc etm_DoneSettings {} {
proc etm_SaveSettings { f } {
proc etm_LoadSettings { f } {
proc etm_PredefinedMeshParameter {} {
proc etm_SelectSubfacePredefined { what } {
proc etm_SubfacePredefMesh { what list } {
proc etm_ExtendSubfacePredefined {} {
proc etm_SetMeshingLawPredefined { what win } {
proc etm_DonePredefined {} {
proc etm_SetVectorPredefined { win } {
proc etm_CancelPredefined {} {
proc etm_ResetPredefined { win } {
proc etm_UnsetParameterPredefinedSubface {} {
proc etm_SetParameterPredefined { what } {
proc etm_StartSmoothing { prog_select } {
proc etm_PrepareSmoothing { what } {
proc etm_Perform { what } {
proc etm_CheckSingleSmooth {} {
proc etm_SingleSmoothWin {} {
proc etm_SingleSmoothSelect { w } {
proc etm_PerformPredefined {} {
proc etm_PerformPost {} {
proc etm_PostWin {} {
proc etm_GetValuesPost { win destroy } {
proc etm_CreateBucketsListPost {} {
proc etm_DonePost {} {
proc etm_ShowAllBuckets { what } {
proc etm_ShowBuckets { what } {
proc etm_RelaxationCoefficients {type type2 {on 1}} {
proc etm_RelaxationCoefficientsAll {type type2 on} {
proc etm_RelaxationCoefficientsSingle {type type2 on} {
proc etm_SetOneGridExpansionRate {ijk type type2 dom} {
proc etm_ShowFacesRelaxCoeff {dom} {
proc etm_ShowFaceRelaxCoeff {which} {
proc etm_ShowFaceIJK {which dom what on {color ""}} {
proc etm_CancelMethodsRelaxCoeff {on} {
proc etm_AddGridExpansionRate {} {
proc etm_ApplyMethodsRelaxCoeff {on {explicit ""}} {
proc etm_CoefficientsSubface {subfaces type on on2 {explicit 0}} {
proc etm_SetDefaultsRelaxCoeff {type type2 on} { 
proc etm_SetDefaultsGridExpansionRate {type type2} {
proc etm_CoefficientsSubfaceIJK { number on } {
proc etm_PlaneSmoothing {dom} {
proc etm_PlaneSmoothingList {} {
proc etm_PlaneSmoothingListAccept {} {
proc etm_PlaneSmoothingDone {} {
proc etm_PlaneSmoothingReset {} {
proc etm_done_smooth {} {
proc etm_UnsetSmootherArrays {} {
proc etm_DestroySmootherWindows {} {
proc etm_ShowMessage { what mess } {
proc etm_ShowQuestion { what mess } {
proc etm_ShowHybridWin { what number who } {
proc etm_SubfaceLayersWin { what list } {
proc etm_ApplySubfaceLayers {} {
proc etm_OneSubfaceLayers { i value } {
proc etm_AllSubfaceLayers { what } {
proc etm_ClearSubfaceLayers {} {
proc etm_ExitSubfaceLayers {} {
proc etm_IsDomainActive {} {
proc etm_SetChildState { win } {
proc etm_SmoothingParameter {} {
proc etm_AcceptSmoothingParameter {} {
proc etm_SmoothingParameterExpert {} {
proc etm_PostParameters {} {
proc etm_SetPostLabels {win text} {
proc etm_SetArrow { arrow what var } {
proc etm_DefaultParameter {} {
proc etm_DefaultParameterPost {} {
proc etm_GetArrayChanges { set what } {
proc etm_SelectObjects { mode what type } {
proc etm_SelectObjectsMed { mode what type } {
proc etm_SetSelectedNonRelaxationSubface {picked} {
proc etm_configure_smooth_parts_form {w1 w2} {
proc etm_SelectStructEntities {mode what type} {      
proc etm_VertexGlobalLayers {vertices} {
proc etm_BladeBoundaryAll {selected} {
proc etm_BladeBoundarySelect {selected} {
proc etm_BladeBoundaryByDomain {} {
proc etm_GetSubfaceIJKNumber {dom which} {
proc etm_GetSubfaceIJKNumberList {dom which} {
proc etm_SelectFamilies {mode what {mess ""}} {
proc etm_SelectedImages {mode what} {
proc etm_ShowFamilyImage {mode what numbers full color} {
proc etm_SetTypeVisible {what on} {
proc etm_OnAFamily {what mode} {
proc etm_SelectZones { what } {
proc etm_GetIJKSteps {w} {
proc etm_TransIJKSteps {up trans idx} {
proc etm_ApplySelectZones {} {
proc etm_ShowMinMax { min max } {
proc etm_ClearMinMax {on} {
proc etm_SelectAllCornerVertices {} {
proc etm_SetCornerVertex {value} {   
proc etm_SelectAllViolateEdges {} {
proc etm_ClearAllSelectZones {} {
proc etm_UnsetRelaxZone {what} {
proc etm_ClearOneSelectZone {} {
proc etm_ClearViolateEdge {} {
proc etm_ShowAllSelectZones {} {
proc etm_DoneSelectZones {} {
proc etm_SelectDomainZone {which} {
proc etm_ShowDomainZone {which} {
proc etm_CreateSubfaceZone { what dom min max } {
proc etm_CreateEdgeZone { what dom min max } {
proc etm_SetRegionIJK {{on 0}} {
proc etm_SliderOnOff {} {
proc etm_ShowCornerVertex { value } {
proc etm_ErrorMessageIJK {} {
proc etm_ConvertSubfaces { on } {
proc etm_ShowOneImage { mode type number on color } {
proc etm_SetSelectedImagesOff {mode} {
proc etm_SetDisplayOnOff {} {
proc etm_ShowAll {} {
proc etm_ShowAllSelectedImages { mode } {
proc etm_ShowAllSelectedImagesZones {} {
proc etm_ConfigureImageZone {zone on {color ""}} {
proc etm_ShowSelectedImagesZones { what } {
proc etm_ClearView {} {
proc etm_ClearAllImages {} {
proc etm_ClearRegionZone { what } {
proc etm_ClearAllRegionZones {} {
proc etm_DeleteRegionZone { item } {
proc etm_DeleteAllRegionZones { what } {
proc etm_ClearAllImagesLayers {} {
proc etm_ClearSelections {} {
proc etm_UnsetSelectionsArrays {} {
proc etm_CreateSmoothLists {} {
proc etm_CreateGlobalList {} {
proc etm_CreateGlobalSaveList {} {
proc etm_CreateDomainList {} {
proc etm_CreateMethodLists {} {
proc etm_CreateRelaxSubfaceList { do_relax } {
proc etm_CreateLayerExtensionNoList {} {
proc etm_CreatePredefSubfacesList {} {
proc etm_FormatList {list} {  
proc etm_SortList { one two } { 
proc etm_UnsetList { arg } {
proc etm_InitList { arg } {
proc etm_UnsetArray { arg } {
proc etm_IsArrayItemOk { what which } {
proc etm_IsArrayOk { what } {
proc etm_GetArrayItemValue { what which } {
proc etm_2d_3d { { item "" } } {
proc etm_LoadStructMesh {} {
proc etm_ShowLayerExtensionNo { number type mode weight on } {
proc etm_ShowRelaxSubface { number type on } {
proc etm_ShowEdgeAttr { number type on } {
proc etm_ShowEdgeGlobal { number on } {
proc etm_SetMode {} {
proc etm_SetRelaxZone { on number imin imax do_relax } {
proc etm_SetRelaxSubface { on number do_relax } {
proc etm_SetEdgeAttr { on number mode } {
proc etm_SetEdgeGlobal { on number } {
proc etm_SetVertexGlobal { on number mode } {
proc etm_SetVertexFixed { on number mode } {
proc etm_SetLayerExtensionNo { on { number "" } { mode "" } { weight "" } } {
proc etm_SetLayerExtensionIJK { on number imin imax mode weight } {
proc etm_SetViolGeomZone { on number imin imax dist } {
proc etm_SetViolGeomSubface { on number dist } {
proc etm_SetRegion { on number imin imax } {
proc etm_SetMeshingLawPar { on { law "" } { s1 "" } { s2 "" } { s3 "" } { s4 "" } { ratio "" } } {
proc etm_SetColors {} {
proc etm_BatchStartSmoothing { project prog_select } {
proc etm_BatchOpenSettingsFile {setting} {
proc etm_BatchLoadSettings {project what tetin setting} {
proc etm_BatchLoadSettingsNew {project what tetin setting} {
proc do_glsm_regression_test {project tetin what settings {no_family_topo 0}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/hardcopy_med.tcl]]
proc file_hardcopy {{top .v} {sub .v.view} {startcmd ""} {endcmd ""}} {
proc hardcopy_ps_form {} {
proc hardcopy_win_form {} {
proc hardcopy_defaults {} {
proc hardcopy_create {} {
proc get_print_cmd {} {
proc gui_hardcopy_create {arguments} {
proc gui_hardcopy_print {} {
proc create_screenshot {outfile} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/hotkeys.tcl]]
proc va_mymenu {} {
	proc tkGenerateMenuSelect {menu} {
	proc tkCheckRadioDown w {
	proc tkButtonDown w {
proc va_normalmenu {} {
	proc tkGenerateMenuSelect {menu} {
	proc tkCheckRadioDown w {
	proc tkButtonDown w {
proc va_key_init {} {
proc va_key_screen_select {} {
proc va_key_add_key {} {
proc va_key_show_key {} {
proc va_key_add_com {} {
proc va_key_delete_com {} {
proc va_key_delete_key {} {
proc va_key_delete_unused {} {
proc va_key_create_menu {} {
proc va_key_read {} {
proc va_key_write {} {
proc va_key_activate {do} {
proc va_key_do_command {key} {
proc va_key_stop {{unset ""}} {
proc va_key_set_check {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/import_med.tcl]]
proc geo_import_plot3d {infiles outfiles {only_trias 1} {s2u 0} {skip 0}} {
proc geo_import_plot3d_trias {pl3dfile} {
proc geo_import_patran {infiles outfiles {only_tris 1}} {
proc geo_import_ugrid {infiles outfiles} {
proc geo_import_stl {infiles outfiles} {
proc geo_import_nastran {infiles outfiles {vol 0}} {
proc geo_import_capri {infiles outfiles} {
proc geo_import_ansys {infiles outfiles} {
proc geo_import_lsdyna {infiles outfiles} {
proc geo_import_rampant {infiles outfiles} {
proc geo_import_starcd {outfile {cmdfile ""} {cellfile ""} {vertfile ""} {bndfile ""}} {
proc geo_import_vrml {infiles outfiles} {
proc geo_import_sauna {topofile gridfile outfile} {
proc geo_import_cfx5 {infile outfile} {
proc geo_readerargs_acusolve {} {
proc geo_import_reader {source infiles outfiles {type ""} {save 1}} {
proc backend_readers {{reader ""}} {
proc import_reader_file {reader files {create 1} {prec 1} {tstep 0} args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/language_text_med_English.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/license_med.tcl]]
proc license_start {} {
proc license_check {} {
proc unused__license_check_file {} {
proc license_is_lost {} {
proc license_acquire {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/locking_med.tcl]]
proc check_project_lock {dir} {
proc free_project_lock {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/med_ezcad.tcl]]
proc va_vvar {{line "="}} {
proc va_ezcad_init {{what 0}} {
proc va_ezcad_load {fname {command ""}} {
proc va_debug {{level 0} {text ""}} {
proc med_ezcad {{switch 0}} {
proc va_end_of_screen_input {{im 0} {opt ""}} {
proc va_preselect_image {type name xyz} {
proc va_preselect_on_tag {type name xyz} {
proc va_create_xyz {{how auto} {number 1} {use_pts 1} {show_how xyz} {var ""} {param 0} {param_var ""} {extras ""}} {
proc va_xyz_back_action {n_e {var ""} {param 0} {param_var ""}} {
proc va_curve_dir {crv xyz which} {
proc va_show_srf_iso_dir_image {name u v dir} {
proc va_show_crv_dir_image {n_e xyz crv show_how} {
proc vam_get_result_xyz {x y name} {
proc va_get_image_name_and_xyz {x y type r name var} {
proc va_try_get_nearest_xyz {x y use radius type name} {
proc va_try_get_3d_xyz {x y use radius tag_vis_on tag_vis_off} {
proc va_round {vals n} {
proc vam_screen2plane {x y} {
 proc vam_onF9 {{f9 0}} {
proc vid_picker {{type curve} {onMotion DefaultMotionProc} {onB DefaultButtonProc}} {
proc vid_picker_stop {{delay 100} {banner 1}} {
proc vam_binding {t e c} {
proc vam_unset_timer {} {
proc vam_set_timer {} {
proc va_MotionEvent {w x y tags command} {
proc va_ButtonEvent {w x y but tags command} {
proc DefaultButtonProc {type name xyz but} {
proc onMotionEventProc {x y what {tags ""}} {
proc onMotionEventEndProc {} {
proc DefaultMotionProc {type name xyz} {
proc vam_wait_for_click {{f9_key 0}} {
proc vam_pointer_text {coor text {nn 100}} {
proc vam_tooltip { w {text ""} {text2 ""}} { 
proc va_refresh_screen {} {
proc va_do_modify {xyz {when never}} {
proc va_do_when_create_xyz {xyz pname when num} {
proc vid_gui {} {
proc va_simple_scroll {w_scroll dir XY what w_do} {
proc va_simple_scroll_motion {XY} {
proc vid_help {} {
proc vid_new_def {name} {
proc vid_new_name {} {
proc vid_read {} {
proc vid_save {} {
proc vid_done {} {
proc ic_current_view {args} {
proc va_get_other_color {c} {
proc va_get_faceted_in_circle {tag center x_ax normal radius} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/med_gui.tcl]]
proc tool_command {} {
proc setup_common {} {
proc tool_source_extra_files {} {
proc tool_setup {} {
proc va_load_init {} {
proc va_load_va {va_name} {
proc do_batch_job {type} {
proc open_initial_domain_file {file} {
proc open_initial_tetin_file {file} {
proc find_project {proj} {
proc make_tool_windows {} {
proc geometry_mode_update {} {}
proc last_message {} {
proc last_message_ok {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/menus_AIenvironment.tcl]]
proc run_nastran {} {
proc solve_nastran { } {
proc mb_mesher_hexa {} {
proc mesher_quad_ai {} {
proc opt_element {} {
proc mesher_quad_mesh_ai {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/menus_ben.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/menus_med.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/meshc_hexa.tcl]]
proc edge_meshc_init {{length 1.0} {param 1} {type {}} {func {}} {np 4} \
proc edge_meshc_setlength {{edge_length 1.0} {parameter 0}} {
proc edge_meshc_setcurvetype {{type {}} {func {}}} {
proc edge_meshc_setnpoints {{np 4}} {
proc edge_meshc_setcallback \
proc edge_meshc_setinitpoints {{initial_points {}}} {
proc edge_meshc_sortinitial {initial_points} {
proc edge_meshc_orderpoints {point1 point2} {
proc edge_meshc_form {} {
proc edge_meshc_funclist {} {
proc edge_meshc_funcname {{key {}}} {
proc edge_meshc_transfuncname {{key {}}} {
proc edge_meshc_funcsmooth {func} {
proc edge_meshc_store {} {
proc edge_meshc_load {} {
proc edge_meshc_edgepointtrace {name element op} {
proc edge_meshc_edgepointupdate_ext {} {
proc edge_meshc_edgepointupdate {} {
proc edge_meshc_configureedgepoint {} {
proc edge_meshc_togglelinspl {} {
proc edge_meshc_toggleparameter {} {
proc edge_meshc_setparamdisplay {} {
proc edge_meshc_edgepointsactive {{val 1}} {
proc edge_meshc_bmnpoints {val} {
proc edge_meshc_checknpoints {} {
proc edge_meshc_setmodals {} {
proc edge_meshc_setfunc {func} {
proc edge_meshc_reverse {axis {doupdate 1}} {
proc edge_meshc_createcontrol {} {
proc edge_meshc_rescalecontrol {} {
proc edge_meshc_edgeminmax {} {
proc edge_meshc_pointcreate {x y {init 0} {idx 0} {docallback 1}} {
proc edge_meshc_addpointsorted {xn yn force} {
proc edge_meshc_select {point} {
proc edge_meshc_move {point x y} {
proc edge_meshc_pointdelete {x y} {
proc edge_meshc_erasecurrentfunc {} {
proc edge_meshc_standard_callback {points} {
proc edge_meshc_update {{docallback 1}} {
proc edge_meshc_updateticks {ticklist} {
proc edge_meshc_flatten {points} {
proc edge_meshc_coordtoscreen {points} {
proc edge_meshc_screentocoord {points} {
proc edge_meshc_tickstoscreen {points} {
proc edge_meshc_min {x1 x2} {
proc edge_meshc_max {x1 x2} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/mesher_med.tcl]]
proc canonical_path {name} {
proc mesher_hexa {{extra ""}} {
proc hexa_select_blocking_file {} {
proc hexa_compare_blocking_file {ff1 ff2} {
proc hexa_select_blocking_extra_widgets {d} {
proc hexa_blocking_file_put {file} {
proc mesher_hex_dominant {} {
proc mesher_hex_dom_doit { form_name}  {
proc mesher_hex_dom_family {} {
proc mesher_hexa_batch {} {
proc mesher_mulcad_convert {} {
proc mesher_tetra_full {{extra ""}} {
proc mesher_tetra_mesh {{extra ""}} {
proc mesher_global {{extra ""}} {
proc mesher_autohexa {{extra ""}} {
proc mesher_tetra_expert { form_name } {
proc mesher_tetra_some { form_name } {
proc mesher_tetra {{extra ""}} {
proc mesher_tetra_doit { form_name } {
proc mesher_triangle { }  {
proc mesher_tetra_selectfams { window var } {
proc mesher_quad {} {
proc element2_to_element {{back 0}} {
proc mesher_quad_mesh {} {
proc mesher_uniquify_pairs {pairs} {
proc mesher_quad_smooth {} {
proc mesher_quad_boundary {} {
proc mesher_quad_reset {} {
proc mesher_quad_done {} {
proc mesher_str_quad {} {
proc mesher_str_quad_mesh {} {
proc mesher_str_quad_done {} {
proc domain_newest_file {} {
proc mesher_cart3d {} {
proc mesher_cart3d_default_box {{name ""} {element ""} {op ""}} {
proc mesher_cart3d_advanced {name element op} {
proc mesher_cart3d_default_inputs {} {
proc mesher_cart3d_apply {} {
proc mesher_cart3d_reset {} {
proc mesher_cart3d_done {} {
proc mesher_tri2tet {} {
proc mesher_tri2tet_family {} {
proc mesher_tri2tet_doit {form_name} {
proc mesher_surf_tri {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/mesh_direct.tcl]]
proc unstruct_meshdirect_boltspiders {} {
proc unstruct_meshdirect_spotwelds {} {
proc unstruct_meshdirect_seamwelds {} {
proc unstruct_meshdirect_connectors {} {
proc unstruct_meshdirect_editrun_type {type} {
proc unstruct_meshdirect_select_family {title} {
proc unstruct_meshdirect_select_family_new {title} {
proc unstruct_meshdirect_weld_method {w num name nval} {
proc unstruct_meshdirect_listedit {directive} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/mesh_hexa.tcl]]
proc mesh_recompute {} {
proc get_freeze_fams { fams } {
proc mesh_up_to_date {ask {redraw 1} {d_to_mesh -1 } } {
proc mesh_scan_planes {} {
proc scan_reset {} {
proc scan_select_edge {} {
proc scan_major {ind dir {callup 1}} {
proc scan_minor {ind dir} {
proc scan_update {ind} {
proc mesh_scan_done {} {
proc check_const_r {} {
proc mesh_diag {which title ask} {
proc mesh_do_diag {ask title {nbars 20} {min 0} {max 1} {ylim 16} {args ""}} {
proc mesh_histo_select {w intervals arguments solid } {
proc mesh_check_size {} {
proc mesh_params {} {
proc update_param_display {surflist} {
proc mesh_params_active {surflist} {
proc mesh_params_apply {surflist} {
proc mesh_params_query {surflist} {
proc mesh_param_add_surfs {surflist} {
proc mesh_param_remove_surf {surflist surf} {
proc mesh_params_done {doit} {
proc mesh_cparams {} {
proc update_cparam_display {curvelist} {
proc mesh_cparams_active {curvelist} {
proc mesh_cparams_apply {curvelist} {
proc mesh_cparams_query {curvelist} {
proc mesh_cparam_add_curves {curvelist} {
proc mesh_cparam_remove_curve {curvelist curve} {
proc mesh_cparams_done {doit} {
proc edge_mesh_nupcallback {} {
proc edge_mesh_ndncallback {} {
proc update_h1h2 {} {
proc point_family_names {{key ""}} {
proc mesh_eparams {{edge ""} {skip 0}} {
proc mesh_eparam_setlaw {lawname} {
proc mesh_eparam_sellink { var_name } {
proc mesh_eparam_revlink { var_name } {
proc mesh_law_names {{key ""}} {
proc mesh_eparam_selnew {{in_edge ""}} {
proc swap {a b} {
proc mesh_eparam_update {{edge ""} { rev 0 } } {
proc mesh_eparam_scrpos {} {
proc mesh_eparam_copyto {rev} {
proc mesh_eparam_copyfr {rev} {
proc law_swap { lname } {
proc mesh_eparam_apply {rev {commitform 0} {edges ""} {scale 0} } {
proc mesh_eparam_redraw {} {
proc mesh_eparam_reset {{var eparam_save}} {
proc mesh_eparam_editc {func {doinitedgepoints 0}} {
proc eparam_density_callback {args} {
proc mesh_eparam_restoresave {} {
proc mesh_eparam_initedgepoints {} {
proc edge_meshc_filebrowser {} {
proc mesh_assign_sizes_doit {} {
proc mesh_assign_sizes {} {
proc mesh_refinement {} {
proc mesh_ref_apply {} {
proc mesh_ref_query {} {
proc mesh_ref_seldim {} {
proc mesh_renumber_domains {} {
proc renum_p {w x v} {
proc renumber_cmp {v1 v2} {
proc renumber_putrc {i {xpos ""} {ypos ""}} {
proc renumber_setpos {i x y} {
proc renumber_moveup {r c} {
proc renumber_move {i xpos ypos} {
proc mesh_periodic {} {
proc mesh_make_periodic {what} {
proc mesh_smooth {} {
proc mesh_match_edges {} {
proc mesh_scale {} {
proc mesh_make_even {} {
proc mesh_init_output {} {
proc mesh_options {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/mulcad.tcl]]
proc mulcad_convert {partname outfile} {
    proc mess {m args} { puts -nonewline $m }
    proc get_program {dir cmd} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/nspacking_med.tcl]]
proc edit_nspack {} {
proc nsp_SelectSubfaces {} {
proc nsp_ExtendSubface {} {
proc nsp_ComputeLayers {} {
proc nsp_SetMeshingLaw { what win } {
proc nsp_Done {} {
proc nsp_Cancel {} {
proc nsp_Clear {} {
proc nsp_Unset {} {
proc nsp_SetInOut { win frame } {
proc nsp_SetInOutParameter {} {
proc nsp_SetParameter { what } {
proc nsp_ClearView {} {
proc nsp_ShowSubfaces {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/oldmenus_med.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/options_med.tcl]]
proc file_options {} {
proc file_update_expert {} {
proc file_options_done {save} {
proc before_set_options {} {
proc after_set_options {} {
proc file_option_read_old_modals {} {
proc file_edit_paths {} {
proc file_paths_done {save} {
proc file_edit_dirs {} {
proc file_dirs_done {save} {
proc file_update_paths {} {
proc project_settings_save {pdir} {
proc save_project_file {pdir} {
proc project_settings_load {file} {
proc project_settings_make_relative {pdir varname val rel} {
proc project_settings_save_defaults {} {
proc project_settings_reset_defaults {} {    
proc reset_options {} {
proc options_solution_select {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/params_med.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/pcube_med.tcl]]
proc pcube_run {} {
proc pcube_set_user_tol {} {
proc pcube_delete_undos {} {
proc get_text { prompt { def "" } } {
proc select_files {filespec message {type ""}} {
proc multiselect_listbox {w label singlecom doublecom allnone height sb} {
proc listbox_select_all {list} {
proc listbox_select_none {list} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/prism.tcl]]
proc get_famnames {{surface_file ""}} {
proc compute_from { } {
proc rebuild_prism_window { form_name prism_params_file } {
proc mesher_prism { } {
proc create_prism_options { form_name ifile } {
proc family_options { form_name } {
proc advanced_prism_options { form_name ifile } {
proc prism_all { on } {
proc write_prism_params { ifile } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/replay_med.tcl]]
proc file_replay {} {
proc file_replay_batch {file} {
proc replay_filter {com} {
proc replay_execute_command {line update_display} {
proc replay_check_command_output {res} {
proc replay_after_commands_done {} {
proc batch_do_cmd {args} {
    proc aie_create_initial_assemblies {args} { 
proc setup_batch_interp {} {
	proc $cmd args "\
	proc gui_$cmd args "\
proc batch_interp_update_var {name sub op} {
proc script_run {{file ""}} {
proc b {args} {
proc s {args} {
proc setup_old_hexa_commands {} {
	    proc $old_cmd args "\
proc unused__replay_patch_gui_calls {pat} {
	proc $cmd args "\
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/select_hexa.tcl]]
proc select_hexa {what {max_num 0} {mess ""} {opts ""} {take_first_press 0} {select_duplicate 0}} {
proc select_corners {{max_num 2} {mess ""}} {
proc select_change_subset {type subset what action how mess max opts} {    
proc change_subset {type sub what action {how select} {opts ""} {ents ""}} {
proc select_hexa_toggle_dynamics {} {
proc select_compcurve {mess {num 1} {opts ""}} {
proc select_vertex {mess {num 1} {opts ""}} {
proc select_node {mess {num 1} {opts ""}} {
proc select_node_text {mess num text} {
proc select_curve_parameter {mess} {
proc select_point {mess} {
proc get_select_options {what {opts ""}} {
proc select_edge {{how select} {mess ""} {max_sel 1} {opts ""}} {
proc select_face {{how select} {mess ""} {max 1} {opts ""}} {
proc select_hex_get_free_faces {} {
proc select_block {{how select} {mess ""} {max 1} {opts ""}} {
proc select_surface {mess} {
proc select_curve {mess {max 1} {opts ""}} {
proc block_mark_families {var {one 0} {del_opts ""}} {
proc surface_mark_families {var {one 0}} {
proc block_unmark {} {
proc block_mark {on face {del_opts ""}} {
proc block_mark_fams {on face {del_opts ""}} {
proc block_mark_all { on mess {del_opts {}} } {
proc block_mark_super {blocks} {
proc block_mark_numbers {on mess {del_opts {}}} {
proc select_material {mess} {
proc define_family { mat } {
proc get_families {} {
proc reset_families {} {
proc get_indices {reset} {
proc select_some_volume_families {} {
proc select_one_family {mess} {
proc hex_command {args} {
proc hex_trim_error {res} {
proc hex_init_globals {} {
proc volume_activename_string {} {
proc family_activename_string {} {
proc surface_activename_string {} {
proc del_dim {ijk1 ijk2} {
proc node_index {ijk dim} {
proc hex_set_return_vars {args} {
proc readjust_edit_geometry {} {
proc select_hexa_reset {} {
proc hook_hexa_F9 {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/select_med.tcl]]
proc select_family {{mess ""} {varn ""} {wpos ""}} {
proc unstruct_select_existing_family {} {
proc unstruct_screen_select_family {varname} {
proc unstruct_select_new_family {varname checkbox} {
proc unstruct_select_type {} {
proc unstruct_screen_select_type { varname} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/select_struct.tcl]]
proc edit_struct_list {what numbers mess} {
proc get_struct_list {what {mess ""}} {
proc str_select_highlight {what num var_name} {
proc str_select_unhighlight {type num var_name} {
proc select_struct_surf {what max {how item} {var_name ""} {mess ""}} {
proc select_set {what op w var num} {
proc select_trace_proc {var im op} {
proc select_struct_surf_node {im action_cmd} {
proc select_struct_node {{max_num 0} {from_surfs ""} {partial 0}
proc select_move_str_surf {allow_invert xypos do_proj} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/select_unstruct.tcl]]
proc select_unstruct {what {max_num 0} {from_map visible} {partial ""} {mess ""} 
proc select_move_uns_map {map split_first allow_invert xypos {fam_active "all"}} {
proc select_split_drag_edges {from_map surfnums} {
proc select_toggle_edge_mode {} {
proc select_bar_segments {} {
proc get_nearest_unstruct_node_pos {x y} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/smooth_med.tcl]]
proc unstruct_smooth {} {
proc unstruct_smooth_advanced {post_smoother} {
proc smooth_decide_uns_smoother {} {
proc smooth_update_histogram {{title "Element quality"}
proc smooth_select_histo {add} {
proc smooth_show_elements {w intervals args solid color_by_quality} {
proc smooth_update_do_map {} {
proc smooth_something_changed {crit} {
proc smooth_change_crit {post_sm} {
proc smooth_apply {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/solution_med.tcl]]
proc get_mesh_dir { } {
proc solution_select {} {
proc solution_set_solver {ch getbc} {
proc solution_params {} {
proc solution_input {args} {
proc solution_start {} {
proc solution_visual3 {{opts ""} {nhosts ""}} {
proc solution_mom3d {} {
proc movemesh_param_init {} {
proc solution_movemesh {} {
proc movemesh_preferences {} {
proc movemesh_search_on {list fam} {
proc movemesh_eliminate_fams {arr list} {
proc movemesh_families {{dolist all}} {
proc movemesh_update {} {
proc movemesh_smooth_cmd {{geofixed 0}} {
proc movemesh_preferences_cmd {{geofixed 0}} {
proc movemesh_apply {} {
proc movemesh_extract_families {var} {
proc solution_yplus {} {
proc yplus_apply {} {
proc yplus_check_notempty {notempty} {
proc yplus_check_exist {exist} {
proc yplus_result_file {} {
proc yplus_ascii_file {} {
proc yplus_preferences {} {
proc yplus_set_state {} {
proc solution_update_buttons {} {
proc domain_select_some_struct {mess} {
proc get_boco_topo {} {
proc create_trivial_famboco {} {
proc domain_cmp {dom1 dom2} {
proc run_editor {file} { edit_file $file }
proc runxcom {title cmd catfile hitreturn back} {
proc runcom {cmd { catfile "" } } {
proc output_g2u {} {
proc output_s2u {} {
proc output_super {} {
proc get_tetin_file {place} {
proc multiblock_domain_list {{fm ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/sparams.tcl]]
proc solver_params {title variable params} {
proc solver_params_update {w h} {
proc solver_params_load {filename var} {
proc solver_params_save {filename var} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/start_v3p.tcl]]
proc v3_aie_startup {v3opts} {
proc v3_startup {args} {
proc v3_quit {args} {
proc setup_pvm_env {} {
proc setup_misc_v3p_env {} {
proc setup_v3p_first_misc {} {
      proc SelectColor {args} { return [eval SelectColorMenu $args] }
proc setup_v3_gui_misc {} {
proc setup_v3_menu {} {
proc v3_post_menu {w mm args} {
proc setup_v3_menu_m {mm with_start} {
proc setup_v3_batch_interp {} {
       proc $cmd args "\
       proc $cmd args "\
proc v3_batch_interp_update_var {name sub op} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/strdisp_med.tcl]]
proc make_struct_window {w} {
proc initialize_struct_visibility {} {
proc update_struct_visibility {} {
proc uninitialize_struct_visibility {} {
proc str_set_visibility_surfs {what on famvar numvar} {
proc update_str_visible {} {
proc disp_change_overall_visible {what} {
proc disp_set_visible {what how} {
proc disp_pack_list {what} {
proc disp_update_number_list {what} {
proc disp_make_list {w what which} {
proc disp_toggle_number_visible {what name {on ""}} {
proc disp_toggle_domain_visible {what name {on ""}} {
proc disp_list_update_trace {varname key op} {
proc disp_set_option {what} {
proc disp_set_option_one {what num} {
proc disp_shrink_ijk {what reset} {
proc disp_adjacent {} {
proc make_scanp_control {w} {
proc scanp_change_visible {} {
proc scanp_set_dir {d w} {
proc scanp_set_color {} {
proc scanp_set_options {} {
proc scanp_new {} {
proc scanp_select_domain {} {
proc scanp_delete {} {
proc scanp_clear {} {
proc struct_disp_list_clear {} {
proc scanp_move {dir ext} {
proc scanp_update_window {} {
proc scanp_update_cur {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/struct_med.tcl]]
proc pick_struct_entity {what} {
proc struct_diag {} {
proc struct_do_diag {} {
proc struct_do_histo {{title ""} {nbars ""} {min ""} {max ""}
proc struct_plot_histo {w intervals args solid} {
proc struct_copymove {} {
proc struct_copymove_all {all} {
proc struct_select_domains {} {
proc struct_do_copymove {} {
proc struct_move_apply_params {num} {
proc struct_move_node_exact {} {
proc struct_move_node_exact_clear {} {
proc struct_move_node_exact_select {subf} {
proc struct_move_node_exact_doit {} {
proc struct_move_node_screen {} {
proc struct_check_orient {} {
proc struct_reorient {} {
proc struct_do_reorient {} {
proc struct_renumber {} {
proc struct_split {} {
proc struct_merge {} {
proc struct_movenode {} {
proc struct_interp {} {
proc struct_nspack {} {
proc struct_refine {} {
proc struct_dump {} {
proc struct_split_subface {} {
proc struct_setfam {what} {
proc struct_comptopo {{do_assign 1} {symfams ""}} {
proc struct_comptopo_callback {fam is_2_to_1 dom1 ijk11 ijk12 dom2 ijk21 ijk22} {
proc struct_periodic {} {
proc struct_extrude {} {
proc struct_to_unstruct {} {
proc struct_close_all_open_windows {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/sysinfo.tcl]]
proc check_sysinfo {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/ug_med.tcl]]
proc ug_copymove_part {copy} {
proc ug_delete_part {} {
proc ug_delete_part_int {dir name} {
proc ug_select_part {which exists} {
proc ug_run {what {partname ""} {dir ""} {extra_cmds ""} {batchug 0} {do_after 1}} {
proc ug_options {{tt ""} {hd 1}} {
proc ug_pick_part {dir islocal exists} {
proc ug_list_parts {dir} {
proc ug_partname {pn} {
proc ug_select_part_full {which exists} {
proc ug_select_part_full_set {d which name} {
proc nice_partname {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/uncouple_med.tcl]]
proc unstruct_uncouple {{three 0}} {
proc unstruct_bandwidth {} {
proc unstruct_refine {} {
proc unstruct_insert_tetra {mid} {
proc unstruct_tri2quad {} {
proc proj2_to_proj {{back 0}} {
proc unstruct_remesh {} {
proc element_new_to_old {{back 0}} {
proc apply_unstruct_remesh {} {
proc uncouple_uniquify_pairs {pairs} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/unsdisp_med.tcl]]
proc make_unstruct_window {w} {
proc print_node_color_message {} {
proc initialize_unstruct_visibility { { dummy "" } } {
proc uninitialize_unstruct_visibility {} {
proc warn_many_elements {map} {
proc get_uns_type_visible {type} {
proc update_uns_visible_subset {{setact ""}} {
proc update_uns_available {} {
proc update_uns_visible {} {
proc update_uns_disp {{maps ""}} {
proc update_uns_map_node_opts {map} {
proc switch_to_subset {name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/unsmap_med.tcl]]
proc update_family_type {map fvar tvar what force} {
proc unstruct_selection_reset {} {
proc unstruct_selection_new {} {
proc unstruct_selection_del {} {
proc unstruct_selection_edit {} {
proc uns_all_active_types_visible {} {
proc es_clear {} {
proc es_reset {} {
proc es_invert {} {
proc es_settypes {} {
proc es_add {} {
proc es_select_subset {not what} {
proc es_add_subset {} {
proc es_remove {} {
proc es_restrict {} {
proc es_single {} {
proc es_number {} {
proc es_region {} {
proc es_nearpos {} {
proc es_nearnode {} {
proc es_layer_add {} {
proc es_layer_remove {} {
proc es_layer_fams {} {
proc es_layer_types {} {
proc es_fill_to_curve {} {
proc es_add_attached {how} {
proc es_rem_attached {how} {
proc es_rem_manif {} {
proc es_rem_invisible {} {
proc es_rem_normals {} {
proc es_cut_update {how} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/unstruct_med.tcl]]
proc unstruct_split_double_wall { } {
proc unstruct_edges {} {
proc unstruct_max_vertex_degree {} {
proc unstruct_split_prisms {} {
proc unstruct_redistribute_prism_edge {} {
proc unstruct_dissolve_prisms {} {
proc unstruct_internal_faces_options_get {varname} {
proc unstruct_split_internal_faces {} {
proc unstruct_consistent { { count_open "" } { flood_fill 1 } {subset ""}} {
proc unstruct_split_pyras {} {
proc unstruct_coarsen {} {
proc unstruct_merge {} {
proc warn_if_periodic {name} {
proc unstruct_move_node {allow_invert} {
proc unstruct_merge_node {how} {
proc unstruct_move_exact {} {
proc unstruct_move_node_exact_doit {} {
proc unstruct_delete_node {} {
proc unstruct_project_node {how} {
proc unstruct_project_node_reset {} {
proc unstruct_split_node_man {} {
proc check_ok_fix_nonman {map what} {
proc unstruct_split_node_nonman {} {
proc unstruct_fix_node_nonman {} {
proc unstruct_create_element {} {
proc unstruct_do_create_element {} {
proc unstruct_delete_element {} {
proc unstruct_delete_orphan {} {
proc unstruct_delete_blanked {} {
proc erase_flood_fill_lines {} {
proc unstruct_flood_fill { { args "" } } {
proc unstruct_flood_fill_checkfix {} {
proc unstruct_auto_orphan { } {
proc unstruct_family_element {{what sel}} {
proc unstruct_reorient_element {} {
proc unstruct_do_reorient {how} {
proc unstruct_reorder_element {} {
proc unstruct_do_reorder {how} {
proc unstruct_split_element {} {
proc unstruct_split_spanning { { args "" } } {
proc unstruct_split_edge {} {
proc unstruct_swap_edge {try_harder} {
proc unstruct_uniquify_pairs {pairs} {
proc unstruct_swap_auto {} {
proc unstruct_chtype {from to ask_nnode allow_some} {
proc unstruct_linear_to_quadratic {} {
proc unstruct_linear_to_quadratic_advopts {} {
proc unstruct_linear_to_quadratic_check {on} {
proc unstruct_quadratic_to_linear {} {
proc unstruct_convert_hexas {} {
proc unstruct_prism_to_3hexa {} {
proc unstruct_print_info {how} {
proc unstruct_copymove {} {
proc unstruct_do_copymove {} {
proc unstruct_do_copymove_1 {use_map sel_map} {
proc unstruct_move_apply_params {map} {
proc unstruct_extrude {} {
proc unstruct_extrude_select {} {
proc unstruct_extrude_apply {} {
proc unstruct_create_coupling {} {
proc unstruct_clear_coupling {} {
proc unstruct_create_thickness {} {
proc unstruct_clear_thickness {} {
proc unstruct_create_thickness_at_node {} {
proc unstruct_edit_props {} {
proc unstruct_edit_props_new {scr} {
proc unstruct_make_periodic {} {
proc unstruct_remove_periodic {} {
proc unstruct_delete_bars {} {
proc unstruct_spectral_elements {} {
proc unstruct_spectral_elements_apply {} {
proc unstruct_get_thickness {} {
proc unstruct_calculate_targets {} {
proc unstruct_create_immutable {} {
proc unstruct_clear_immutable {} {
proc unstruct_test_smooth {} {
proc unstruct_test_smooth_select_families { what } {
proc unstruct_test_smooth_select_families_edge {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/med_gui/view_med.tcl]]
proc setup_graphics_window {} {
proc med_home {} {
proc make_sane {} {
proc setup_display_menu_func {mb} {
proc med_check_distance {} {
proc med_get_distance {varname} {
proc med_check_location {} {
proc med_get_locations {{num 0} {mess "the points"}} {
proc med_get_plane_normal_3pts {var} {
proc med_get_line_dir_2pts {var} {
proc med_get_line_2pts {pvar dvar {ovar ""} {oval ""}} {
proc med_check_angle {} {
proc med_get_local_location {{varname ""} {do_exp 1} {what "the point"}} {
proc update_screen_label_point {name var} {
proc update_screen_label_point_activate_all {on} {
proc med_check_bbox {} {
proc orient_home_command {} { 
proc orient_command {dir}   { 
proc create_visible_menu {} {
proc update_type_visible {t} {
proc create_view_menu {} {
proc graph_change_shading {} {
proc view_toggle_auto_redraw {} {
proc set_background_command {col} {
proc graphics_loc_command {} {
proc graphics_loc_command_2d {} {
    proc tdv_select_action {w button double shape spec geopos pos x y} {
    proc tdv_move_action {w button pos x y} {
    proc tdv_release_action {w button pos x y {what_mod 1}} {
proc savedview_save {v} {
proc savedview_restore {v} {
proc savedview_save_to_file {v} {
proc savedview_restore_from_file {v} {
proc savedview_edit {v {top ""}} {
proc savedview_done {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/rmi/rmi.tcl]]
proc rmi_mainProc {} {
proc rmi_CreateIntakeLayers {} {
proc rmi_CreateExhaustLayers {} {
proc rmi_ChangeMask {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/rmi/rmi_app.tcl]]
proc rmi_SetMeshParams { what } {
proc rmi_AppGeometryPreview {} {
proc rmi_AppRunBatch {} {
proc rmi_AppMeshPreview {} {
proc rmi_clear_display {} {
proc rmi_display_all_fam {} {
proc rmi_ComputeMesh {} {
proc rmi_ComputeGeometry {} {
proc rmi_SortList { one two } {
proc rmi_ACFluXOutput {what} {
proc rmi_ACFluXFillStationLine {} {
proc rmi_ACFluXDeleteStation {} {
proc rmi_ACFluXCopyStationBocoFiles {bocofiles angle} {
proc rmi_ACFluXCreateStation {} {
proc rmi_OutputMesh {what output_to} {
proc rmi_splines_main {merge_file output_file param_file type_outp} {
proc rmi_spline_create_famlist {} {
proc rmi_spline_append_famdefs {fp tymx spl_list} {
proc rmi_spline_write_nodes {fp spline_list} {
proc rmi_spline_append_sets {fp type_outp} {
proc rmi_add_material_id { bocofiles } {
proc rmi_add_bc { bocofiles family bc } {
proc rmi_valve_is_closed { param_file } {
proc rmi_OutputRunSetup {} {
proc rmi_set_node_map2 { name_node_map n_maps get_node get_node_number \
proc rmi_merge_valve_port { merge_file } {
proc rmi_set_dynamic_files2 { what } {
proc rmi_check_mesh_merged {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/rmi/rmi_batch.tcl]]
proc rmi_Batch {file} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/rmi/rmi_file.tcl]]
proc rmi_File { mess what { w "" } } {
proc rmi_XviewEnd {} {
proc rmi_FileIsSettingFile {file} {
proc rmi_OpenSettings {} {
proc rmi_SaveSettings {} {
proc rmi_SearchForFile { name path } {
proc rmi_GetNumberOfValves {} {
proc rmi_GetTipFamilies {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/rmi/rmi_gui.tcl]]
proc rmi_CreateLogo { w } {
proc rmi_IconifyGui {on} {
proc rmi_CreateMessageMask {} {
proc rmi_CreateFormFile { w } {
proc rmi_CreateFormEngineGeometry { w } {
proc rmi_CreateWinEditGeometry {} {
proc rmi_CreateWinEditGeometryChadice {} {
proc rmi_EditGeometryGui { what } {
proc rmi_ShowValveMeshImage {what num} {
proc rmi_ShowValveTipImage {} {
proc rmi_GetEdgeXY {win x y} {
proc rmi_EdgeValveMeshInput {check num label what {which ""} {label2 ""} {what2 ""} {which2 ""}} {
proc rmi_EdgeValveMeshInputCheck {} {
proc rmi_GetEdgeTipXY {win x y} {
proc rmi_EdgeValveTipInput {check num label what {which ""} {label2 ""} {what2 ""} {which2 ""}} {
proc rmi_DoneValveMeshImage {} {
proc rmi_DoneValveTipImage {} {
proc rmi_CreateWinValveMotionAngle {} {
proc rmi_CreateFieldProcessors { w } {
proc rmi_CreateFormEngineMeshing { w } {
proc rmi_CreateFormEngineMeshingChadice { w } {
proc rmi_ComputeGeometryChadiceGui {} {
proc rmi_ComputeBaseStations {type} {
proc rmi_ComputeTheStations {type} {
proc rmi_SetStationsOnOff {} {
proc rmi_ComputeStationsGui {} {
proc rmi_CreateStations {} {
proc rmi_UpdateStations {} {
proc rmi_DoneStations {} {
proc rmi_ComputeMeshStationsGui {} {
proc rmi_MergeMeshChadiceGui {} {
proc rmi_MergeTheStations {} {
proc rmi_CreateMenuMask { w } {
proc rmi_CreateFileMenu { w } {
proc rmi_CreateEngineMeshingMenu { w } {
proc rmi_CreateEngineGeometryMenu { w } {
proc rmi_CreateWinEdit { what } {
proc rmi_CreateEditMenu { win what which label } {
proc rmi_CreateEditMenuAdvancedTetra {what which label_diag label} {
proc rmi_CreateEditMenuAdvancedPrism {what which label_diag label} {
proc rmi_CreateWinDiagnostic { what } {
proc rmi_CreateDiagnosticMenu { w what which } {
proc rmi_ComputeGeometryGui {} {
proc rmi_ComputeMeshGui {} {
proc rmi_TransientMeshGui {output_to} {
proc rmi_MeshPreviewGui {} {
proc rmi_GeometryPreviewGui {} {
proc rmi_SteadyStateMeshGui {output_to} {
proc rmi_UseCylinderLength {d} {
proc rmi_SteadyStateMesh {output_to} {
proc rmi_MeshPreview {type {output ""}} {
proc rmi_GeometryPreview {} {
proc rmi_SelectObjectFileGui {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/rmi/rmi_misc.tcl]]
proc rmi_SetMotion { what { w "" } } {
proc rmi_SetStaticButtons {} {
proc rmi_IsTetinSelected {} {
proc rmi_CalculateMotion {} {
proc rmi_CalculateStartStop {list use both single} {
proc rmi_CalculateMaxLift {type} {
proc rmi_CalculateMinLift {type} {
proc rmi_SetAskForValveAngle { what w } {
proc rmi_SetIntakeArray { what w } {
proc rmi_SetExhaustArray { what w } {
proc rmi_ResetLayers {what which} {
proc rmi_SetBackup {what reset which {reset2 ""}} {
proc rmi_CheckSettings {} {
proc rmi_CheckSingleInput {} {
proc rmi_ShowMessage {mess {color ""} {font ""}} {
proc rmi_ShowQuestion { what mess } {
proc rmi_Quit {} {
proc rmi_OnOffEdit { what w {w2 ""} {w3 ""}} {
proc rmi_GetPid { pid } {
proc rmi_CalculateTetraRefSize { what } {
proc rmi_CopyOnOff { w } {
proc rmi_CopySetting {} {
proc rmi_CopyStart {{geo ""}} {
proc rmi_CopyActive { what } {
proc rmi_CopyCancel { { what "" } } {
proc rmi_SortBy {} {
proc rmi_SetMenuCurrentValve {what which} {
proc rmi_SetCurrentLiftValve {what which} {
proc rmi_SetMaxLift {which} {
proc rmi_print_image {args} {
proc rmi_CalculateTimestep {type} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/rmi/rmi_params.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/rmi/rmi_win.tcl]]
proc rmiwin_mainProc {} {
proc rmiwin_CreateLogo { w } {
proc rmiwin_CreateButtons { w } {
proc rmiwin_CreateMessageMask { w } {
proc rmiwin_ShowMessage { mess { color "" } { font "" } } {
proc rmiwin_DefineBubbles { w } {
proc rmiwin_StartMed {} {
proc rmiwin_StartProstar {} {
proc rmiwin_StartMakeModelFile {} {
proc rmiwin_MakeModelFile {} {
proc rmiwin_SetupProstarParameters {} {
proc rmiwin_RunProlinkl_x {} {
proc rmiwin_CreateProlXBatchfile {} {
proc rmiwin_CreateMDLBatchfile {} {
proc rmiwin_CheckCommandPaths {} {
proc rmiwin_SelectDirectory { what } {
proc rmiwin_UnsetArrays {} {
proc rmiwin_SearchForRMIProjects {} {
proc rmiwin_SearchForTransferDirectory { path } {
proc rmiwin_OutputTransferDirectory {} {
proc rmiwin_VerifyTransferDirectory {} {
proc rmiwin_GetPid { pid } {
proc rmiwin_ShowQuestion { what mess one two { three "" } } {
proc rmiwin_EnterName { mess var { list "" } } {
proc rmiwin_BuildListBox { win width height } {
proc rmiwin_BuildCanvasBox { win height } {
proc rmiwin_Quit { w } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app/main.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app/scribapp.tcl]]
    proc ::ScribApp { subApp args } {
    proc scrib_app_config_internal {var val} {
    proc scrib_app_config_app_site {name} {
    proc scrib_app_config_app_name {name} {
    proc scrib_app_config_app_version {name} {
    proc scrib_app_config_gui_color {color} {
    proc scrib_app_scrib_data_set {var val} {
    proc scrib_app_scrib_data_get {var} {
    proc scrib_app_scrib_get_value {var} {
    proc scrib_app_use_custom_med_menu {suffix} {
    proc scrib_app_install_custom_med_menu {suffix} {
    proc scrib_app_install_file {file dest} {
    proc scrib_app_install_medgui_file {file} {
    proc scrib_app_set_environment {var val {override 0}} {
    proc scrib_app_button_add {command desc} {
    proc scrib_app_side_button_add {command desc} {
    proc scrib_app_button_shell {} {
    proc scrib_app_data_notebook_begin {} {
    proc scrib_app_data_notebook_end {} {
    proc scrib_app_data_notebook_page_begin {name} {
    proc scrib_app_data_notebook_page_end {} {
    proc scrib_app_data_notebook_regression_page {} {
    proc scrib_app_data_frame_begin {name args} {
    proc scrib_app_data_frame_end {} {
    proc scrib_app_data_comment {args} {
    proc scrib_app_data_comment_t {args} {
    proc scrib_app_data_toggle {args} {
    proc scrib_app_data_choicelist {args} {
    proc scrib_app_data_radio {args} {
    proc scrib_app_data_listbox {args} {
    proc scrib_app_data_tree {args} {
    proc scrib_app_data_entry {args} {
    proc scrib_app_data_meshing_params_button {args} {
    proc scrib_app_data_get {} {
    proc scrib_app_tree_get_separator {tree_var_name} {	
    proc scrib_app_tree_get_path {tree_var_name} {
    proc scrib_app_tree_get_nodes {tree {path root}} {
    proc scrib_app_tree_node_get_data {tree node} {
    proc scrib_app_tree_node_configure_text {tree node text} {
    proc scrib_app_tree_node_configure_image {tree node image} {
    proc scrib_app_status_update {new_text} {
    proc scrib_app_results_view_html {html_file} {
    proc scrib_app_results_view {{ml_file ""}} {
    proc scrib_app_standalone_script {} {
    proc scrib_app_document_self {} {
    proc ::ScribApp::getDataAndProcs {} {
    proc ::ScribApp::get_exported_procs {} {
    proc ::ScribApp::gui_Widget_module {} {
    proc ::ScribApp::regression_is_on {} {
    proc ::ScribApp::regression_test {} {
proc ::ScribApp::main { subApp args } {
    procedures_load
proc ::ScribApp::end {} {;^p;^m
proc ::ScribApp::putdebug {text {color blue}} {
proc ::ScribApp::shell {{dir ""}} {
proc ::ScribApp::applicationIdent {} {
proc ::ScribApp::welcome {} {
proc ::ScribApp::stdout {text {color ""}} {
proc ::ScribApp::help {} {
proc ::ScribApp::help_init {} {
proc ::ScribApp::usage {} {
proc ::ScribApp::native_path {path} {
proc ::ScribApp::is_plat_win {} {
proc ::ScribApp::print_any_license_warnings {} {
proc ::ScribApp::setup_environment {} {
proc ::ScribApp::setup_scriblib {} {
proc ::ScribApp::source_files {filelist {scope global}} {
proc ::ScribApp::env_set_val {name val {override 0}} {
proc ::ScribApp::setup_batch_queue {} {
proc ::ScribApp::setup_ic_xml {} {
proc ::ScribApp::setup_guibase {} {
	process
proc ::ScribApp::configure_appearance {} {
proc ::ScribApp::configure_application {} {
proc ::ScribApp::procedures_load {} {
proc ::ScribApp::gui_create {} {
proc ::ScribApp::gui_button_add {command title} {
proc ::ScribApp::gui_side_button_add {command title} {
proc ::ScribApp::gui_init {} {
proc Y {} { return {proc} }
proc ::ScribApp::gui_resizeSideButtonse {} {
proc ::ScribApp::gui_titleFrame {} {
proc ::ScribApp::gui_dataColumn {} {
proc ::ScribApp::gui_dataFrame_begin {name {activedata ""}} {
proc ::ScribApp::gui_dataFrame_end {} {
proc ::ScribApp::dataFrame_activedata_configure {activedata} {
proc ::ScribApp::dataFrame_activedata_trace {name element op} {
proc ::ScribApp::gui_dataFrame_entry {var desc type def {select 0} \
proc ::ScribApp::gui_dataFrame_toggle {var desc {def 0} {activedata ""}} {
proc ::ScribApp::gui_dataFrame_comment {desc {activedata ""}} {   
proc ::ScribApp::gui_dataFrame_choicelist {var desc choices {def ""} \
proc ::ScribApp::gui_dataFrame_radioset {var desc choices {def ""} \
proc ::ScribApp::gui_dataFrame_listbox {var desc choices dclick_cmd {def ""} {multiple 1} \
proc ::ScribApp::gui_dataFrame_tree {tree_data_name desc mouse1_image_cmd mouse2_image_cmd mouse3_image_cmd \
proc ::ScribApp::gui_dataFrame_meshingParams_post {what how {which_params ""} {activedata ""}} {
proc ::ScribApp::gui_meshingParams_edit {what how which_params} {    
proc ::ScribApp::gui_flexList {title format data {focus_func ""}} {    
proc ::ScribApp::gui_messageWindow {} {
proc ::ScribApp::_file_select {var desc type} {
proc ::ScribApp::_recompute_val {var cmd} {
proc ::ScribApp::userInfo_fileSelect {{mode open}} {
proc ::ScribApp::userInfo_setDefault {{given_file ""}} {
proc ::ScribApp::defaults_register {var def} {
proc ::ScribApp::defaults_restore {} {
proc ::ScribApp::userInfo_load {} {
proc ::ScribApp::userInfo_read {{uifile ""}} {
proc ::ScribApp::userInfo_save {{ask 1}} {
proc ::ScribApp::userInfo_write {uifile} {
proc ::ScribApp::standaloneScript_export {} {
proc ::ScribApp::gui_dataNotebook_begin {} {
proc ::ScribApp::gui_dataNotebook_end {} {
proc ::ScribApp::gui_dataNotebookPage_begin {title} {
proc ::ScribApp::gui_dataNotebookPage_end {} {
proc ::ScribApp::gui_Widget_frame {w {relief flat} {bw 0} {tabdata ""} \
proc ::ScribApp::gui_Widget_frame_guibase {w {relief flat} {bw 0} {tabdata ""} \
proc ::ScribApp::gui_Widget_frame_bwidget {w {relief flat} {bw 0} {tabdata ""} \
proc ::ScribApp::gui_Widget_label_frame {w desc {tabdata ""} {expanddata ""}} {
proc ::ScribApp::gui_Widget_label_frame_guibase {w desc {tabdata ""} {expanddata ""}} {
proc ::ScribApp::gui_Widget_frame_bwidget {w desc {tabdata ""} {expanddata ""}} {
proc ::ScribApp::gui_Widget_label {w text tabdata {activedata ""} {expanddata "0 0"}} {
proc ::ScribApp::gui_Widget_label_guibase {w text tabdata \
proc ::ScribApp::gui_Widget_label_bwidget {w text tabdata \
proc ::ScribApp::gui_Widget_label_image {w image tabdata {activedata ""} {expanddata "0 0"}} {
proc ::ScribApp::gui_Widget_label_image_guibase {w image tabdata \
proc ::ScribApp::gui_Widget_label_image_bwidget {w image tabdata \
proc ::ScribApp::gui_Widget_button {w text command tabdata \
proc ::ScribApp::gui_Widget_button_guibase {w text command tabdata \
proc ::ScribApp::gui_Widget_button_bwidget {w text command tabdata \
proc ::ScribApp::gui_Widget_checkbutton {w desc type tabdata \
proc ::ScribApp::gui_Widget_checkbutton_guibase {w desc var tabdata \
proc ::ScribApp::gui_Widget_checkbutton_bwidget {w desc var tabdata \
proc ::ScribApp::gui_Widget_entry {w var type tabdata \
proc ::ScribApp::gui_Widget_entry_guibase {w var type tabdata \
proc ::ScribApp::gui_Widget_entry_bwidget {w var type tabdata \
proc ::ScribApp::gui_Widget_notebook_open {w {pages ""} {tabdata ""} \
proc ::ScribApp::gui_Widget_notebook_open_guibase {w {pages ""} {tabdata ""} \
proc ::ScribApp::gui_Widget_notebook_open_bwidget {w {pages ""} {tabdata ""} \
proc ::ScribApp::gui_Widget_notebook_close {w} {    
proc ::ScribApp::gui_Widget_notebook_close_guibase {w} {    
proc ::ScribApp::gui_Widget_notebook_close_bwidget {w} {
proc ::ScribApp::gui_Widget_notebook_addpage {w pagew title} {
proc ::ScribApp::gui_Widget_notebook_addpage_guibase {w pagew title} {
proc ::ScribApp::gui_Widget_notebook_addpage_bwidget {w pagew title} {
proc ::ScribApp::gui_Widget_choicelist {w desc var choices tabdata \
proc ::ScribApp::gui_Widget_choicelist_guibase {w desc var choices tabdata \
proc ::ScribApp::gui_Widget_choicelist_bwidget {w desc var choices tabdata \
proc ::ScribApp::gui_Widget_radioset {w desc var choices tabdata \
proc ::ScribApp::gui_Widget_radioset_guibase {w desc var choices tabdata \
proc ::ScribApp::gui_Widget_radioset_bwidget {w desc var choices tabdata \
proc ::ScribApp::gui_Widget_listbox {w desc var items dclick_cmd tabdata \
proc ::ScribApp::gui_Widget_listbox_guibase {w desc var items dclick_cmd tabdata \
proc ::ScribApp::gui_Widget_listbox_bwidget {w desc var items dclick_cmd tabdata \
proc ::ScribApp::_manage_list_var {var val} {
proc ::ScribApp::gui_Widget_tree {w var tabdata mouse1_image_cmd mouse2_image_cmd mouse3_image_cmd \
proc tree_populate {tree tree_var_name} {
proc ::ScribApp::gui_Widget_tree_guibase {w var tabdata mb1_i_cmd mb2_i_cmd mb3_i_cmd \
proc ::ScribApp::gui_Widget_tree_bwidget {w var tabdata mb1_cmd mb2_cmd mb2_cmd {opts ""} {activedata ""} {expanddata ""}} {    
proc ::ScribApp::gui_Widget_configure {w tabdata expandv} {
proc ::ScribApp::gui_Widget_pack {w tabdata} {    
 proc ::ScribApp::bsm_get_plats {} {
 proc ::ScribApp::regression_get_plats {} {
 proc ::ScribApp::regression_get_hosts {} {
 proc ::ScribApp::regression_get_hosts_win {} {
 proc ::ScribApp::regression_get_hosts_sgi64 {} {
 proc ::ScribApp::regression_get_hosts_sol64 {} {
 proc ::ScribApp::regression_get_hosts_linux {} {
 proc ::ScribApp::regression_get_hosts_linux64_amd {} {
 proc ::ScribApp::regression_get_hosts_linux64 {} {
 proc ::ScribApp::regression_get_hosts_hp11 {} {
 proc ::ScribApp::regression_get_hosts_hpit {} {
 proc ::ScribApp::regression_get_hosts_ibm64 {} {
proc ::ScribApp::regressionTest_run {} {
proc ::ScribApp::package_current_state {{tarfile ""}} {
 proc ::ScribApp::bsm_get_plats {} {
 proc ::ScribApp::bsm_get_plats {} {
 proc ::ScribApp::bsm_get_hosts {} {
 proc ::ScribApp::bsm_get_hosts_win {} {
 proc ::ScribApp::bsm_get_hosts_sgi64 {} {
 proc ::ScribApp::bsm_get_hosts_sol64 {} {
 proc ::ScribApp::bsm_get_hosts_linux {} {
 proc ::ScribApp::bsm_get_hosts_linux64_amd {} {
 proc ::ScribApp::bsm_get_hosts_linux64 {} {
 proc ::ScribApp::bsm_get_hosts_hp11 {} {
 proc ::ScribApp::bsm_get_hosts_hpit {} {
 proc ::ScribApp::bsm_get_hosts_ibm64 {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app_aero/config.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app_aero/data_column.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app_aero/procedures.tcl]]
proc app_aero_generate_mesh {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app_bsm_advanced/config.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app_bsm_advanced/data_column.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app_bsm_advanced/procedures.tcl]]
proc app_compute_bolt_hole_dia {val} {
proc app_compute_fillet_length {nodes} {
proc app_bsm_ford_generate_mesh {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app_bsm_generic/config.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app_bsm_generic/data_column.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app_bsm_generic/procedures.tcl]]
proc app_bsm_generic_generate_mesh {} {
proc app_bsm_generic_review_mesh {} {
proc app_bsm_generic_offset_mesh {} {
proc app_bsm_generic_assemble_mesh {} {
proc app_bsm_generic_justdoit {} {
proc app_compute_bolt_hole_dia {val} {
proc app_compute_fillet_length {nodes} {
proc app_bsm_generic_view_results_report {} {
proc check_run_queue {} {
proc get_model_to_run {host} {
proc app_bsm_models {models} {
proc get_free_hosts {} {
proc start_server_client {host model} {
proc run_model {host model} {
proc check_start {host port model} {
proc get_server_client_sock { eshost } {
proc check_finish {rh sock model} {
proc svcHandler {sock host} {
proc read_sock {sock} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app_bsm_tetra/config.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app_bsm_tetra/data_column.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app_example/config.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app_example/data_column.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app_example/procedures.tcl]]
proc app_ex_compute_harder {val} {
proc app_ex_procedure_test {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app_ic_regression/config.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app_ic_regression/data_column.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/app_ic_regression/procedures.tcl]]
proc app_proc_init {} {
proc app_proc_after_gui_configure {} {
proc app_ic_regression_setup_self {} {
proc app_ic_regression_init_models_using_functions {} {
proc app_ic_regression_get_models_using_function {function} {
proc app_ic_regression_get_functions_used_by_models {} {
proc app_ic_regression_get_models_all {} {
proc app_ic_regression_get_models_for_module {module} {
proc app_ic_regression_get_modules_all {} {
proc app_ic_regression_get_models_for_modules {modules} {
proc app_ic_regression_test_models_for_modules {modules} {
proc app_ic_regression_test_models_using_functions {functions} {
proc app_ic_regression_test_models_all {} {
proc app_ic_regression_test_models_active {} {
proc app_ic_regression_test_models {models} {
proc app_ic_regression_view_results_ml_file {{xml_file ""}} {
proc app_ic_regression_get_test_model_hash_key {path} {
proc app_ic_regression_register_tree_node {model_path tree_name node} {
proc app_ic_regression_update_tree_nodes {model_path status {logfile ""}} {
proc app_ic_regression_function_tree_data_set_modules {functions} {
proc app_ic_regression_function_tree_data_set_function_models {functions test_model_paths} {
proc app_ic_regression_module_tree_data_set_modules {modules} {
proc app_ic_regression_module_tree_data_set_module_models {modules test_model_paths} {    
proc app_ic_regression_print_mouse_bindings {} {
proc app_ic_regression_tree_refresh_node_status {tree_name token new_status} {
proc app_ic_regression_tree_refresh_node_image {tree node status} {
proc common_tree_set_model_activity {model_path {given_active ""}} {
proc module_tree_text_action_mouse_button_left {node {given_active ""}} {
proc module_tree_image_action_mouse_button_left {node} {
proc module_tree_text_action_mouse_button_middle {node} {
proc module_tree_image_action_mouse_button_middle {node} {
proc module_tree_text_action_mouse_button_right {node} {
proc module_tree_image_action_mouse_button_right {node} {
proc function_tree_text_action_mouse_button_left {node {given_active ""}} {
proc function_tree_image_action_mouse_button_left {node} {
proc function_tree_text_action_mouse_button_middle {node} {
proc function_tree_text_action_mouse_button_right {node} {
proc function_tree_image_action_mouse_button_middle {node} {
proc function_tree_image_action_mouse_button_right {node} {
proc unused__app_ic_regression_common_tree_get_status {token} {
proc unused__app_ic_regression_results_tree_update_node {model_path status logfile} {
proc unused__common_tree_text_action_mouse_button_left {node} {
proc unused__common_tree_image_action_mouse_button_left {node} { 
proc unused__common_tree_text_action_mouse_button_middle {node} {
proc unused__common_tree_image_action_mouse_button_middle {node} {
proc unused__common_tree_text_action_mouse_button_right {node} {
proc unused__common_tree_image_action_mouse_button_right {node} {
proc unused__app_ic_regression_common_tree_refresh {} {
proc unused__app_ic_regression_module_tree_refresh {} {
proc unused__app_ic_regression_function_tree_refresh {} {
proc unused_app_ic_regression_test_models_active {} {
proc app_ic_regression_test_commands_active {} {
proc unused_app_ic_regression_model_update_status {model new_status} {
proc app_ic_regression_common_tree_data_init_hash {model_paths} {
proc OLD_NON_BQS_app_ic_regression_test_models {models} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/assembly.tcl]]
proc scrib_lib_assembly_famname_get {fileid} {
proc scrib_lib_assembly_naspid_standardize {fileid} {
proc scrib_lib_assembly_filename_naspid_get {filename keys nchar offset {defaultpid 1}} {
proc scrib_lib_assembly_get_shell_families_for_naspid {naspid} {
proc scrib_lib_assembly_set_naspid_on_shell_family {family naspid} {
proc scrib_lib_assembly_assemble_script {} {
proc unused_scrib_lib_assembly_assemble_weld_script {exec_args} {
proc scrib_lib_assembly_familybocos_load {dir {savefile ""} {ext fbc}} {
proc jd_weld {{interactive 0}} {
proc scrib_lib_assembly_midsurface_weld_file { {max_dist 10} {tetin ""} \
proc scrib_lib_assembly_midsurface_mesh {parts {ignore_size 0.1}} {
proc scrib_lib_assembly_midsurface_configure_parts {string} {
proc scrib_lib_assembly_midsurface_create_midsurface {max_dist parts} {
proc scrib_lib_assembly_midsurface_keep_only_largest_conn_region {part} {
proc scrib_lib_assembly_midsurface_create_welds {weld_parts parts {max_projection ""} {tol 0.1}} {
proc scrib_lib_assembly_midsurface_create_welds_old {weld_parts parts {max_projection ""}} {
proc scrib_lib_assembly_average_thickness {part} {
proc scrib_lib_assembly_read_proe_features_file {fname {tol 0.1}} { 
proc scrib_lib_assembly_midsurface_configure_sides {surface_features mid_part_string {max_dist 10}} {
proc scrib_lib_assembly_find_valid_side_midsurfaces {side_surfaces weld_part max_dist} {
proc scrib_lib_assembly_side_surfs_find {part cut_points {feature ""} {max_dist 0.0}} {
proc scrib_lib_assembly_side_surface_cut_curves {part1 part2 weld_side length {tol 0.001} {feature ""}} {
proc scrib_lib_assembly_get_surf_norm_proj_diff {point surface proj_surfaces} {
proc scrib_lib_assembly_get_proj_distance {point proj_surfaces} {
proc scrib_lib_assembly_side_surface_cut_curves_trim {side_curves weld_side side_parts {tol 0.001}} {
proc scrib_lib_assembly_find_shortest_path_between_curves {curves points {feature ""} {max_proj 0}} {
proc scrib_lib_assembly_side_surface_cut_curves_find {side_surfaces weld_side side_parts {tol 0.001}} {
proc scrib_lib_assembly_get_weld_surfaces {side_surfaces cut_curves {valid_sides ""}} {
proc scrib_lib_assembly_get_shorter_proj {points part} {
proc jdsup {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/bolts.tcl]]
proc scrib_lib_bolts_make_ogrid {family} {
proc scrib_lib_bolts_find_connected_mesh {node} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/bsm.tcl]]
proc scrib_lib_bsm_cad_generate_mesh {} {
proc scrib_lib_bsm_offset_mesh {working_dir} {
proc scrib_lib_bsm_assemble_mesh {} {
proc scrib_lib_bsm_justdoit {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/catia.tcl]]
proc scrib_lib_catia_import {model tetin {layers ""} {offset 0} {noshow 0} } {
proc scrib_lib_catia_file_pid_get {file} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/config.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/dormant_patch.tcl]]
proc ic_geo_incident {type names {even_if_dormant 0}} {
proc ic_geo_boundary {type names {outer 0} {even_if_dormant 0} {embedded 0}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/exec.tcl]]
proc scrib_lib_exec_medbatch {job_token base_script med_args exec_args} {
proc scrib_lib_exec_medbatch_cshellscript { replay_file {icemacn ""} } {
proc scrib_lib_exec_inside_of_med {} {
proc scrib_lib_exec_remote {}     { return "REMOTE" }
proc scrib_lib_exec_local {}      { return "LOCAL" }
proc scrib_lib_exec_queued {}     { return "BATCH_QUEUE" }
proc scrib_lib_exec_running {}    { return "RUNNING"    }
proc scrib_lib_exec_terminated {} { return "TERMINATED" }
proc scrib_lib_exec_finished {}   { return "FINISHED"   }
proc scrib_lib_exec_unknown {}    { return "UNKNOWN"    }
proc scrib_lib_exec_misconfig {}  { return "MISCONFIGURED"  }
proc scrib_lib_exec_success {}    { return "SUCCESS"    }
proc scrib_lib_exec_failure {}    { return "FAILURE"    }
proc scrib_lib_exec_job_properties_list {} {
proc scrib_lib_exec_job_tmpfiles_list {} {
proc scrib_lib_exec_succeeded {stat} {
proc scrib_lib_exec_failed {stat} {
proc scrib_lib_exec_register_job {job_token args} {
proc scrib_lib_exec_set_job_datum {job_token datum_name val} {
proc scrib_lib_exec_get_job_datum {job_token datum_name} {
proc scrib_lib_exec_summarize_jobs {} {
proc scrib_lib_exec_remove_job_traces {job_token} {
proc scrib_lib_exec_update_job_status {job_token {status ""}} {
proc scrib_lib_exec_get_job_status {job_token} {
proc scrib_lib_exec_get_unique_job_token {base} {
proc scrib_lib_exec_job_token_list {} {
proc scrib_lib_exec_job_is_running {job_token} {
proc scrib_lib_exec_jobs_are_running {} {
proc scrib_lib_exec_running_job_token_list {} {
proc scrib_lib_exec_remove_traces {} {
proc scrib_lib_exec_kill_job {job_token} {
proc scrib_lib_exec_kill_local_process {pid} {
proc scrib_lib_exec_nuke_job {job_token} {
proc scrib_lib_exec_armageddon {} {
proc scrib_lib_exec_commands_foreach_file {commands files working_dir args {skipto_num 0} } {
proc scrib_lib_exec_medbatch_progpath {{icemacn ""} {interactive 0}} {
proc scrib_lib_exec_build_medscript {bodyscripts outscript} {
proc scrib_lib_exec_running_aienv {} {
proc scrib_lib_exec_med_display_update {} {
proc scrib_lib_exec_med_display_load_params {file} {
proc scrib_lib_exec_script_path_get {script} {
proc scrib_lib_exec_name_validate {filename {extension ""}} {
proc scrib_lib_exec_filenames_validate {files {extension ""}} {
proc scrib_lib_exec_messages_save {fname} {
proc scrib_lib_exec_interrupt {args} {
proc scrib_lib_mess {text {color black} {font ""} {update 1} {show_tail 1}} {
proc unused_scrib_lib_exec_command {command args} {
proc unused_scrib_lib_exec_command_local {commands inputfile outputfile success_checks failure_checks failure_callbacks} {
proc unused_scrib_lib_exec_foreach_file {command cadsys dir_or_file_list {working_dir ""}} {
proc scrib_lib_run_application_batch_exec_direct {path envname extra {logfile ""}} {
proc scrib_lib_exec_application_terminated {} {
proc scrib_lib_exec_generate_script {commands file working_dir args {skipto_num 0} } {
proc scrib_lib_exec_commands_foreach_model {commands file working_dir args {skipto_num 0} } {
proc scrib_lib_exec_build_script {bodyscripts outscript} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/export.tcl]]
proc scrib_lib_export_filename_get {export_dir file extension {status normal}} {
proc scrib_lib_export_cad_byfile {file exec_args} {
proc scrib_lib_export_cad_bydir {} {
proc scrib_lib_export_cad_file {file exec_args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/extrude.tcl]]
proc scrib_lib_extrude_offset_jka {offset_type thickness {family ""} {dir ""}} {
proc scrib_lib_extrude_offset_surfaces_dir {famname dir l} {
proc scrib_lib_extrude_offset {offset {fam MESH} thickness {dir ""} } {    
proc scrib_lib_extrude_do_find_curve {{fam MESH}} {
proc scrib_lib_extrude_main {p1 p2 {l 0} {fam MESH}} {
proc scrib_lib_extrude_offset_surfaces {famname build_topo_tol offset \
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/feature.tcl]]
proc scrib_lib_feature_find_opposite_side_old {srf {bnd ""}} {
proc scrib_lib_feature_find_opposite_side {srf {bnd ""} {ret 0}} {
proc scrib_lib_feature_set_param_crvs_prll {crv_p} {
proc scrib_lib_feature_set_param_crvs {crv_list msh_lmt} {
proc scrib_lib_feature_find_container  {crvs {srfs ""}} {
proc scrib_lib_feature_find_container_math {p_c p_x p_y} {
proc scrib_lib_feature_find_angle_uv {uv1 uv2 uv3} {
proc scrib_lib_feature_find_opposite_curve {crv srf} {
proc scrib_lib_feature_find_angle_between_curves {crv1 crv2 {pnt ""}} {
proc scrib_lib_feature_find_angle_between_surfs {{srf1 ""} {srf2 ""} {crv ""}} {
proc scrib_lib_feature_find_seam_buttons { {surfs ""} {exclusion_surfs ""}}  {
proc scrib_lib_feature_assign_buttons  {groups surface_subset curve_subset mesh_size {check_height 1}} {
proc scrib_lib_feature_find_single_bounded_buttons {surfs {exclusion_surfs ""}} {
proc scrib_lib_feature_find_button_features {{surfs ""}	{exclusion_surfs ""} {butt_type ""}} {
proc scrib_lib_feature_validate_button_features {button_list {curves_subset ""} \
proc scrib_lib_feature_find_bounded_surface {group outer_c {exclusion_surfs ""}} {
proc scrib_lib_feature_find_bounded_surface_old {group outer_curves {num_open_curves 1} {exclusion_surfs ""}} {
proc scrib_lib_feature_find_clingons_old {group {outer_c ""} {mesh_size 10}} {
proc scrib_lib_feature_find_sharpies {group outer_c angle {what surf}} {
proc scrib_lib_feature_find_sliver_surfaces {surfs max_length {min_edge 5} {curvature 30} {ratio 1.1} } {
proc scrib_lib_feature_eval_combine_thin_surfaces {free_surfs {aspect_ratio 200} {min_edge 5} \
proc scrib_lib_feature_find_smart_loop_surfs {surfs mesh_size min_edge boxheight \
proc scrib_lib_feature_handle_smart_regions { groups mesh_size min_edge boxheight \
proc scrib_lib_feature_check_angle_smart_regions { groups {angle 70} {exclusion_surfs ""} } {
proc scrib_lib_feature_find_grouped_inner_outer_regions {inner_loops free_surfs} {
proc scrib_lib_feature_eval_fix_collisions {inner_loops free_surfs tolerance min_split_tol {curvature 60}} {
proc scrib_lib_feature_find_sharp_points {group {max_angle 30} {outer_c ""}} {
proc scrib_lib_feature_boundary_points {surf} {
proc scrib_lib_feature_detection { features ratio number_rings {bolt_args ""} {flange_args ""} \
proc sup {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/fillet.tcl]]
proc scrib_lib_fillet_find_surf {
proc scrib_lib_fillet_find {a_min a_max l_min {surfs ""}} {
proc scrib_lib_fillet_find_arc_old {cr a_min a_max l_min} {
proc scrib_lib_fillet_find_arc {cr a_min a_max l_min {tol -1}} {
proc scrib_lib_fillet_continues {fllt_type} {
proc scrib_lib_fillet_continues_tri {tri_lst tri_nm sng_nm tri_crv fllt_type} {
proc scrib_lib_fillet_crt_loop {} {
proc scrib_lib_fillet_find_by_arc {{surfs ""} {l_min 1} {l_max  20} {min_curvature 15} \
proc scrib_lib_fillet_button_ali { } { 
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/flanges.tcl]]
proc scrib_lib_flanges_find { {max_flange_depth 10} {max_curvature 20} \
proc scrib_lib_flanges_orient_sides {opposite_side_ret} {
proc scrib_lib_flange_find_ali {} {
proc scrib_lib_flanges_assign_free_curves {surfs free_curves back_curves} {
proc scrib_lib_flanges_cut_out_notches {surfs notch_width} {
proc scrib_lib_flanges_check_sides {sing_sides {ignore_tol 0}} {
proc scrib_lib_flanges_adjust_connector_points {ixp sidex {allow_open 0}} {
proc scrib_lib_flanges_llength_valid_curves {curves ignore_tol} {
proc scrib_lib_flanges_get_valid_curves {curves ignore_tol} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/geo.tcl]]
proc scrib_lib_geo_import_mesh {file {savefile ""}} {
proc scrib_lib_geo_cadsys_extension_get {cadsys} {
proc scrib_lib_geo_meshing_params_verbose {param} {
proc scrib_lib_geo_meshing_params_list {} {
proc scrib_lib_geo_meshing_params_set {} {
proc scrib_lib_geo_famname_find {fileid} {
proc scrib_lib_geo_famname_find_bycoords {fileid coords} {
proc scrib_lib_geo_distance_from_surfaces {surface_families coords {surfaces ""}} {
proc scrib_lib_geo_nearest_surface {coords} {
proc scrib_lib_geo_nearest_surface_list {coords surfaces} {
proc scrib_lib_geo_distance_from_curves {curve_families coords {curves ""}} {
proc scrib_lib_geo_nearest_surface_point_pair {points max_dist} {
proc scrib_lib_geo_nearest_curve_list {coords curves} {
proc scrib_lib_geo_nearest_point_list {coords {points ""} } {
proc scrib_lib_geo_unload_reload {} {
proc scrib_lib_geo_synch_families {{tetinname ""} {domainname ""}} {
proc scrib_lib_geo_cad_to_tetin_load {cadsys model } {
proc scrib_lib_catia_to_tetin_load {catiafile tetinfile layers} {
proc scrib_lib_geo_filename_naspid_get {filename keys nchar offset {defaultpid 1}} {
proc scrib_lib_geo_find_part_boundary_single {{surfs ""}} {
proc scrib_lib_geo_get_connected_entities {what entities} {
proc scrib_lib_geo_get_unattached_curves { curves } {
proc scrib_lib_geo_get_unattached_points { points } {
proc scrib_lib_geo_get_single_curves { curves } {
proc scrib_lib_geo_get_double_curves { curves } {
proc scrib_lib_geo_sort_by_crvs_length {curve_list_olists {args ""}} {
proc scrib_lib_geo_sort_by_srf_area {surf_list {args ""}} {
proc scrib_lib_geo_sort_by_curvature {surf_list {args ""}} {
proc scrib_lib_geo_make_conn_loops_ben {curves} {
proc scrib_lib_geo_make_conn_loops {curves} {
proc scrib_lib_geo_make_conn_regions {type entities} {
proc scrib_lib_geo_order_conn_curves {curves {ret_first_last_pts 0} {start_pt ""}} {
proc scrib_lib_geo_make_conn_buttons {loop {exclusion_surfs ""}} {
proc scrib_lib_geo_internal_surface_boundary_exists {surfaces} {
proc scrib_lib_geo_internal_surface_boundary {surf {not_single 0}} {
proc scrib_lib_geo_find_internal_surfaces { loop surrounding_surfs {outer_curves ""} {exclusion_surfs ""}} {
proc scrib_lib_geo_find_internal_outer_loops {surfs {not_single 0} {all_boundary 0}} {
proc scrib_lib_geo_remove_points_at_single_arc_ends {} {
proc scrib_lib_geo_remove_points_at_single_ends {} {
proc scrib_lib_geo_find_dumb_points {angle {points ""} {dormant 1} } {
proc scrib_lib_geo_average_thickness {fam} {
proc scrib_lib_geo_curve_proximity_tol {curve_set1 curve_set2 tol} {
proc scrib_lib_geo_get_multiple_curves {{part ""}} {
proc scrib_lib_geo_get_corners_row_surfaces { family } {
proc scrib_lib_geo_get_corners_row_internal_surfaces { surfaces {curves ""} {return_internal_if_all_connected 1} } {
proc scrib_lib_geo_get_sides_row_surfaces { family {projection_parts ""}} {
proc scrib_lib_geo_find_side_midsurfaces {{part ""} {max_dist 10} {surfaces ""} {remove_sides 0}} {
proc scrib_lib_geo_get_solid_type_old { max_dist part {make_subsets 0}} {
proc scrib_lib_geo_filter_curves {angle part tol} {
proc scrib_lib_geo_break_into_subsets_by_angle {tol angle {part ""} {make_subsets 0}} {
proc scrib_lib_geo_get_solid_type {max_dist part {make_subsets 0} {simple_method 0}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/glue.tcl]]
proc scrib_lib_glue_assembly_filename_naspid_get {filename} {
proc scrib_lib_glue_get_working_directory {} {
proc scrib_lib_glue_get_execution_args_from_gui {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/hyperwidgets.tcl]]
proc scrib_lib_hyperwidget_regression_notebook_page {} {
proc scrib_lib_hyperwidget_pidnaming_info {} {
proc scrib_lib_hyperwidget_meshing_info {} {
proc scrib_lib_hyperwidget_welding_info {} {
proc scrib_lib_hyperwidget_offset_info {} {
proc scrib_lib_hyperwidget_feature_info {} {
proc scrib_lib_hyperwidget_runtimefile_info {} {
proc scrib_lib_hyperwidget_import_info {} {
proc scrib_lib_hyperwidget_nastranexport_info {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/iges.tcl]]
proc scrib_lib_iges_import {iges tetin {mode none}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/loops.tcl]]
proc scrib_lib_loops_find_smart_loop_surfs {surflist meshsize boxheight {factor 1}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/mail.tcl]]
proc scrib_lib_mail_send_message {recipients subject message} {
proc scrib_lib_mail_send_filebody {recipients subject bodyfile} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/math.tcl]]
proc scrib_lib_math_is_int {l} {
proc scrib_lib_math_is_integer {val} {
proc scrib_lib_math_is_real {val} {
proc scrib_lib_math_is_real {l} {
proc scrib_lib_math_is_int_real {l} {
proc scrib_lib_math_is_int_real_jka {val} {
proc scrib_lib_math_make_real {l} {
proc scrib_lib_math_is_point {val} {
proc scrib_lib_math_std_unit_vector {dir} {
proc scrib_lib_math_vector_from_points {p0 p1} {
proc scrib_lib_math_center_point {args} {
proc scrib_lib_math_vector_sum {a b} {
proc scrib_lib_math_vector_vmult {a b} {
proc scrib_lib_math_vector_smult {a b} {
proc scrib_lib_math_angle_between_vectors {a b} {
proc scrib_lib_math_vector_mult {v k} {
proc scrib_lib_math_vector_length {v} {
proc scrib_lib_math_distance {a b} {
proc scrib_lib_math_distance_to_line {p1 p2 p3} {
proc scrib_lib_math_is_point_on_segment {p1 p2 p3 tol} {
proc scrib_lib_math_vector_nrm {v} {
proc scrib_lib_math_vector_sub {a b} {
proc scrib_lib_math_transform_cs {x y z center p0} {
proc scrib_lib_math_transform_cs_back {x y z center p_n} {
proc scrib_lib_math_mult_matrixes {M1 M2} {
proc scrib_lib_math_transp_matrix {M} {
proc _old_val_math_init {} {
proc scrib_lib_math_dist_get {source target} {
proc scrib_lib_math_get_val {{mode ""}} {
proc scrib_lib_math_pi {} { return [scrib_lib_math_get_val pi] }
proc scrib_lib_math_dbl_max {} { return [scrib_lib_math_get_val dbl_max] }
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/mesh_cleanup.tcl]]
proc clean_bad_mesh_problems {subset } {
proc find_max_edge {subset} {
proc distance_between_two_XYZ_vals {pt1 pt2} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/mesh_direct.tcl]]
proc scrib_lib_meshdirect_bolt_holes {d1 d2 {number_of_nodes ""} {ratio 1} {width 2} {loops ""} } {
proc scrib_lib_meshdirect_remove_unclosed_loops { loops } {
proc scrib_lib_meshdirect_get_number_of_els {curves} {
proc scrib_lib_meshdirect_remove_sharp_loops { loops {max_angle 60} } {
proc scrib_lib_meshdirect_curve_curvature {curve} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/offset.tcl]]
proc scrib_lib_offset_assemble_mesh_byfile {file exec_args} {
proc scrib_lib_offset_material_mapping_read {matname {filename ""}} {
proc scrib_lib_offset_material_mapping_filename {working_dir} {
proc scrib_lib_offset_material_mapping_write {inputfilename {outputfilename ""}} {
proc scrib_lib_offset_find_offset_curve {{fam MESH} {curves ""}} {
proc scrib_lib_offset_do_find_curve_dir {{fam MESH}} {
proc scib_lib_offset_get_dir {p1 p2} {
proc scrib_lib_offset_find_element_normal {p1 p2 {l 0} {fam MESH}} {
proc scrib_lib_offset_find_orient_surface_normal {p1 p2 {l 0}} {
proc scrib_lib_offset_from_file {naspid offset_file} {
proc scrib_lib_offset_mesh {direction thickness} {
proc scrib_lib_offset_param_material_property_add {param_file mat_id} {
proc scrib_lib_offset_param_material_property_channel_add {fp mat_id} {
proc scrib_lib_offset_param_shell_properties {param_file material_mapping_file} {
proc scrib_lib_offset_mesh_bydir {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/output.tcl]]
proc scrib_lib_output_nastran {mesh boco output {nasform 0}} {
proc scrib_lib_output_starcd {mesh boco output} {
proc scrib_lib_output_thickness_set_nastran {familyname naspid thickness \
proc scrib_lib_output_save_edited_mesh_nastran {} {
proc scrib_lib_output_nastran_params_local {working_directory {force_ovwrt 0}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/quad.tcl]]
proc scrib_lib_quad_doit {{extra ""} {try_twice 1} } {
proc scrib_lib_quad_create_loops_for_each_surface {{fam MESH} {surfs ""} {points ""}} {
proc scrib_lib_quad_create_loops_for_surface {surf {fam MESH} {points ""}} {
proc scrib_lib_quad_create_loops_from_curves {{fam MESH} {curves ""} {surfs ""}} {
proc scrib_lib_quad_create_loop_for_group {fam surfs {points ""} {corners ""} } {
proc scrib_lib_quad_find_surfs_from_loops { loop_list } {
proc scrib_lib_quad_mesh { {fam MESH} {surfs ""} } {
proc scrib_lib_quad_mesh_try2 {failed_loops {fam MESH} {surfs ""}} {
proc scrib_lib_quad_mesh_try3 {failed_loops {fam MESH} {surfs ""}} {
proc scrib_lib_quad_clean_debug_save {} {
proc scrib_lib_quad_clean {{bolt_hole_bar_fam HOLE} {outer_ring_bars OUTER_RING} } {
proc scrib_lib_quad_check_ogrid {nodes fam} {
proc scrib_lib_quad_connected_to_nodes {nodes {make_ogrid 0} {num_layers 2}} {
proc scrib_lib_quad_reorganize_connections { base base_type diag diag_type node \
proc scrib_lib_quad_remesh_by_quality {fams types metric {quality_limit 0.6} {eltype 2} {ignore_dim 0} } {
proc scrib_lib_quad_remesh_bad_elements_by_quality {fams types metric {quality_limit 0.6} {eltype 2} {ignore_dim 0} } {
proc scrib_lib_quad_smooth_by_quality {fams types metric {quality_limit 0.5} {additional_args ""}} {
proc scrib_lib_quad_remesh_by_diagnostic {diagnostic fams types nlayers {eltype 2} {ignore_dim 0}} {
proc scrib_lib_quad_find_offset_quad_layers { num_layers bar_fam } {
proc scrib_lib_quad_merge_ring_nodes {boltfam tol} {
proc scrib_lib_quad_remove_bars_by_feature_angle {fams types angle} {
proc scrib_lib_quad_convert_tri_quad {fams {frozenfams ""}} {
proc scrib_lib_quad_remesh_bad_elements {fams types metric {quality_limit 0.6} \
proc scrib_lib_quad_laplace_smooth {fams {upto 1.0} } {
proc scrib_lib_quad_add_attached_points_to_loops {pt_list max_dist} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/quality.tcl]]
proc scrib_lib_quality_check { } {    
proc scrib_lib_quality_check2 { diagnostic_range } {
proc scrib_lib_quality_surface_mesh_custom_standard_old {} {
proc scrib_lib_quality_surface_mesh_custom_standard {} {
proc scrib_lib_quality_show {} {
proc scrib_lib_quality_diagnostic_type_delete {type {subset all} {verbose ""}} {
proc scrib_lib_quality_disconnected_bars_delete {} {
proc scrib_lib_quality_hanging_bars_delete {} {
proc scrib_lib_quality_duplicate_elements_delete {} {
proc scrib_lib_quality_single_multiple_delete {} {
proc scrib_lib_quality_standard_weights_custom {} {
proc scrib_lib_quality_standard_weights {metric} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/queue.tcl]]
proc scrib_lib_queue_medbatch_submit {bqs script args {logfile ""}} {
proc scrib_lib_queue_kill_job {job_token} {
proc scrib_lib_exec_command_queue {command args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/queueing.tcl]]
proc scrib_lib_queueing_one_model_many_hosts {hosts} {
proc scrib_lib_queueing_many_models_one_host {host models} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/regression.tcl]]
proc scrib_lib_regression_model_submit_to_test_queue { queue_id model_dir plat logfile comparison_type } {
proc scrib_lib_regression_model_test { model_dir platform logfile {report_bugs 0} {comparison_type ""} {xml_report ""} } {
proc scrib_lib_regression_model_module {model_dir} {
proc scrib_lib_regression_generate_script {prefs_file remote_host {comparison_type ""}} {
proc scrib_lib_regression_preferences_file {model_dir} {
proc scrib_lib_regression_model_preferences_get {model_dir} {
proc scrib_lib_regression_preferences_representative_cmds {prefs_file} {
proc scrib_lib_regression_preferences_replay {prefs_file} {
proc scrib_lib_regression_preferences_std_output_file {prefs_file} {
proc scrib_lib_regression_preferences_output_type {prefs_file} {
proc scrib_lib_regression_preferences_input_geo_file {prefs_file} {
proc scrib_lib_regression_preferences_input_msh_file {prefs_file} {
proc scrib_lib_regression_preferences_input_blk_file {prefs_file} {
proc scrib_lib_regression_preferences_input_fbc_file {prefs_file} {
proc scrib_lib_regression_preferences_input_par_file {prefs_file} {
proc unused_scrib_lib_regression_preferences_output_type {prefs_file} {
proc scrib_lib_regression_preferences_output_file {prefs_file} {
proc scrib_lib_regression_preferences_output_geo_file {prefs_file} {
proc scrib_lib_regression_preferences_std_geo_file {prefs_file} {
proc scrib_lib_regression_preferences_output_msh_file {prefs_file} {
proc scrib_lib_regression_preferences_std_msh_file {prefs_file} {
proc scrib_lib_regression_preferences_ansys_input_file {prefs_file} {
proc scrib_lib_regression_preferences_std_ansys_input_file {prefs_file} {
proc scrib_lib_regression_preferences_dyna_input_file {prefs_file} {
proc scrib_lib_regression_preferences_std_dyna_input_file {prefs_file} {
proc scrib_lib_regression_preferences_nastran_input_file {prefs_file} {
proc scrib_lib_regression_preferences_std_nastran_input_file {prefs_file} {
proc scrib_lib_regression_preferences_abaqus_input_file {prefs_file} {
proc scrib_lib_regression_preferences_std_abaqus_input_file {prefs_file} {
proc scrib_lib_regression_preferences_output_interface {prefs_file} {
proc scrib_lib_regression_preferences_std_output_interface {prefs_file} {
proc scrib_lib_regression_preferences_output_blk_file {prefs_file} {
proc scrib_lib_regression_preferences_std_blk_file {prefs_file} {
proc scrib_lib_regression_preferences_output_fbc_file {prefs_file} {
proc scrib_lib_regression_preferences_std_fbc_file {prefs_file} {
proc scrib_lib_regression_preferences_output_par_file {prefs_file} {
proc scrib_lib_regression_preferences_std_par_file {prefs_file} {
proc scrib_lib_regression_preferences_comparison_type {prefs_file} {
proc scrib_lib_regression_run_comparison_internal {output_type outout_file std_output_file comparison_type} {
proc scrib_lib_regression_run_comparison {prefs_file {comparison_type ""}} {
proc scrib_lib_regression_preferences_exectime {prefs_file} {
proc scrib_lib_regression_preferences_maxtime {prefs_file} {
proc scrib_lib_regression_exectime {what} {
proc scrib_lib_regression_compare_exectime {prefs_file regression_log} { 
proc scrib_lib_regression_preferences_exectime {prefs_file} {
proc scrib_lib_regression_module_maintainers {module prefs_file} {
proc scrib_lib_regression_cvs_module_maintainers {module} {    
proc scrib_lib_regression_preferences_module_maintainers {prefs_file} {
proc scrib_lib_regression_report_bug {module casemodel plat maintainers bugfile} {
proc scrib_lib_regression_get_ic_procs_from_replay {replay_file} {
proc scrib_lib_regression_get_platforms {{site ""}} {
proc scrib_lib_regression_set_site {site} {
proc scrib_lib_regression_get_site {} {
proc scrib_lib_regression_get_icemacn_for_platform { platform } {
proc scrib_lib_regression_get_host {plat {site ""}} {
proc scrib_lib_regression_get_plat { host {site ""} } {
proc scrib_lib_regression_kill_proc {pid max_exec_time} {
proc notyet_scrib_lib_regression_bsm_test {} {
proc scrib_lib_regression_bsm_test_commands {commands platforms report_bugs run_comparison} {
proc scrib_lib_regression_bsm_test_command {command platform report_bugs run_comparison} {
proc scrib_lib_regression_reg_test {replay_file} {
proc scrib_lib_regression_err_catch {plat module} {
proc scrib_lib_regression_rm_empty_log {plat module} {
proc unused__scrib_lib_regression_test_models {models platforms {report_bugs 0} {comparison_type ""} {xml_report ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/remote.tcl]]
proc scrib_lib_remote_get_client {remote_host server_port} {    
proc scrib_lib_remote_client_exec {job_token remote_host server_port cshellscript logfile args} {
proc scrib_lib_remote_kill_job {job_token} {
proc scrib_lib_remote_rsh_exec {job_token remote_host cshellscript logfile args} {
proc unused_scrib_lib_remote_start_job {job_token remote_host script_file logfile server_port} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/scriblib.tcl]]
    proc ::ScribLib::get_exported_procs {} {
    proc ::ScribLib {{args ""}} {
    proc scrib_lib_source_files_set {filelist} {
    proc scrib_lib_source_files_get {} {	
proc ::ScribLib::_init {{args ""}} {
    proc ::ScribLib::putdebug {text} {
proc ::ScribLib::_get_lib_path {} {
proc ::ScribLib::_read_config {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/setup.tcl]]
proc scrib_lib_setup_source_files {{filelist ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/srver.tcl]]
proc doService {sock msg} {
proc  svcHandler {sock} {
proc read_stdout {wsock} {
proc kill_proc {} {
proc accept {sock addr port} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/stuff.tcl]]
proc interrupt {what args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/tetin.tcl]]
proc scrib_lib_tetin_import {model tetin} {
proc scrib_lib_tetin_get_thickness_from_file {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/tetra.tcl]]
proc scrib_lib_tetra_find_perim_curves { bad_surfs } {
proc scrib_lib_tetra_partial_mesh { bad_surfs failed_loops quad_args {mesh_size ""} {error 0} } {
proc scrib_lib_tetra_mesh { } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/unigraphics.tcl]]
proc scrib_lib_unigraphics_import {model tetin {levels ""} {offset 0} {noshow 0} } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/uns.tcl]]
proc scrib_lib_uns_reorient_normals_family {f} {    
proc scrib_lib_uns_reorient_normals {} {
proc scrib_lib_uns_reorient_map_consistently_in_direction {name dir} {
proc scrib_lib_uns_load_dir {{dir ""} {extension uns}} {
proc scrib_lib_uns_load_files {cad_sys cad_dir {mesh_dir ""} {mesh_extension ".uns"}\
proc scrib_lib_uns_unload_reload {} {    
proc scrib_lib_uns_remesh_byfam {fam {nlayers 0}} {
proc scrib_lib_uns_review_interactive {file exec_args} {
proc scrib_lib_uns_remove_tempfiles {{dir ""}} {
proc scrib_lib_uns_review_interactive_dir {{idir ""}} {
proc scrib_lib_uns_put_mesh_in_family {target_family} {
proc scrib_lib_uns_get_nodes_between_fams {subset_name} {
proc scrib_lib_uns_get_connected_bar_regions {subset_name} {
proc scrib_lib_uns_subset_get_nodes {subset_name} {
proc scrib_lib_uns_number_type {subset_name type} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/utils.tcl]]
proc scrib_lib_utils_source_files {filelist} {
proc scrib_lib_utils_native_path {path} {
proc scrib_lib_utils_iswin {} {
proc scrib_lib_utils_logfile {dir {pre ""}} {
proc scrib_lib_utils_slurp_file_into_list {file} {
proc scrib_lib_utils_append_text_to_file {text file} {
proc scrib_lib_utils_remove_files_not_in_list {files_to_keep} {
proc scrib_lib_utils_record_append {text {close 0}} { return }
proc scrib_lib_utils_string_to_path {title} {
proc scrib_lib_utils_string_pad_to_length {string length} {
proc scrib_lib_utils_strings_pad_equal {strings} {
proc scrib_lib_utils_report_message {text {color ""}} {
proc scrib_lib_utils_putdebug {text} { }
proc scrib_lib_utils_file_copy {args} {
proc scrib_lib_utils_list_remove_element {list element} {
proc scrib_lib_utils_list_remove_duplicate {names} {
proc scrib_lib_utils_list_remove_duplicated {list} {
proc scrib_lib_utils_list_uniquify {list} {
proc scrib_lib_utils_verbose_number {ind} {
proc scrib_lib_utils_format_array {given_array_name {print_to_this_array ""}} {
proc scrib_lib_utils_ensure_same_families {} {
proc scrib_lib_utils_list_get_duplicate {list} {
proc scrib_lib_utils_list_olists_remove_smaller_items {list dup} {
proc scrib_lib_utils_list_olists_combine_dup_items {list {dup ""}} {
proc scrib_lib_utils_list_olists_get_duplicate {list} {
proc scrib_lib_util_make_relative_path_absolute {base_path relative_path} {
proc scrib_lib_utils_remove_from_grouped {groups free_surfs} {
proc scrib_lib_utils_files_in_directory {dir {extension ""} {allow_zipped 1}} {
proc scrib_lib_utils_unzip_files {files} {
proc scrib_lib_utils_unzip_file {file} {
proc scrib_lib_utils_zip_files {files mode} {
proc scrib_lib_utils_zip_file {file mode} {
proc scrib_lib_utils_strip_down_list {list} {
proc scrib_lib_utils_mkdir {dir} {
proc scrib_lib_utils_file_to_mess {file} {
proc scrib_lib_utils_get_valid_token {token_els separator} {
proc scrib_lib_utils_validate_string {string} {
proc scrib_lib_utils_date_string {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/variables.tcl]]
proc scrib_lib_feature_read_variable_file {file} {
proc scrib_lib_feature_set_variable_file {tetin} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/welding.tcl]]
proc scrib_lib_welding_line_parse_coords_biwasm {line} {
proc scrib_lib_welding_line_parse_components_biwasm {line} {
proc scrib_lib_welding_line_parse_biwasm {fp line} {
proc scrib_lib_welding_shadow_family_name {naspid} {
proc scrib_lib_welding_execute_one_weld_shadow {import_type ppname coords compfamnames} {
proc scrib_lib_welding_execute_one_weld {import_type ppname coords compfamnames result_fam {radius ""}} {
proc scrib_lib_welding_icem_weld_type {import_type} {
proc scrib_lib_welding_token_is_tag_vif {token} {
proc scrib_lib_welding_weld_type_vif {line} {
proc scrib_lib_welding_line_parse_id_index_vif {line} {
proc scrib_lib_welding_line_parse_coords_index_vif {line} {
proc scrib_lib_welding_line_parse_coords_vif {line} {
proc scrib_lib_welding_line_parse_components_index_vif {line} {
proc scrib_lib_welding_line_parse_components_vif {line} {
proc scrib_lib_welding_line_is_comment_vif {line} {
proc scrib_lib_welding_line_parse_vif {fp line} {
proc scrib_lib_welding_line_parse {mode fp line} {
proc scrib_lib_welding_spot_import_exec {mode filename {args ""}} {
proc scrib_lib_welding_weld_targets_get {point partlist} {
proc scrib_lib_welding_component_lookup_by_coords {coords components} {
proc scrib_lib_welding_weld_is_invalid {coords trg_family} {
proc scrib_lib_welding_prepoint_create {ppname src_family coords {pt_family ""}} {
proc scrib_lib_welding_spot_params_set {src_family ppname targ_family result_fam {extra_args}} {
proc scrib_lib_welding_directives_exec {} {
proc scrib_lib_welding_spot_main {mode weldfile {args ""}} {
proc scrib_lib_welding_spot_script {{base welding}} {
proc scrib_lib_welding_report_line_status {mode line status} {
proc scrib_lib_welding_report_summary {} {    
proc scrib_lib_welding_report_append {text {close 0}} {
proc scrib_lib_welding_rbe3_family_name {weld_family} {
proc scrib_lib_welding_set_nastran_properties {root_fam} {
proc scrib_lib_welding_set_nastran_rbe2_properties {weld_fam} {
proc scrib_lib_welding_mastic_material_id {} { return 1000 }
proc scrib_lib_welding_set_nastran_rbe3_properties {weld_fam} {
proc scrib_lib_welding_param_mastic_properties {param_file mat_id} {
proc scrib_lib_welding_get_tris_attached_to_welds { weld_family } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/lib/xml.tcl]]
proc scrib_lib_xml_mesh_report_write {domain_file xmlfile args} {
proc scrib_lib_xml_assembly_report_write { infiles informat outfile outformat args } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/med_menus/menus_example.tcl]]
proc file_savenas_real { } {
proc file_savenas { } {
proc file_exitnas { } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/med_menus/menus_SM.tcl]]
proc file_savenas { } {
proc file_exitnas { } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/scripts/assembly.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/scripts/mesh_assembly.tcl]]
proc app_sm_assemble_uns {{extension uns}} {    
proc app_sm_assemble_tin {{extension tin}} {    
proc app_sm_assemble_bc {{extension fbc}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/scripts/mesh_offset.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/scripts/mesh_quad.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/scripts/mesh_review.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/scripts/mesh_tet.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/scripts/mesh_tetra.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/scripts/welding.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/scripts/wrapper.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/server/scribserver.tcl]]
proc scrib_server_port_default {} { return "6791" }
proc scrib_server_open_port {server_port_start {server_port_end 49151}} {
proc scrib_server_accept_socket {sock addr port} {    
proc scrib_server_accept_input {sock} {    
proc scrib_server_get_datum {what} {
proc scrib_server_set_datum {what val} {
proc scrib_server_unset_data {} {
proc scrib_server_print_data {} {
proc scrib_server_close_cleanly {} {
proc help {} {    
proc quit {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/scrib/server/setup.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/auto.tcl]]
proc auto_reset {} {
proc tcl_findLibrary {basename version patch initScript enVarName varName} {
proc auto_mkindex {dir args} {
proc auto_mkindex_old {dir args} {
    proc init {} {
    proc cleanup {} {
proc auto_mkindex_parser::mkindex {file} {
proc auto_mkindex_parser::hook {cmd} {
proc auto_mkindex_parser::slavehook {cmd} {
proc auto_mkindex_parser::command {name arglist body} {
proc auto_mkindex_parser::commandInit {name arglist body} {
    proc $fakeName $arglist $body
proc auto_mkindex_parser::fullname {name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/dde1.1/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/history.tcl]]
proc history {args} {
 proc tcl::HistAdd {command {exec {}}} {
 proc tcl::HistKeep {{limit {}}} {
 proc tcl::HistClear {} {
 proc tcl::HistInfo {{num {}}} {
 proc tcl::HistRedo {{event -1}} {
 proc tcl::HistIndex {event} {
 proc tcl::HistEvent {event} {
 proc tcl::HistChange {cmd {event 0}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/http/http.tcl]]
proc http::register {proto port command} {
proc http::unregister {proto} {
proc http::config {args} {
proc http::Finish { token {errormsg ""} {skipCB 0}} {
proc http::reset { token {why reset} } {
proc http::geturl { url args } {
proc http::data {token} {
proc http::status {token} {
proc http::code {token} {
proc http::ncode {token} {
proc http::size {token} {
proc http::error {token} {
proc http::cleanup {token} {
proc http::Connect {token} {
proc http::Write {token} {
 proc http::Event {token} {
 proc http::CopyStart {s token} {
 proc http::CopyDone {token count {error {}}} {
 proc http::Eof {token} {
proc http::wait {token} {
proc http::formatQuery {args} {
 proc http::mapReply {string} {
 proc http::ProxyRequired {host} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/http/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/http1.0/http.tcl]]
proc http_config {args} {
 proc httpFinish { token {errormsg ""} } {
proc http_reset { token {why reset} } {
proc http_get { url args } {
proc http_data {token} {
proc http_status {token} {
proc http_code {token} {
proc http_size {token} {
 proc httpEvent {token} {
 proc httpCopyStart {s token} {
 proc httpCopyDone {token count {error {}}} {
 proc httpEof {token} {
proc http_wait {token} {
proc http_formatQuery {args} {
 proc httpMapReply {string} {
 proc httpProxyRequired {host} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/http1.0/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/init.tcl]]
	proc envTraceProc {lo n1 n2 op} {
    proc tclLog {string} {
proc unknown args {
proc auto_load {cmd {namespace {}}} {
proc auto_load_index {} {
proc auto_qualify {cmd namespace} {
proc auto_import {pattern} {
proc auto_execok name {
proc auto_execok name {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/ldAout.tcl]]
proc tclLdAout {{cc {}} {shlib_suffix {}} {shlib_cflags none}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/msgcat/msgcat.tcl]]
proc msgcat::mc {src args} {
proc msgcat::mclocale {args} {
proc msgcat::mcpreferences {} {
proc msgcat::mcload {langdir} {
proc msgcat::mcset {locale src {dest ""}} {
proc msgcat::mcunknown {locale src args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/msgcat/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/opt/optparse.tcl]]
    proc OptCreateTestProc {} {
proc ::tcl::OptKeyRegister {desc {key ""}} {
proc ::tcl::OptKeyDelete {key} {
    proc OptKeyGetDesc {descKey} {
proc ::tcl::OptParse {desc arglist} {
proc ::tcl::OptProc {name desc body} {
proc ::tcl::OptProcArgGiven {argname} {
    proc OptInstr {lst} {
    proc OptIsPrg {lst} {
    proc OptIsCounter {item} {
    proc OptGetPrgCounter {lst} {
    proc OptSetPrgCounter {lstName newValue} {
    proc OptSelection {lst} {
    proc OptNextDesc {descName} {
    proc OptCurDesc {descriptions} {
    proc OptCurDescFinal {descriptions} {
    proc OptCurAddr {descriptions {start {}}} {
    proc OptCurSetValue {descriptionsName value} {
    proc OptState {item} {
    proc OptCurState {descriptions} {
    proc OptCurrentArg {lst} {
    proc OptNextArg {argsName} {
    proc OptDoAll {descriptionsName argumentsName} {
    proc OptDoOne {descriptionsName stateName argumentsName} {
proc ::tcl::OptKeyParse {descKey arglist} {
    proc OptTreeVars {desc level {vnamesLst {}}} {
proc ::tcl::OptCheckType {arg type {typeArgs ""}} {
    proc OptHits {descName arg} {
    proc OptName {item} {
    proc OptHasBeenSet {item} {
    proc OptValue {item} {
    proc OptIsFlag {name} {
    proc OptIsOpt {name} {
    proc OptVarName {item} {
    proc OptType {item} {
    proc OptTypeArgs {item} {
    proc OptHelp {item} {
    proc OptNeedValue {item} {
    proc OptDefaultValue {item} {
    proc OptOptUsage {item {what ""}} {
    proc OptNewInst {state varname type typeArgs help} {
    proc OptNormalizeOne {item} {
    proc OptGuessType {arg} {
    proc OptAmbigous {desc arg} {
    proc OptFlagUsage {desc arg} {
    proc OptTooManyArgs {desc arguments} {
    proc OptParamType {item} {
    proc OptBadValue {item arg {err {}}} {
    proc OptMissingValue {descriptions} {
proc ::tcl::OptKeyError {prefix descKey {header 0}} {
    proc OptLengths {desc nlName tlName dlName} {
    proc OptTree {desc nl tl dl} {
proc ::tcl::OptError {prefix desc {header 0}} {
proc ::tcl::Lempty {list} {
proc ::tcl::Lget {list indexLst} {
proc ::tcl::Lvarset {listName indexLst newValue} {
proc ::tcl::Lvarset1 {listName index newValue} {
proc ::tcl::Lvarset1nc {listName index newValue} {
proc ::tcl::Lvarincr {listName indexLst {howMuch 1}} {
proc ::tcl::Lvarincr1 {listName index {howMuch 1}} {
proc ::tcl::Lvarpop1 {listName} {
proc ::tcl::Lvarpop {listName} {
proc ::tcl::Lassign {list args} {
proc ::tcl::SetMax {varname value} {
proc ::tcl::SetMin {varname value} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/opt/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/package.tcl]]
proc pkg_compareExtension { fileName {ext {}} } {
proc pkg_mkIndex {args} {
	    proc package {what args} {
	    proc tclPkgUnknown args {}
	    proc unknown {args} {}
	    proc auto_import {args} {}
		proc ::tcl::GetAllNamespaces {{root ::}} {
proc tclPkgSetup {dir pkg version files} {
proc tclMacPkgSearch {dir} {
proc tclPkgUnknown {name version {exact {}}} {
proc ::pkg::create {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/parray.tcl]]
proc parray {a {pattern *}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/reg1.0/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/safe.tcl]]
    proc InterpStatics {} {
    proc InterpNested {} {
    proc interpCreate {args} {
    proc interpInit {args} {
    proc CheckInterp {slave} {
    proc interpConfigure {args} {
    proc ::safe::InterpCreate {
    proc ::safe::InterpSetConfig {slave access_path staticsok\
proc ::safe::interpFindInAccessPath {slave path} {
proc ::safe::interpAddToAccessPath {slave path} {
    proc ::safe::InterpInit {
    proc AddSubDirs {pathList} {
proc ::safe::interpDelete {slave} {
proc ::safe::setLogCmd {args} {
    proc SyncAccessPath {slave} {
    proc InterpStateName {slave} {
    proc IsInterp {slave} {
    proc PathToken {n {slave ""}} {
    proc PathListName {slave} {
    proc VirtualPathListName {slave} {
    proc PathNumberName {slave} {
    proc StaticsOkName {slave} {
    proc NestedOkName {slave} {
    proc Toplevel {args} {
    proc Set {args} {
    proc Lappend {args} {
    proc Unset {args} {
    proc Exists {varname} {
    proc GetAccessPath {slave} {
    proc StaticsOk {slave} {
    proc NestedOk {slave} {
    proc DeleteHookName {slave} {
    proc TranslatePath {slave path} {
    proc Log {slave msg {type ERROR}} {
    proc CheckFileName {slave file} {
    proc AliasSource {slave args} {
    proc AliasLoad {slave file args} {
    proc FileInAccessPath {slave file} {
    proc Subset {slave command okpat args} {
    proc AliasSubset {slave alias target args} {
    proc AliasEncoding {slave args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/tcltest1.0/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/tcltest1.0/tcltest.tcl]]
proc ::tcltest::DebugPuts {level string} {
proc ::tcltest::DebugPArray {level arrayvar} {
proc ::tcltest::DebugDo {level script} {
proc ::tcltest::AddToSkippedBecause { constraint } {
proc ::tcltest::PrintError {errorMsg} {
    proc ::tcltest::initConstraintsHook {} {}
proc ::tcltest::initConstraints {} {
    proc ::tcltest::safeFetch {n1 n2 op} {
    proc ::tcltest::PrintUsageInfoHook {} {}
proc ::tcltest::PrintUsageInfo {} {
proc ::tcltest::CheckDirectory {rw dir errMsg} {
proc ::tcltest::normalizePath {pathVar} {
proc ::tcltest::MakeAbsolutePath {pathVar {prefix {}}} {
    proc ::tcltest::processCmdLineArgsAddFlagsHook {} {}
    proc ::tcltest::processCmdLineArgsHook {flag} {}
proc ::tcltest::processCmdLineArgs {} {
proc ::tcltest::loadTestedCommands {} {
proc ::tcltest::cleanupTests {{calledFromAllFile 0}} {
    proc ::tcltest::cleanupTestsHook {} {}
proc ::tcltest::test {name description script expectedAnswer args} {
proc ::tcltest::getMatchingFiles {args} {
proc ::tcltest::openfiles {} {
proc ::tcltest::leakfiles {old} {
proc ::tcltest::saveState {} {
proc ::tcltest::restoreState {} {
proc ::tcltest::normalizeMsg {msg} {
proc ::tcltest::makeFile {contents name} {
proc ::tcltest::removeFile {name} {
proc ::tcltest::makeDirectory {name} {
proc ::tcltest::removeDirectory {name} {
proc ::tcltest::viewFile {name} {
proc ::tcltest::grep { expression searchList } {
proc ::tcltest::bytestring {string} {
proc ::tcltest::set_iso8859_1_locale {} {
proc ::tcltest::restore_locale {} {
proc ::tcltest::threadReap {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.3.3/word.tcl]]
proc tcl_wordBreakAfter {str start} {
proc tcl_wordBreakBefore {str start} {
proc tcl_endOfWord {str start} {
proc tcl_startOfNextWord {str start} {
proc tcl_startOfPreviousWord {str start} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/auto.tcl]]
proc auto_reset {} {
proc tcl_findLibrary {basename version patch initScript enVarName varName} {
proc auto_mkindex {dir args} {
proc auto_mkindex_old {dir args} {
    proc init {} {
    proc cleanup {} {
proc auto_mkindex_parser::mkindex {file} {
proc auto_mkindex_parser::hook {cmd} {
proc auto_mkindex_parser::slavehook {cmd} {
proc auto_mkindex_parser::command {name arglist body} {
proc auto_mkindex_parser::commandInit {name arglist body} {
    proc $fakeName $arglist $body
proc auto_mkindex_parser::fullname {name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/dde/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/history.tcl]]
proc history {args} {
 proc tcl::HistAdd {command {exec {}}} {
 proc tcl::HistKeep {{limit {}}} {
 proc tcl::HistClear {} {
 proc tcl::HistInfo {{num {}}} {
 proc tcl::HistRedo {{event -1}} {
 proc tcl::HistIndex {event} {
 proc tcl::HistEvent {event} {
 proc tcl::HistChange {cmd {event 0}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/http/http.tcl]]
    proc init {} {
proc http::register {proto port command} {
proc http::unregister {proto} {
proc http::config {args} {
proc http::Finish { token {errormsg ""} {skipCB 0}} {
proc http::reset { token {why reset} } {
proc http::geturl { url args } {
proc http::data {token} {
proc http::status {token} {
proc http::code {token} {
proc http::ncode {token} {
proc http::size {token} {
proc http::error {token} {
proc http::cleanup {token} {
proc http::Connect {token} {
proc http::Write {token} {
proc http::Event {token} {
proc http::CopyStart {s token} {
proc http::CopyDone {token count {error {}}} {
proc http::Eof {token} {
proc http::wait {token} {
proc http::formatQuery {args} {
proc http::mapReply {string} {
proc http::ProxyRequired {host} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/http/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/http1.0/http.tcl]]
proc http_config {args} {
 proc httpFinish { token {errormsg ""} } {
proc http_reset { token {why reset} } {
proc http_get { url args } {
proc http_data {token} {
proc http_status {token} {
proc http_code {token} {
proc http_size {token} {
 proc httpEvent {token} {
 proc httpCopyStart {s token} {
 proc httpCopyDone {token count {error {}}} {
 proc httpEof {token} {
proc http_wait {token} {
proc http_formatQuery {args} {
 proc httpMapReply {string} {
 proc httpProxyRequired {host} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/http1.0/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/init.tcl]]
	proc EnvTraceProc {lo n1 n2 op} {
	proc InitWinEnv {} {
    proc tclLog {string} {
proc unknown args {
proc auto_load {cmd {namespace {}}} {
proc auto_load_index {} {
proc auto_qualify {cmd namespace} {
proc auto_import {pattern} {
proc auto_execok name {
proc auto_execok name {
proc tcl::CopyDirectory {action src dest} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/ldAout.tcl]]
proc tclLdAout {{cc {}} {shlib_suffix {}} {shlib_cflags none}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/msgcat/msgcat.tcl]]
proc msgcat::mc {src args} {
proc msgcat::mclocale {args} {
proc msgcat::mcpreferences {} {
proc msgcat::mcload {langdir} {
proc msgcat::mcset {locale src {dest ""}} {
proc msgcat::mcmset {locale pairs } {
proc msgcat::mcunknown {locale src args} {
proc msgcat::mcmax {args} {
proc msgcat::ConvertLocale {value} {
proc msgcat::Init {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/msgcat/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/opt/optparse.tcl]]
    proc OptCreateTestProc {} {
proc ::tcl::OptKeyRegister {desc {key ""}} {
proc ::tcl::OptKeyDelete {key} {
    proc OptKeyGetDesc {descKey} {
proc ::tcl::OptParse {desc arglist} {
proc ::tcl::OptProc {name desc body} {
proc ::tcl::OptProcArgGiven {argname} {
    proc OptInstr {lst} {
    proc OptIsPrg {lst} {
    proc OptIsCounter {item} {
    proc OptGetPrgCounter {lst} {
    proc OptSetPrgCounter {lstName newValue} {
    proc OptSelection {lst} {
    proc OptNextDesc {descName} {
    proc OptCurDesc {descriptions} {
    proc OptCurDescFinal {descriptions} {
    proc OptCurAddr {descriptions {start {}}} {
    proc OptCurSetValue {descriptionsName value} {
    proc OptState {item} {
    proc OptCurState {descriptions} {
    proc OptCurrentArg {lst} {
    proc OptNextArg {argsName} {
    proc OptDoAll {descriptionsName argumentsName} {
    proc OptDoOne {descriptionsName stateName argumentsName} {
proc ::tcl::OptKeyParse {descKey arglist} {
    proc OptTreeVars {desc level {vnamesLst {}}} {
proc ::tcl::OptCheckType {arg type {typeArgs ""}} {
    proc OptHits {descName arg} {
    proc OptName {item} {
    proc OptHasBeenSet {item} {
    proc OptValue {item} {
    proc OptIsFlag {name} {
    proc OptIsOpt {name} {
    proc OptVarName {item} {
    proc OptType {item} {
    proc OptTypeArgs {item} {
    proc OptHelp {item} {
    proc OptNeedValue {item} {
    proc OptDefaultValue {item} {
    proc OptOptUsage {item {what ""}} {
    proc OptNewInst {state varname type typeArgs help} {
    proc OptNormalizeOne {item} {
    proc OptGuessType {arg} {
    proc OptAmbigous {desc arg} {
    proc OptFlagUsage {desc arg} {
    proc OptTooManyArgs {desc arguments} {
    proc OptParamType {item} {
    proc OptBadValue {item arg {err {}}} {
    proc OptMissingValue {descriptions} {
proc ::tcl::OptKeyError {prefix descKey {header 0}} {
    proc OptLengths {desc nlName tlName dlName} {
    proc OptTree {desc nl tl dl} {
proc ::tcl::OptError {prefix desc {header 0}} {
proc ::tcl::Lempty {list} {
proc ::tcl::Lget {list indexLst} {
proc ::tcl::Lvarset {listName indexLst newValue} {
proc ::tcl::Lvarset1 {listName index newValue} {
proc ::tcl::Lvarset1nc {listName index newValue} {
proc ::tcl::Lvarincr {listName indexLst {howMuch 1}} {
proc ::tcl::Lvarincr1 {listName index {howMuch 1}} {
proc ::tcl::Lvarpop1 {listName} {
proc ::tcl::Lvarpop {listName} {
proc ::tcl::Lassign {list args} {
proc ::tcl::SetMax {varname value} {
proc ::tcl::SetMin {varname value} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/opt/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/package.tcl]]
proc pkg_compareExtension { fileName {ext {}} } {
proc pkg_mkIndex {args} {
	    proc package {what args} {
	    proc tclPkgUnknown args {}
	    proc unknown {args} {}
	    proc auto_import {args} {}
		proc ::tcl::GetAllNamespaces {{root ::}} {
proc tclPkgSetup {dir pkg version files} {
proc tclPkgUnknown {name version {exact {}}} {
proc tcl::MacOSXPkgUnknown {original name version {exact {}}} {
proc tcl::MacPkgUnknown {original name version {exact {}}} {
proc ::pkg::create {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/parray.tcl]]
proc parray {a {pattern *}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/reg/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/safe.tcl]]
    proc InterpStatics {} {
    proc InterpNested {} {
    proc interpCreate {args} {
    proc interpInit {args} {
    proc CheckInterp {slave} {
    proc interpConfigure {args} {
    proc ::safe::InterpCreate {
    proc ::safe::InterpSetConfig {slave access_path staticsok\
proc ::safe::interpFindInAccessPath {slave path} {
proc ::safe::interpAddToAccessPath {slave path} {
    proc ::safe::InterpInit {
    proc AddSubDirs {pathList} {
proc ::safe::interpDelete {slave} {
proc ::safe::setLogCmd {args} {
    proc SyncAccessPath {slave} {
    proc InterpStateName {slave} {
    proc IsInterp {slave} {
    proc PathToken {n {slave ""}} {
    proc PathListName {slave} {
    proc VirtualPathListName {slave} {
    proc PathNumberName {slave} {
    proc StaticsOkName {slave} {
    proc NestedOkName {slave} {
    proc Toplevel {args} {
    proc Set {args} {
    proc Lappend {args} {
    proc Unset {args} {
    proc Exists {varname} {
    proc GetAccessPath {slave} {
    proc StaticsOk {slave} {
    proc NestedOk {slave} {
    proc DeleteHookName {slave} {
    proc TranslatePath {slave path} {
    proc Log {slave msg {type ERROR}} {
    proc CheckFileName {slave file} {
    proc AliasSource {slave args} {
    proc AliasLoad {slave file args} {
    proc FileInAccessPath {slave file} {
    proc Subset {slave command okpat args} {
    proc AliasSubset {slave alias target args} {
    proc AliasEncoding {slave args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/tcltest/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/tcltest/tcltest.tcl]]
    proc normalizePath {pathVar} {
    proc AcceptAll {value} {
    proc AcceptList { list } {
    proc AcceptPattern { pattern } {
    proc AcceptInteger { level } {
    proc AcceptBoolean { boolean } {
    proc AcceptScript { script } {
    proc AcceptAbsolutePath { path } {
    proc AcceptReadable { path } {
    proc AcceptDirectory { directory } {
    proc ArrayDefault {varName value} {
    proc Default {varName value {verify AcceptAll}} {
    proc FillFilesExisted {} {
	proc FillFilesExisted args {}
    proc workingDirectory { {dir ""} } {
    proc outputChannel { {filename ""} } {
    proc errorChannel { {filename ""} } {
    proc Option {option value usage {verify AcceptAll} {varName {}}} {
	    proc $varName {{value {}}} [subst -nocommands {
    proc MatchingOption {option} {
    proc EstablishAutoConfigureTraces {} {
    proc RemoveAutoConfigureTraces {} {
	proc RemoveAutoConfigureTraces {} {}
    proc Configure args {
    proc configure args {
    proc AcceptVerbose { level } {
    proc IsVerbose {level} {
    proc SetSelectedConstraints args {
    proc ClearUnselectedConstraints args {
    proc AcceptTemporaryDirectory { directory } {
    proc AcceptLoadFile { file } {
    proc ReadLoadScript {args} {
    proc AcceptOutFile { file } {
proc tcltest::DebugPuts {level string} {
proc tcltest::DebugPArray {level arrayvar} {
proc tcltest::parray {a {pattern *}} [info body ::parray]
proc tcltest::DebugDo {level script} {
proc tcltest::Warn {msg} {
proc tcltest::mainThread { {new ""} } {
proc tcltest::testConstraint {constraint {value ""}} {
proc tcltest::interpreter { {interp ""} } {
proc tcltest::AddToSkippedBecause { constraint {value 1}} {
proc tcltest::PrintError {errorMsg} {
proc tcltest::SafeFetch {n1 n2 op} {
proc tcltest::ConstraintInitializer {constraint {script ""}} {
proc tcltest::InitConstraints {} {
proc tcltest::DefineConstraintInitializers {} {
proc tcltest::PrintUsageInfo {} {
proc tcltest::Usage { {option ""} } {
proc tcltest::ProcessFlags {flagArray} {
        processCmdLineArgsHook [array get flag]
proc tcltest::ProcessCmdLineArgs {} {
proc tcltest::Replace::puts {args} {
proc tcltest::Eval {script {ignoreOutput 1}} {
proc tcltest::CompareStrings {actual expected mode} {
proc tcltest::customMatch {mode script} {
proc tcltest::SubstArguments {argList} {
proc tcltest::test {name description args} {
proc tcltest::Skipped {name constraints} {
proc tcltest::RunTest {name script} {
    proc tcltest::cleanupTestsHook {} {}
proc tcltest::cleanupTests {{calledFromAllFile 0}} {
proc tcltest::getMatchingFiles args {eval GetMatchingFiles $args}
proc tcltest::GetMatchingFiles { args } {
proc tcltest::GetMatchingDirectories {rootdir} {
proc tcltest::runAllTests { {shell ""} } {
proc tcltest::loadTestedCommands {} {
proc tcltest::saveState {} {
proc tcltest::restoreState {} {
proc tcltest::normalizeMsg {msg} {
proc tcltest::makeFile {contents name {directory ""}} {
proc tcltest::removeFile {name {directory ""}} {
proc tcltest::makeDirectory {name {directory ""}} {
proc tcltest::removeDirectory {name {directory ""}} {
proc tcltest::viewFile {name {directory ""}} {
proc tcltest::bytestring {string} {
proc tcltest::OpenFiles {} {
proc tcltest::LeakFiles {old} {
proc tcltest::SetIso8859_1_Locale {} {
proc tcltest::RestoreLocale {} {
proc tcltest::threadReap {} {
	proc initConstraintsHook {} {}
    proc ConfigureFromEnvironment {} {
    proc LoadTimeCmdLineArgParsingRequired {} {
			processCmdLineArgsAddFlagsHook } {
		proc $hook args {}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcl8.4.11/word.tcl]]
proc tcl_wordBreakAfter {str start} {
proc tcl_wordBreakBefore {str start} {
proc tcl_endOfWord {str start} {
proc tcl_startOfNextWord {str start} {
proc tcl_startOfPreviousWord {str start} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/base64/base64.tcl]]
    proc ::base64::encode {args} {
    proc ::base64::decode {string} {
    proc ::base64::encode {args} {
    proc ::base64::decode {string} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/base64/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/base64/uuencode.tcl]]
proc ::uuencode::Enc {c} {
proc ::uuencode::Encode {s} {
proc ::uuencode::Decode {s} {
proc ::uuencode::pad {s} {
    proc ::uuencode::encode {s} {
    proc ::uuencode::decode {s} {
proc ::uuencode::uuencode {args} {
proc ::uuencode::uudecode {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/base64/yencode.tcl]]
proc ::yencode::encode {s} {
proc ::yencode::decode {s} {
proc ::yencode::Pop {varname {nth 0}} {
proc ::yencode::yencode {args} {
proc ::yencode::ydecode {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/calendar/calendar.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/calendar/gregorian.tcl]]
proc ::calendar::CommonCalendar::WeekdayOnOrBefore { weekday j } {
proc ::calendar::CommonCalendar::CivilYearToAbsolute { dateVar } {
proc ::calendar::GregorianCalendar::IsLeapYear { y } {
proc ::calendar::GregorianCalendar::EYMDToJulianDay { dateArray } {
proc ::calendar::GregorianCalendar::EYDToJulianDay { dateArray } {
proc ::calendar::GregorianCalendar::EFYWDToJulianDay { dateArray
proc ::calendar::GregorianCalendar::EYMWDToJulianDay { dateVar } {
proc ::calendar::GregorianCalendar::JulianDayToEYD { j dateVar } {
proc ::calendar::GregorianCalendar::JulianDayToEYMD  { j dateVar } {
proc ::calendar::GregorianCalendar::JulianDayToEFYWD { j
proc ::calendar::GregorianCalendar::JulianDayToEYMWD { j dateVar } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/calendar/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/cmdline/cmdline.tcl]]
proc ::cmdline::getopt {argvVar optstring optVar valVar} {
proc ::cmdline::getKnownOpt {argvVar optstring optVar valVar} {
proc ::cmdline::getoptions {arglistVar optlist {usage options:}} {
proc ::cmdline::getKnownOptions {arglistVar optlist {usage options:}} {
proc ::cmdline::GetOptionDefaults {optlist defaultArrayVar} {
proc ::cmdline::usage {optlist {usage {options:}}} {
proc ::cmdline::getfiles {patterns quiet} {
proc ::cmdline::getArgv0 {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/cmdline/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/cmdline/typedCmdline.tcl]]
proc ::cmdline::typedGetopt {argvVar optstring optVar argVar} {
proc ::cmdline::typedGetoptions {arglistVar optlist {usage options:}} {
proc ::cmdline::typedUsage {optlist {usage {options:}}} {
proc ::cmdline::prefixSearch {list pattern} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/comm/comm.tcl]]
proc ::comm::comm_send {} {
    proc send {args} {
    proc winfo {cmd args} {
    proc ::comm::comm_send {} {}
proc ::comm::comm {cmd args} {
proc ::comm::commDebug {arg} {
proc ::comm::commNew {ch args} {
	proc $ch {cmd args} $nbody
proc ::comm::commDestroy {} {
proc ::comm::commConfVars {v t} {
proc ::comm::commConfigure {{force 0} args} {
proc ::comm::commBool {b} {
proc ::comm::commConnect {id} {
proc ::comm::commIncoming {chan fid addr remport} {
proc ::comm::commNewConn {id fid} {
proc ::comm::commShutdown {id} {
proc ::comm::commAbort {} {
proc ::comm::commLostConn {
proc ::comm::commHook {hook {script +}} {
proc ::comm::commCollect {chan fid} {
proc ::comm::commExec {chan fid remoteid buf} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/comm/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/control/ascaller.tcl]]
    proc CommandAsCaller {cmdVar resultVar {where {}} {codeVar code}} {
    proc BodyAsCaller {bodyVar resultVar codeVar {where {}}} {
    proc ErrorInfoAsCaller {find replace} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/control/assert.tcl]]
	proc EnabledAssert {expr args} {
	proc enabled {args} {
	proc callback {args} {
    proc AssertSwitch {old new} {
    proc assert args #
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/control/control.tcl]]
    proc control {command args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/control/do.tcl]]
    proc do {body args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/control/no-op.tcl]]
    proc no-op args {}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/control/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/counter/counter.tcl]]
proc ::counter::init {tag args} {
proc ::counter::reset {tag args} {
proc ::counter::count {tag {delta 1} args} {
proc ::counter::exists {tag} {
proc ::counter::get {tag {option -total} args} {
proc ::counter::names {} {
proc ::counter::MergeHour {interval} {
proc ::counter::MergeDay {} {
proc ::counter::histHtmlDisplay {tag args} {
proc ::counter::histHtmlDisplayRow {tag args} {
proc ::counter::histHtmlDisplayBarChart {tag histVar max curIndex time args} {
proc ::counter::start {tag instance} {
proc ::counter::stop {tag instance {func ::counter::Identity}} {
proc ::counter::Identity {x} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/counter/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/crc/cksum.tcl]]
proc ::crc::Cksum {s} {
proc ::crc::Cksum_chunk {data_var sum_var len_var} {
proc ::crc::Cksum_finalize {sum_var len_var} {
proc ::crc::cksum {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/crc/crc16.tcl]]
proc ::crc::Crc_table {width poly reflected} {
proc ::crc::Crc {s width table {init 0} {xorout 0} {reflected 0}} {
proc ::crc::reflect {v b} {
proc ::crc::Pop {varname {nth 0}} {
proc ::crc::CRC16 {s {seed 0}} {
proc ::crc::CRC-CCITT {s {seed 0xFFFF}} {
proc ::crc::CRC-32 {s {seed 0xFFFFFFFF}} {
proc ::crc::crc {args} {
proc ::crc::crc16 {args} {
proc ::crc::crc-ccitt {args} {
proc ::crc::crc-32 {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/crc/crc32.tcl]]
proc ::crc::Crc32_tcl {s {seed 0xFFFFFFFF}} {
    proc ::crc::Crc32_trf {s {seed 0xFFFFFFFF}} {
proc ::crc::crc32 {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/crc/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/crc/sum.tcl]]
proc ::crc::sum-sysv {s} {
proc ::crc::sum-bsd {s} {
proc ::crc::sum {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/csv/csv.tcl]]
proc ::csv::join {values {sepChar ,}} {
proc ::csv::joinlist {values {sepChar ,}} {
proc ::csv::read2matrix {args} {
proc ::csv::read2queue {args} {
proc ::csv::report {cmd matrix args} {
proc ::csv::split {args} {
proc ::csv::Split {alternate line sepChar} {
proc ::csv::split2matrix {args} {
proc ::csv::Split2matrix {alternate m line sepChar expand} {
proc ::csv::split2queue {args} {
proc ::csv::writematrix {m chan {sepChar ,}} {
proc ::csv::writequeue {q chan {sepChar ,}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/csv/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/des/des.tcl]]
  proc GetKey { mode keyString keys_var } {
  proc DesBlock { in keys_var } {
  proc makeInternalKeys { keyBlock_var encDec useVNC } {
  proc desAlgorithm { leftt right keys_var } {
proc ::DES::Pop {varname {nth 0}} {
proc ::DES::des {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/des/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/devtools/microserv.tcl]]
proc ::muserv::listen {theport theresponses} {
proc ::muserv::control {control} {
proc ::muserv::control {control} {
proc ::muserv::gettrace {} {
proc ::muserv::New {thesock addr port} {
proc ::muserv::Dialog {} {
proc ::muserv::__Trace       {line} {
proc ::muserv::__Send        {line} {
proc ::muserv::__Wait        {}     {
proc ::muserv::__Reconfigure {args} {
proc ::muserv::__Got {} {variable lastline ; __Trace $lastline}
proc ::muserv::CrLf        {}     {__Reconfigure -translation crlf   ; return}
proc ::muserv::Binary      {}     {__Reconfigure -translation binary ; return}
proc ::muserv::Send        {line} {         __Send $line ; return}
proc ::muserv::Respond     {line} {__Wait ; __Send $line ; return}
proc ::muserv::Wait        {}     {__Wait ;                return}
proc ::muserv::RespondLog  {line} {__Wait ; __Got ; __Send $line ; return}
proc ::muserv::WaitLog     {}     {__Wait ; __Got ;                return}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/devtools/musub.tcl]]
proc log {txt} {global log ; puts $log $txt}
proc log__ {l t} {log "$l $t"}
proc done {chan} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/devtools/subserv.tcl]]
proc ::subserv::pipe {pathToScriptFile} {
proc ::subserv::exec {pathToScriptFile port} {
proc ::subserv::muserv {pathToScriptFile ctrlport port responses} {
proc ::subserv::muservSpawn {pathToScriptFile port responses} {
proc ::subserv::muservCtrl {thesock addr port} {
proc ::subserv::muservStop {} {
proc ::subserv::muservLog {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/dns/dns.tcl]]
proc ::dns::configure {args} {
proc ::dns::resolve {query args} {
proc ::dns::name {token} {
proc ::dns::address {token} {
proc ::dns::cname {token} {
proc ::dns::status {token} {
proc ::dns::error {token} {
proc ::dns::errorcode {token} {
proc ::dns::reset {token {why reset} {errormsg {}}} {
proc ::dns::wait {token} {
proc ::dns::cleanup {token} {
proc ::dns::dump {args} {
proc ::dns::DumpMessage {data} {
proc ::dns::BuildMessage {token} {
proc ::dns::TcpTransmit {token} {
proc ::dns::UdpTransmit {token} {
proc ::dns::Finish {token {errormsg ""}} {
proc ::dns::Eof {token} {
proc ::dns::Receive {token} {
proc ::dns::TcpEvent {token} {
proc ::dns::UdpEvent {token} {
proc ::dns::Flags {token {varname {}}} {
proc ::dns::Decode {token args} {
proc ::dns::Expand {data} {
proc ::dns::Pop {varname {nth 0}} {
proc ::dns::KeyOf {arrayname value {default {}}} {
proc ::dns::ReadQuestion {nitems data indexvar} {
proc ::dns::ReadAnswer {nitems data indexvar} {
proc ::dns::ReadName {datavar index usedvar} {
proc ::dns::Win32_NameServers {} {
proc ::dns::AppendRegistryValue {key val listName} {
proc ::uri::SplitDns {uri} {
proc ::uri::JoinDns {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/dns/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/dns/resolv.tcl]]
proc ::resolv::ignore { hostname } {
proc ::resolv::init { {defaultdns ""} {search {}}} {
proc ::resolv::resolve { hostname } {
proc ::resolv::Resolve {hostname} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/api.tcl]]
    proc fmt_$__cmd {args} [list return  "return -code error \"Unimplemented API command $__cmd\""]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/api_idx.tcl]]
    proc $__cmd {args} [list return  "return -code error \"Unimplemented API command $__cmd\""]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/api_toc.tcl]]
    proc $__cmd {args} [list return  "return -code error \"Unimplemented API command $__cmd\""]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/changelog.tcl]]
proc ::doctools::changelog::scan {text} {
proc ::doctools::changelog::closeSection {} {
proc ::doctools::changelog::closeEntry {} {
proc ::doctools::changelog::merge {args} {
proc ::doctools::changelog::q {text} {return "\[$text\]"}
proc ::doctools::changelog::toDoctools {title module version entries} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/checker.tcl]]
proc ::msgcat::mcunknown {locale code} {
proc Error {code {text {}}} {
proc Warn {code text} {
proc Is    {s} {global state ; return [string equal $state $s]}
proc IsNot {s} {global state ; return [expr {![string equal $state $s]}]}
proc Go    {s} {Log " >>\[$s\]" ; global state ; set state $s; return}
proc LPush {l} {
proc LPop {} {
proc LSItem {} {global lstitem ; set lstitem 1}
proc LIs  {l} {global lstctx ; string equal $l [lindex $lstctx 0]}
proc LItem {} {global lstitem ; return $lstitem}
proc LNest {} {
proc LOpen {} {
proc LValid {what} {
proc State {} {global state ; return $state}
proc Enter {cmd} {Log "\[[State]\] $cmd"}
proc Log* {text} {}
proc Log  {text} {}
proc ck_initialize {} {
proc ck_complete {} {
proc plain_text {text} {
proc vset {var args} {
proc manpage_begin {title section version} {
proc moddesc {desc} {
proc titledesc {desc} {
proc copyright {text} {
proc manpage_end {} {
proc require {pkg {version {}}} {
proc description {} {
proc section {name} {
proc para {} {
proc list_begin {what {hint {}}} {
proc list_end {} {
proc lst_item {{text {}}} {
proc arg_def {type name {mode {}}} {
proc cmd_def {command} {
proc opt_def {name {arg {}}} {
proc tkoption_def {name dbname dbclass} {
proc call {cmd args} {
proc bullet {} {
proc enum {} {
proc example {code} {
proc example_begin {} {
proc example_end {} {
proc see_also {args} {
proc keywords {args} {
proc nl {} {
proc emph {text} {
proc strong {text} {
proc arg {text} {
proc cmd {text} {
proc opt {text} {
proc comment {text} {
proc sectref {name} {
proc syscmd {text} {
proc method {text} {
proc option {text} {
proc widget {text} {
proc fun {text} {
proc type {text} {
proc package {text} {
proc class {text} {
proc var {text} {
proc file {text} {
proc uri {text} {
proc usage {args} {
proc const {text} {
proc term {text} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/checker_idx.tcl]]
proc ::msgcat::mcunknown {locale code} {
proc Error {code {text {}}} {
proc Warn {code text} {
proc Is    {s} {global state ; return [string equal $state $s]}
proc IsNot {s} {global state ; return [expr {![string equal $state $s]}]}
proc Go    {s} {Log " >>\[$s\]" ; global state ; set state $s; return}
proc Push  {s} {Log " //\[$s\]" ; global state stack ; lappend stack $state ; set state $s; return}
proc Pop   {}  {Log* " pop" ;  global state stack ; set state [lindex $stack end] ; set stack [lrange $stack 0 end-1] ; Log " \\\\\[$state\]" ; return}
proc State {} {global state ; return $state}
proc Enter {cmd} {Log* "\[[State]\] $cmd"}
proc Log* {text} {}
proc Log  {text} {}
proc ck_initialize {} {
proc ck_complete {} {
proc plain_text {text} {
proc vset {var args} {
proc index_begin {label title} {
proc index_end {} {
proc key {text} {
proc manpage {file label} {
proc url {url label} {
proc comment {text} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/checker_toc.tcl]]
proc ::msgcat::mcunknown {locale code} {
proc Error {code {text {}}} {
proc Warn {code text} {
proc Is    {s} {global state ; return [string equal $state $s]}
proc IsNot {s} {global state ; return [expr {![string equal $state $s]}]}
proc Go    {s} {Log " >>\[$s\]" ; global state ; set state $s; return}
proc Push  {s} {Log " //\[$s\]" ; global state stack ; lappend stack $state ; set state $s; return}
proc Pop   {}  {Log* " pop" ;  global state stack ; set state [lindex $stack end] ; set stack [lrange $stack 0 end-1] ; Log " \\\\\[$state\]" ; return}
proc State {} {global state stack ; return "$stack || $state"}
proc Enter {cmd} {Log* "\[[State]\] $cmd"}
proc Log* {text} {}
proc Log  {text} {}
proc ck_initialize {} {
proc ck_complete {} {
proc plain_text {text} {
proc vset {var args} {
proc toc_begin {label title} {
proc toc_end {} {
proc division_start {title} {
proc division_end {} {
proc item {file label desc} {
proc comment {text} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/cvs.tcl]]
proc ::doctools::cvs::scanLog {text evar cvar fvar} {
proc ::doctools::cvs::toChangeLog {evar cvar fvar} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/docidx.tcl]]
proc ::doctools::idx::search {path} {
proc ::doctools::idx::help {} {
proc ::doctools::idx::new {name args} {
proc ::doctools::idx::DocIdxProc {name {cmd ""} args} {
proc ::doctools::idx::_cget {name option} {
proc ::doctools::idx::_configure {name args} {
proc ::doctools::idx::_destroy {name} {
proc ::doctools::idx::_map {name sfname afname} {
proc ::doctools::idx::_format {name text} {
proc ::doctools::idx::_search {name path} {
proc ::doctools::idx::_warnings {name} {
proc ::doctools::idx::_parameters {name} {
proc ::doctools::idx::_setparam {name param value} {
proc ::doctools::idx::LookupFormat {name format} {
proc ::doctools::idx::SetupFormatter {name format} {
proc ::doctools::idx::SetupChecker {name} {
proc ::doctools::idx::SetupExpander {name} {
proc ::doctools::idx::SearchPaths {name} {
proc ::doctools::idx::FmtError {name text} {
proc ::doctools::idx::FmtWarning {name text} {
proc ::doctools::idx::Eval {name macro} {
proc ::doctools::idx::ExpandInclude {name path} {
proc ::doctools::idx::GetUser {name} {
proc ::doctools::idx::GetFormat {name} {
proc ::doctools::idx::MapFile {name fname} {
proc ::doctools::idx::Source {ip path file} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/doctoc.tcl]]
proc ::doctools::toc::search {path} {
proc ::doctools::toc::help {} {
proc ::doctools::toc::new {name args} {
proc ::doctools::toc::DocTocProc {name {cmd ""} args} {
proc ::doctools::toc::_cget {name option} {
proc ::doctools::toc::_configure {name args} {
proc ::doctools::toc::_destroy {name} {
proc ::doctools::toc::_map {name sfname afname} {
proc ::doctools::toc::_format {name text} {
proc ::doctools::toc::_search {name path} {
proc ::doctools::toc::_warnings {name} {
proc ::doctools::toc::_parameters {name} {
proc ::doctools::toc::_setparam {name param value} {
proc ::doctools::toc::LookupFormat {name format} {
proc ::doctools::toc::SetupFormatter {name format} {
proc ::doctools::toc::SetupChecker {name} {
proc ::doctools::toc::SetupExpander {name} {
proc ::doctools::toc::SearchPaths {name} {
proc ::doctools::toc::FmtError {name text} {
proc ::doctools::toc::FmtWarning {name text} {
proc ::doctools::toc::Eval {name macro} {
proc ::doctools::toc::ExpandInclude {name path} {
proc ::doctools::toc::GetUser {name} {
proc ::doctools::toc::GetFormat {name} {
proc ::doctools::toc::MapFile {name fname} {
proc ::doctools::toc::Source {ip path file} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/doctools.tcl]]
proc ::doctools::search {path} {
proc ::doctools::help {} {
proc ::doctools::new {name args} {
proc ::doctools::DoctoolsProc {name {cmd ""} args} {
proc ::doctools::_cget {name option} {
proc ::doctools::_configure {name args} {
proc ::doctools::_destroy {name} {
proc ::doctools::_map {name sfname afname} {
proc ::doctools::_format {name text} {
proc ::doctools::_search {name path} {
proc ::doctools::_warnings {name} {
proc ::doctools::_parameters {name} {
proc ::doctools::_setparam {name param value} {
proc ::doctools::LookupFormat {name format} {
proc ::doctools::SetupFormatter {name format} {
proc ::doctools::SetupChecker {name} {
proc ::doctools::SetupExpander {name} {
proc ::doctools::SearchPaths {name} {
proc ::doctools::Deprecated {name} {
proc ::doctools::FmtError {name text} {
proc ::doctools::FmtWarning {name text} {
proc ::doctools::Eval {name macro} {
proc ::doctools::ExpandInclude {name path} {
proc ::doctools::GetUser {name} {
proc ::doctools::GetFile {name} {
proc ::doctools::GetFileId {name} {
proc ::doctools::FileCmd {cmd args} {
proc ::doctools::GetModule {name} {
proc ::doctools::GetCopyright {name} {
proc ::doctools::GetFormat {name} {
proc ::doctools::ListLevel {name} {
proc ::doctools::MapFile {name fname} {
proc ::doctools::Source {ip path file} {
proc ::doctools::Locate {p} {
proc ::doctools::FileOp {ip args} {
proc ::doctools::Package {ip pkg} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/mpformats/_common.tcl]]
proc fmt_initialize {} {
proc fmt_shutdown      {}             {return}
proc fmt_numpasses     {}             {return 2}
proc fmt_postprocess   {text}         {return $text}
proc fmt_plain_text    {text}         {return $text}
proc fmt_listvariables {}             {return {}}
proc fmt_varset        {varname text} {return}
proc fmt_setup {n} {
proc c_inpass {} {global state ; return $state(pass)}
proc c_begin {} {global state ; set     state(begun) 1 ; return}
proc c_begun {} {global state ; return $state(begun)}
proc c_get_module {}     {global state ; return $state(mdesc)}
proc c_set_module {text} {global state ; set     state(mdesc) $text ; return}
proc c_set_title {text} {global state ; set state(tdesc) $text ; return}
proc c_get_title {} {
proc c_copyrightsymbol {} {return "(c)"}
proc c_set_copyright {text} {global state ; lappend state(copyright) $text ; return}
proc c_get_copyright {}     {
proc c_provenance {} {
proc c_pass {pass proc arguments body} {
proc SetPassProcs {pass} {
	proc $proc $args $body
proc c_holdBuffers {args} {
proc c_holdRemove {args} {
proc c_hold {buffer entry} {
proc c_holding {buffer} {
proc c_held {buffer} {
proc c_cnext {} {global cnt ; incr cnt}
proc c_cinit {} {
proc c_creset {} {
proc NOP {args} { }		;# do nothing
proc NYI {{message {}}} {
proc c_sectionId {name} {
proc c_possibleReference {text gi} {
proc c_xref_init {} {
proc c_xref_seealso  {} {global seealso  ; return $seealso}
proc c_xref_keywords {} {global keywords ; return $keywords}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/mpformats/_html.tcl]]
proc htmlEscape {text} {
proc fmt_postprocess {text}	{
proc markup {text} {
proc use_bg {} {
proc nbsp   {}         {return [markup "&nbsp;"]}
proc p      {}         {return [markup <p>]}
proc ptop   {}         {return [markup "<p valign=top>"]}
proc td     {}         {return [markup "<td [use_bg]>"]}
proc trtop  {}         {return [markup "<tr valign=top [use_bg]>"]}
proc tr     {}         {return [markup "<tr            [use_bg]>"]}
proc sect   {s}        {return [markup "<b>$s</b><br><hr>"]}
proc link   {text url} {return [markup "<a href=\"$url\">$text</a>"]}
proc table  {}         {return [markup "<table [border] width=100% cellspacing=0 cellpadding=0>"]}
proc btable {}         {return [markup "<table border=1 width=100% cellspacing=0 cellpadding=0>"]}
proc stable {}         {return [markup "<table [border] cellspacing=0 cellpadding=0>"]}
proc tcl_cmd {cmd} {return "[markup <b>]\[$cmd][markup </b>]"}
proc wget    {url} {exec /usr/bin/wget -q -O - $url 2>/dev/null}
proc url {tag text url} {
    proc $tag {{what link}} [string map [list %text% $text %url% $url] $body]
proc img {tag alt img} {
    proc $tag {} [list return "\1<img alt=\"$alt\" src=\"$img\"\1>"]
proc protect {text} {return [string map [list & "&amp;" < "&lt;" > "&gt;"] $text]}
proc tag  {t} {return [markup <$t>]}
proc taga {t av} {
proc tag/ {t} {return [markup </$t>]}
proc tag_ {t block args} {
proc ht_comment {text}   {return "[markup <]! -- [join [split $text \n] "   -- "]\n   --[markup >]"}
proc wrap {content gi} {
proc startTag {x args} {if {[llength $args]} {taga $x $args} else {tag $x}}
proc endTag   {x} {tag/ $x}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/mpformats/_idx_common.tcl]]
proc idx_initialize    {}             {return}
proc idx_shutdown      {}             {return}
proc idx_numpasses     {}             {return 1}
proc idx_postprocess   {text}         {return $text}
proc idx_setup         {n}            {return}
proc idx_listvariables {}             {return {}}
proc idx_varset        {varname text} {return}
proc fmt_plain_text  {text} {return $text}
proc c_provenance {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/mpformats/_nroff.tcl]]
proc nr_lp      {}          {return \n.LP}
proc nr_ta      {{text {}}} {return ".ta$text"}
proc nr_bld     {}          {return \\fB}
proc nr_ul      {}          {return \\fI}
proc nr_rst     {}          {return \\fR}
proc nr_p       {}          {return \n.PP\n}
proc nr_comment {text}      {return "'\\\" [join [split $text \n] "\n'\\\" "]"} ; # "
proc nr_enum    {num}       {nr_item " \[$num\]"}
proc nr_item    {{text {}}} {return "\n.IP$text"}
proc nr_vspace  {}          {return \n.sp}
proc nr_blt     {text}      {return "\n.TP\n$text"}
proc nr_bltn    {n text}    {return "\n.TP $n\n$text"}
proc nr_in      {}          {return \n.RS}
proc nr_out     {}          {return \n.RE}
proc nr_nofill  {}          {return \n.nf}
proc nr_fill    {}          {return .fi}
proc nr_title   {text}      {return "\n.TH $text"}
proc nr_include {file}      {return "\n.so $file"}
proc nr_bolds   {}          {return \n.BS}
proc nr_bolde   {}          {return \n.BE}
proc nr_section {name}      {return "\n.SH \"$name\""}
proc nroff_postprocess {nroff} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/mpformats/_text.tcl]]
    proc__ proc {cmd argl body} {
proc Bullet {ivar} {
proc EnumBullet {ivar} {
proc Text  {text}    {global para ; append para $text ; return}
proc Store {op args} {global cmds ; lappend cmds [list $op $args] ; return}
proc Off   {}        {global off ; set off 1 ; return}
proc On    {}        {global off para ; set off 0 ; set para "" ; return}
proc IsOff {}        {global off ; return [expr {$off == 1}]}
proc NewEnv {name script} {
proc TextInitialize {} {
proc Section {name} {Store SECT $name ; return}
proc CloseParagraph {{id {}}} {
proc SaveContext {} {
proc RestoreContext {} {
proc SetContext {id} {
proc SaveEnv {} {
proc NewVerbatim {} {
proc Verbatim {} {
proc text_plain_text {text} {
proc text_postprocess {text} {
proc SECT {text} {
proc PARA {arguments} {
proc strong      {text} {return *${text}*}
proc em          {text} {return _${text}_}
proc parray_stderr {a {pattern *}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/mpformats/_toc_common.tcl]]
proc toc_initialize    {}             {return}
proc toc_shutdown      {}             {return}
proc toc_numpasses     {}             {return 1}
proc toc_postprocess   {text}         {return $text}
proc toc_setup         {n}            {return}
proc toc_listvariables {}             {return {}}
proc toc_varset        {varname text} {return}
proc fmt_plain_text  {text} {return $text}
proc c_provenance {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/mpformats/_xml.tcl]]
proc fmt_postprocess {text}	{
proc markup {text} {
proc attlist {nvpairs} {
proc startTag {gi args} {
proc endTag {gi} {
proc emptyElement {gi args} {
proc xmlComment {text} {
proc wrap {content gi} {
proc wrap? {content gi} {
proc wrapLines? {content args} {
proc sequence {args} { join $args "\n" }
proc start {gi args} {
proc xmlContext {gis {default {}}} {
proc end {{gi {}}} {
proc pass {pass proc arguments body} {
proc setPassProcs {pass} {
	proc $proc $args $body
proc holdBuffers {args} {
proc hold {buffer entry} {
proc held {buffer} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/doctools/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/exif/exif.tcl]]
proc ::exif::debug {str} {
proc ::exif::streq {s1 s2} {
proc ::exif::analyzeFile {file {thumbnail {}}} {
proc ::exif::analyze {stream {thumbnail {}}} {
proc ::exif::app1 {data thumbnail} {
proc ::exif::exifSubIFD {data curoffset} {
proc ::exif::makerNote {data curoffset} {
proc ::exif::readShort {data offset} {
proc ::exif::readLong {data offset} {
proc ::exif::readIFDEntry {data format components offset} {
proc ::exif::compensationFraction {value} {
proc ::exif::fieldnames {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/exif/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/fileutil/fileutil.tcl]]
proc ::fileutil::grep {pattern {files {}}} {
    proc ::fileutil::find {{basedir .} {filtercmd {}}} {
    proc ::fileutil::find {{basedir .} {filtercmd {}} {nodeVar {}}} {
proc ::fileutil::findByPattern {basedir args} {
proc ::fileutil::FindRegexp {patterns filename} {
proc ::fileutil::FindGlob {patterns filename} {
proc ::fileutil::stripPwd {path} {
proc ::fileutil::stripN {path n} {
proc ::fileutil::cat {filename} {
proc ::fileutil::foreachLine {var filename cmd} {
    proc ::fileutil::touch {args} {
proc ::fileutil::fileType {filename} {
proc ::fileutil::tempfile {{prefix {}}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/fileutil/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/ftp/ftp.tcl]]
proc ::ftp::DisplayMsg {s msg {state ""}} {
proc ::ftp::Timeout {s} {
proc ::ftp::WaitOrTimeout {s} {
proc ::ftp::WaitComplete {s value} {
proc ::ftp::PutsCtrlSock {s {command ""}} {
proc ::ftp::StateHandler {s {sock ""}} {
proc ::ftp::Type {s {type ""}} {
proc ::ftp::NList {s { dir ""}} {
proc ::ftp::List {s {dir ""}} {
proc ::ftp::ListPostProcess l {
proc ::ftp::FileSize {s {filename ""}} {
proc ::ftp::ModTime {s {filename ""} {datetime ""}} {
proc ::ftp::ModTimePostProcess {clock} {
proc ::ftp::Pwd {s } {
proc ::ftp::Cd {s {dir ""}} {
proc ::ftp::MkDir {s dir} {
proc ::ftp::RmDir {s dir} {
proc ::ftp::Delete {s file} {
proc ::ftp::Rename {s from to} {
proc ::ftp::ElapsedTime {s stop_time} {
proc ::ftp::Put {s args} {
proc ::ftp::Append {s args} {
proc ::ftp::Get {s args} {
proc ::ftp::Reget {s source {dest ""} {from_bytes 0} {till_bytes -1}} {
proc ::ftp::Newer {s source {dest ""}} {
proc ::ftp::Quote {s args} {
proc ::ftp::Close {s } {
proc ::ftp::LazyClose {s } {
proc ::ftp::Open {server user passwd args} {
proc ::ftp::CopyNext {s bytes {error {}}} {
proc ::ftp::HandleData {s sock} {
proc ::ftp::HandleList {s sock} {
proc ::ftp::HandleVar {s sock} {
proc ::ftp::HandleOutput {s sock} {
proc ::ftp::CloseDataConn {s } {
proc ::ftp::InitDataConn {s sock addr port} {
proc ::ftp::OpenActiveConn {s } {
proc ::ftp::OpenPassiveConn {s buffer} {
proc ::ftp::OpenControlConn {s {block 1}} {
proc ::ftp::Command {cb msg args} {
    proc ::ftp::__ftp_ls {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/ftp/ftp_geturl.tcl]]
proc ::ftp::geturl {url} {
proc ::ftp::ParseList {flist} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/ftp/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/ftpd/ftpd.tcl]]
proc ::ftpd::config {args} {
proc ::ftpd::hasCallback {callbackType} {
proc ::ftpd::logStderr {severity text} {
proc ::ftpd::Log {severity text} {
proc ::ftpd::fileAuth {user path operation} {
proc ::ftpd::anonAuth {user pass} {
proc ::ftpd::unixAuth {user pass} {
proc ::ftpd::server {{myaddr {}}} {
proc ::ftpd::accept {sock ipaddr client_port} {
proc ::ftpd::read {sock} {
proc ::ftpd::Finish {sock} {
proc ::ftpd::FinishData {sock} {
proc ::ftpd::Fs {command path args} {
proc ::ftpd::command::ABOR {sock list} {
proc ::ftpd::command::APPE {sock list} {
proc ::ftpd::command::CDUP {sock list} {
proc ::ftpd::command::CWD {sock list} {
proc ::ftpd::command::DELE {sock list} {
proc ::ftpd::command::HELP {sock list} {
proc ::ftpd::command::LIST {sock list} {
proc ::ftpd::command::MDTM {sock list} {
proc ::ftpd::command::MKD {sock list} {
proc ::ftpd::command::NOOP {sock list} {
proc ::ftpd::command::NLST {sock list} {
proc ::ftpd::command::PASS {sock list} {
proc ::ftpd::command::PORT {sock list} {
proc ::ftpd::command::PWD {sock list} {
proc ::ftpd::command::QUIT {sock list} {
proc ::ftpd::command::REIN {sock list} {
proc ::ftpd::command::RETR {sock list} {
proc ::ftpd::command::RMD {sock list} {
proc ::ftpd::command::RNFR {sock list} {
proc ::ftpd::command::RNTO {sock list} {
proc ::ftpd::command::SIZE {sock list} {
proc ::ftpd::command::STOR {sock list} {
proc ::ftpd::command::STOU {sock list} {
proc ::ftpd::command::SYST {sock list} {
proc ::ftpd::command::TYPE {sock list} {
proc ::ftpd::command::USER {sock list} {
proc ::ftpd::GetDone {sock sock2 f filename bytes {err {}}} {
proc ::ftpd::List {sock filename style} {
proc ::ftpd::fsFile::docRoot {{dir {}}} {
proc ::ftpd::fsFile::fs {command path args} {
proc ::ftpd::fsFile::PermBits {file mode} {
proc ::ftpd::fsFile::FormDate {seconds} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/ftpd/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/html/html.tcl]]
proc ::html::foreach {vars vals args} {
proc ::html::for {start test next body} {
proc ::html::while {test body} {
proc ::html::if {test body args} {
proc ::html::set {var val} {
proc ::html::eval {args} {
proc ::html::init {{nvlist {}}} {
proc ::html::head {title} {
proc ::html::title {title} {
proc ::html::getTitle {} {
proc ::html::meta {args} {
proc ::html::refresh {content {url {}}} {
proc ::html::headTag {string} {
proc ::html::keywords {args} {
proc ::html::description {description} {
proc ::html::author {author} {
proc ::html::tagParam {tag {param {}}} {
proc ::html::default {key {param {}}} {
proc ::html::bodyTag {args} {
proc ::html::formValue {name {defvalue {}}} {
proc ::html::quoteFormValue {value} {
proc ::html::textInput {name {value {}} args} {
proc ::html::textInputRow {label name {value {}} args} {
proc ::html::passwordInputRow {label {name password}} {
proc ::html::passwordInput {{name password}} {
proc ::html::checkbox {name value} {
proc ::html::checkValue {name {value 1}} {
proc ::html::radioValue {name value {defaultSelection {}}} {
proc ::html::radioSet {key sep list {defaultSelection {}}} {
proc ::html::checkSet {key sep list} {
proc ::html::select {name param choices {current {}}} {
proc ::html::selectPlain {name param choices {current {}}} {
proc ::html::textarea {name {param {}} {current {}}} {
proc ::html::submit {label {name submit}} {
proc ::html::varEmpty {name} {
proc ::html::getFormInfo {args} {
proc ::html::h1 {string {param {}}} {
proc ::html::h2 {string {param {}}} {
proc ::html::h3 {string {param {}}} {
proc ::html::h4 {string {param {}}} {
proc ::html::h5 {string {param {}}} {
proc ::html::h6 {string {param {}}} {
proc ::html::h {level string {param {}}} {
proc ::html::openTag {tag {param {}}} {
proc ::html::closeTag {} {
proc ::html::end {} {
proc ::html::row {args} {
proc ::html::hdrRow {args} {
proc ::html::paramRow {list {rparam {}} {cparam {}}} {
proc ::html::cell {param value {tag td}} {
proc ::html::tableFromArray {arrname {param {}} {pat *}} {
proc ::html::tableFromList {querylist {param {}}} {
proc ::html::mailto {email {subject {}}} {
proc ::html::font {args} {
proc ::html::minorMenu {list {sep { | }}} {
proc ::html::minorList {list {ordered 0}} {
proc ::html::extractParam {param key {varName ""}} {
proc ::html::urlParent {url} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/html/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/htmlparse/htmlparse.tcl]]
proc ::htmlparse::parse {args} {
proc ::htmlparse::PrepareHtml {html} {
proc ::htmlparse::debugCallback {args} {
proc ::htmlparse::mapEscapes {html} {
proc ::htmlparse::CClass {x} {
proc ::htmlparse::DoMap {text {unknown ?}} {
proc ::htmlparse::2tree {html tree} {
proc ::htmlparse::2treeCallback {tree tag slash param textBehindTheTag} {
proc ::htmlparse::removeVisualFluff {tree} {
proc ::htmlparse::removeFormDefs {tree} {
proc ::htmlparse::RemoveVisualFluff {tree node} {
proc ::htmlparse::RemoveFormDefs {tree node} {
proc ::htmlparse::Reorder {tree node} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/htmlparse/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/irc/irc.tcl]]
proc ::irc::config { key value } {
proc ::irc::connection { host {port 6667} } {
	proc ircsend { msg } {
	proc User { username hostname userinfo } {
	proc Nick { nk } {
	proc Ping { } {
	proc Join { chan } {
	proc Part { chan } {
	proc Privmsg { target msg } {
	proc Connect { } {
	proc action { } {
	proc msg { } {
	proc who { {address 0} } {
	proc target { {index 0} } {
	proc DispatchNumeric { } {
	proc DispatchServerEvent { line } {
	proc DispatchServerCmd { line } {
	proc GetEvent { } {
	proc RegisterEvent { evnt cmd } {
	proc network { cmd args } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/irc/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/javascript/javascript.tcl]]
proc ::javascript::BeginJS {} {
proc ::javascript::EndJS {} {
proc ::javascript::MakeMultiSel {id side eltValues eltNames emptyElts \
proc ::javascript::MakeClickProc {id} {
proc ::javascript::makeSelectorWidget {id leftLabel leftValueList leftNameList \
proc ::javascript::makeSubmitButton {name value} {
proc ::javascript::makeProtectedSubmitButton {name value msg} {
proc ::javascript::makeMasterButton {master value slavePattern boolean} {
proc ::javascript::makeParentCheckbox {parentName childName} {
proc ::javascript::makeChildCheckbox {parentName childName} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/javascript/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/log/log.tcl]]
proc ::log::levels {} {
proc ::log::lv2longform {level} {
proc ::log::lv2color {level} {
proc ::log::lv2priority {level} {
proc ::log::lv2cmd {level} {
proc ::log::lv2channel {level} {
proc ::log::lvCompare {level1 level2} {
proc ::log::lvSuppress {level {suppress 1}} {
proc ::log::lvSuppressLE {level {suppress 1}} {
proc ::log::lvIsSuppressed {level} {
proc ::log::lvCmd {level cmd} {
proc ::log::lvCmdForall {cmd} {
proc ::log::lvChannel {level chan} {
proc ::log::lvChannelForall {chan} {
proc ::log::lvColor {level color} {
proc ::log::lvColorForall {color} {
proc ::log::log {level text} {
proc ::log::logMsg {text} {
proc ::log::logError {text} {
proc ::log::Puts {level text} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/log/logger.tcl]]
proc ::logger::walk { start code } {
proc ::logger::init {service} {
	proc no-op args {}
	proc stdoutcmd {level text} {
	proc stderrcmd {level text} {
	proc enable {lv} {
	proc disable {lv} {
	proc logproc {lv arg body} {
	    proc ${lv}cmd $arg $body
	proc delete {} {
	    proc debugcmd {txt} {
	    proc infocmd {txt} {
	    proc noticecmd {txt} {
	    proc warncmd {txt} {
	    proc errorcmd {txt} {
	    proc criticalcmd {txt} {
proc ::logger::services {} {
proc ::logger::enable {lv} {
proc ::logger::disable {lv} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/log/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/math/calculus.tcl]]
proc ::math::calculus::integral { begin end nosteps func } {
proc ::math::calculus::integralExpr { begin end nosteps expression } {
proc ::math::calculus::integral2D { xinterval yinterval func } {
proc ::math::calculus::integral3D { xinterval yinterval zinterval func } {
proc ::math::calculus::eulerStep { t tstep xvec func } {
proc ::math::calculus::heunStep { t tstep xvec func } {
proc ::math::calculus::rungeKuttaStep { t tstep xvec func } {
proc ::math::calculus::boundaryValueSecondOrder {
proc ::math::calculus::solveTriDiagonal { acoeff bcoeff ccoeff dvalue } {
proc ::math::calculus::newtonRaphson { func deriv initval } {
proc ::math::calculus::newtonRaphsonParameters { maxiter tolerance } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/math/combinatorics.tcl]]
proc ::math::InitializeFactorial {} {
proc ::math::InitializePascal {} {
proc ::math::ln_Gamma { x } {
proc ::math::factorial { x } {
proc ::math::choose { n k } {
proc ::math::Beta { z w } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/math/fuzzy.tcl]]
proc DetermineTolerance { } {
proc Absmax { first second } {
proc teq { first second } {
proc tne { first second } {
proc tgt { first second } {
proc tle { first second } {
proc tlt { first second } {
proc tge { first second } {
proc tfloor { number } {
proc tceil { number } {
proc tround { number } {
proc troundn { number ndec } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/math/geometry.tcl]]
proc ::math::geometry::calculateDistanceToLine {P line} {
proc ::math::geometry::findClosestPointOnLine {P line} {
proc ::math::geometry::findClosestPointOnLineImpl {P line} {
proc ::math::geometry::calculateDistanceToLineSegment {P linesegment} {
proc ::math::geometry::calculateDistanceToLineSegmentImpl {P linesegment} {
proc ::math::geometry::findClosestPointOnLineSegment {P linesegment} {
proc ::math::geometry::calculateDistanceToPolyline {P polyline} {
proc ::math::geometry::findClosestPointOnPolyline {P polyline} {
proc ::math::geometry::lengthOfPolyline {polyline} {
proc ::math::geometry::movePointInDirection {P direction dist} {
proc ::math::geometry::angle {line} {
proc ::math::geometry::lineSegmentsIntersect {linesegment1 linesegment2} {
proc ::math::geometry::findLineSegmentIntersection {linesegment1 linesegment2} {
proc ::math::geometry::findLineIntersection {line1 line2} {
proc ::math::geometry::polylinesIntersect {polyline1 polyline2} {
proc ::math::geometry::polylinesBoundingIntersect {polyline1 polyline2 granularity} {
proc ::math::geometry::ccw {A B C} {
proc ::math::geometry::intervalsOverlap {y1 y2 y3 y4 strict} {
proc ::math::geometry::rectanglesOverlap {P1 P2 Q1 Q2 strict} {
proc ::math::geometry::bbox {polyline} {
proc ::math::geometry::pointInsidePolygon {P polygon} {
proc ::math::geometry::rectangleInsidePolygon {P1 P2 polygon} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/math/liststat.tcl]]
proc ::math::statistics::filter { varname data expression } {
proc ::math::statistics::map { varname data expression } {
proc ::math::statistics::samplescount { varname list {expression 1} } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/math/math.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/math/misc.tcl]]
proc ::math::cov {val1 val2 args} {
proc ::math::fibonacci {n} {
proc ::math::integrate { xy_pairs } {
proc ::math::max {val args} {
proc ::math::mean {val args} {
proc ::math::min {val args} {
proc ::math::product {val args} {
proc ::math::random {args} {
proc ::math::sigma {val1 val2 args} {
proc ::math::stats {val1 val2 args} {
proc ::math::sum {val args} {
proc ::math::expectDouble { arg } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/math/optimize.tcl]]
proc ::math::optimize::minimum { begin end func {maxerr 1.0e-4} } {
proc ::math::optimize::maximum { begin end func {maxerr 1.0e-4} } {
   proc f1 { x } { expr {$x*$x} }
   proc f2 { x } { expr {cos($x)} }
   proc f3 { x } { expr {sin($x)} }
   proc f4 { x } { expr {$x*(1.0-$x)} }
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/math/pdf_stat.tcl]]
proc ::math::statistics::pdf-normal { mean stdev x } {
proc ::math::statistics::pdf-uniform { pmin pmax x } {
proc ::math::statistics::pdf-exponential { mean x } {
proc ::math::statistics::cdf-normal { mean stdev x } {
proc ::math::statistics::cdf-students-t { degrees x } {
proc ::math::statistics::cdf-uniform { pmin pmax x } {
proc ::math::statistics::cdf-exponential { mean x } {
proc ::math::statistics::Inverse-cdf-uniform { pmin pmax prob } {
proc ::math::statistics::Inverse-cdf-exponential { mean prob } {
proc ::math::statistics::Inverse-cdf-normal { mean stdev prob } {
proc ::math::statistics::Initialise-cdf-normal { } {
proc ::math::statistics::random-uniform { pmin pmax number } {
proc ::math::statistics::random-exponential { mean number } {
proc ::math::statistics::random-normal { mean stdev number } {
proc ::math::statistics::Cdf-toms322 { m n x } {
proc ::math::statistics::Inverse-cdf-toms322 { m n prob } {
proc ::math::statistics::HistogramMake { cdf-values number } {
proc ::math::statistics::histogram-uniform { min max limits number } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/math/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/math/plotstat.tcl]]
proc ::math::statistics::plot-scale { canvas xmin xmax ymin ymax } {
proc ::math::statistics::plot-xydata { canvas xdata ydata {tag xyplot} } {
proc ::math::statistics::plot-xyline { canvas xdata ydata {tag xyplot} } {
proc ::math::statistics::plot-tdata { canvas tdata {tag xyplot} } {
proc ::math::statistics::plot-tline { canvas tdata {tag xyplot} } {
proc ::math::statistics::PlotXY { canvas type tag xdata ydata } {
proc ::math::statistics::plot-histogram { canvas counts limits {tag xyplot} } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/math/statistics.tcl]]
	proc $type { values } "BasicStats $type \$values"
    proc basic-stats { values } "BasicStats all \$values"
proc ::math::statistics::BasicStats { type values } {
proc ::math::statistics::histogram { limits values } {
proc ::math::statistics::corr { data1 data2 } {
proc ::math::statistics::test-normal { data confidence } {
proc ::math::statistics::t-test-mean { data est_mean est_stdev confidence } {
proc ::math::statistics::interval-mean-stdev { data confidence } {
proc ::math::statistics::quantiles { arg1 arg2 {arg3 {}} } {
proc ::math::statistics::QuantilesRawData { data confidence } {
proc ::math::statistics::QuantilesHistogram { limits counts confidence } {
proc ::math::statistics::autocorr { data } {
proc ::math::statistics::crosscorr { data1 data2 } {
proc ::math::statistics::mean-histogram-limits { mean stdev {number 8} } {
proc ::math::statistics::minmax-histogram-limits { min max {number 8} } {
proc ::math::statistics::linear-model { xdata ydata } {
proc ::math::statistics::linear-residuals { xdata ydata } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/md4/md4.tcl]]
proc ::md4::MD4Init {} {
proc ::md4::MD4Update {token data} {
proc ::md4::MD4Final {token} {
proc ::md4::HMACInit {K} {
proc ::md4::HMACUpdate {token data} {
proc ::md4::HMACFinal {token} {
proc ::md4::<<< {v n} {
proc ::md4::F {X Y Z} {
proc ::md4::G {X Y Z} {
proc ::md4::H {X Y Z} {
proc ::md4::MD4Hash {token msg} $::md4::MD4Hash_body
    proc ::md4::Hex {data} {
proc ::md4::Pop {varname {nth 0}} {
proc ::md4::Chunk {token channel {chunksize 4096}} {
proc ::md4::md4 {args} {
proc ::md4::hmac {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/md4/md4c.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/md4/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/md5/md5.tcl]]
    proc ::md5::md5 {msg} {
    proc ::md5::hmac {key text} {
    proc ::md5::test {} {
    proc ::md5::time {} {
	    proc md5pure::<<< {x i} {
	proc md5 {msg} $md5body
    proc ::md5::byte0 {i} {expr {0xff & $i}}
    proc ::md5::byte1 {i} {expr {(0xff00 & $i) >> 8}}
    proc ::md5::byte2 {i} {expr {(0xff0000 & $i) >> 16}}
    proc ::md5::byte3 {i} {expr {((0xff000000 & $i) >> 24) & 0xff}}
    proc ::md5::bytes {i} {
    proc ::md5::hmac {key text} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/md5/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/mime/mime.tcl]]
        proc base64 {-mode what -- chunk} {
        proc quoted-printable {-mode what -- chunk} {
        proc md5 {-- string} {
        proc unstack {channel} {
proc ::mime::initialize {args} {
proc ::mime::initializeaux {token args} {
proc ::mime::parsepart {token} {
proc ::mime::parsetype {token string} {
proc ::mime::parsetypeaux {token string} {
proc ::mime::finalize {token args} {
proc ::mime::getproperty {token {property ""}} {
proc ::mime::getsize {token} {
proc ::mime::getheader {token {key ""}} {
proc ::mime::setheader {token key value args} {
proc ::mime::getbody {token args} {
proc ::mime::getbodyaux {token reason {fragment ""}} {
proc ::mime::copymessage {token channel} {
proc ::mime::copymessageaux {token channel} {
proc ::mime::buildmessage {token} {
proc ::mime::buildmessageaux {token} {
proc ::mime::encoding {token} {
proc ::mime::encodingasciiP {line} {
proc ::mime::encodinglineP {line} {
proc ::mime::fcopy {token count {error ""}} {
proc ::mime::scopy {token channel offset len blocksize} {
proc ::mime::qp_encode {string {encoded_word 0} {no_softbreak 0}} {
proc ::mime::qp_decode {string {encoded_word 0}} {
proc ::mime::parseaddress {string} {
proc ::mime::parseaddressaux {token string} {
proc ::mime::addr_next {token} {
proc ::mime::addr_specification {token} {
proc ::mime::addr_routeaddr {token {checkP 1}} {
proc ::mime::addr_route {token} {
proc ::mime::addr_domain {token} {
proc ::mime::addr_local {token} {
proc ::mime::addr_phrase {token} {
proc ::mime::addr_group {token} {
proc ::mime::addr_end {token} {
proc ::mime::addr_x400 {mbox key} {
proc ::mime::parsedatetime {value property} {
proc ::mime::uniqueID {} {
proc ::mime::parselexeme {token} {
proc ::mime::mapencoding {enc} {
proc ::mime::reversemapencoding {mimeType} {
proc ::mime::word_encode {charset method string} {
proc ::mime::word_decode {encoded} {
proc ::mime::field_decode {field} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/mime/performance.tcl]]
proc construct_item_with_attachment size {
proc small_test size {
proc doforeach {} {
proc dolindex {} {
proc getnextline {} {
proc dogetnext {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/mime/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/mime/smtp.tcl]]
    proc transform {args} {
    proc unstack {channel} {
proc ::smtp::sendmessage {part args} {
proc ::smtp::sendmessageaux {token part originator recipients aloP} {
proc ::smtp::initialize {args} {
proc ::smtp::finalize {token args} {
proc ::smtp::winit {token originator {mode MAIL}} {
proc ::smtp::waddr {token recipient} {
proc ::smtp::wtext {token part} {
proc ::smtp::wtextaux {token part} {
proc ::smtp::wdata {token command buffer} {
proc ::smtp::talk {token secs command} {
proc ::smtp::hear {token secs} {
proc ::smtp::readable {token} {
proc ::smtp::timer {token} {
proc ::smtp::boolean {value} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/ncgi/ncgi.tcl]]
proc ::ncgi::reset {args} {
proc ::ncgi::urlStub {{url {}}} {
proc ::ncgi::query {} {
proc ::ncgi::type {} {
proc ::ncgi::decode {str} {
proc ::ncgi::encode {string} {
proc ::ncgi::nvlist {} {
proc ::ncgi::parse {} {
proc ::ncgi::input {{fakeinput {}} {fakecookie {}}} {
proc ::ncgi::value {key {default {}}} {
proc ::ncgi::valueList {key {default {}}} {
proc ::ncgi::setValue {key value} {
proc ::ncgi::setValueList {key valuelist} {
proc ::ncgi::setDefaultValue {key value} {
proc ::ncgi::setDefaultValueList {key valuelist} {
proc ::ncgi::empty {name} {
proc ::ncgi::import {cginame {tclname {}}} {
proc ::ncgi::importAll {args} {
proc ::ncgi::redirect {url} {
proc ::ncgi::header {{type text/html} args} {
proc ::ncgi::parseMimeValue {value} {
proc ::ncgi::multipart {type query} {
proc ::ncgi::import_file {cmd var {filename {}}} {
proc ::ncgi::cookie {cookie} {
proc ::ncgi::setCookie {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/ncgi/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/nntp/nntp.tcl]]
proc ::nntp::nntp {{server ""} {port ""} {name ""}} {
proc ::nntp::NntpProc {name {cmd ""} args} {
proc ::nntp::okprint {name} {
proc ::nntp::message {name} {
proc ::nntp::_article {name {msgid ""}} {
proc ::nntp::_authinfo {name {user "guest"} {pass "foobar"}} {
proc ::nntp::_body {name {msgid ""}} {
proc ::nntp::_group {name {group ""}} {
proc ::nntp::_head {name {msgid ""}} {
proc ::nntp::_help {name} {
proc ::nntp::_ihave {name {msgid ""} args} {
proc ::nntp::_last {name} {
proc ::nntp::_list {name {type ""}} {
proc ::nntp::_newgroups {name since args} {
proc ::nntp::_newnews {name {group ""} {since ""}} {
proc ::nntp::_next {name} {
proc ::nntp::_post {name article} {
proc ::nntp::_slave {name} {
proc ::nntp::_stat {name {msgid ""}} {
proc ::nntp::_quit {name} {
proc ::nntp::_date {name} {
proc ::nntp::_listgroup {name {group ""}} {
proc ::nntp::_mode_reader {name} {
proc ::nntp::_xgtitle {name {group_pattern ""}} {
proc ::nntp::_xhdr {name {header "message-id"} {list ""} {last ""}} {
proc ::nntp::_xindex {name {group ""}} {
proc ::nntp::_xmotd {name {since ""}} {
proc ::nntp::_xover {name {list ""} {last ""}} {
proc ::nntp::_xpat {name {header "subject"} {list 1} {last ""} args} {
proc ::nntp::_xpath {name {msgid ""}} {
proc ::nntp::_xsearch {name args} {
proc ::nntp::_xthread {name args} {
proc ::nntp::cmd {name cmd} {
proc ::nntp::command {name args} {
proc ::nntp::msg {name} {
proc ::nntp::groupinfo {name} {
proc ::nntp::msgid {name} {
proc ::nntp::status {name} {
proc ::nntp::fetch {name} {
proc ::nntp::response {name} {
proc ::nntp::returnval {name} {
proc ::nntp::squirt {name {body ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/nntp/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/ntp/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/ntp/time.tcl]]
proc ::time::cget {optionname} {
proc ::time::configure {args} {
proc ::time::SetOrGet {option {cget 0}} {
proc ::time::gettime {args} {
proc ::time::QueryTime {token} {
proc ::time::unixtime {{token {}}} {
proc ::time::status {token} {
proc ::time::error {token} {
proc ::time::wait {token} {
proc ::time::reset {token {why reset}} {
proc ::time::cleanup {token} {
proc ::time::ClientReadEvent {token} {
proc ::time::Finish {token {errormsg {}}} {
proc ::time::Pop {varname {nth 0}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/pop3/clnt.tcl]]
proc log {code {payload {}}} {
proc res {fail msg} {log res [list $fail $msg]}
proc wait {} {while {[gets stdin line] < 0} {}}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/pop3/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/pop3/pop3.tcl]]
proc ::pop3::config {chan} {
proc ::pop3::close {chan} {
proc ::pop3::delete {chan start {end -1}} {
proc ::pop3::last {chan} {
proc ::pop3::list {chan {msg ""}} {
proc ::pop3::open {args} {
proc ::pop3::retrieve {chan start {end -1}} {
proc ::pop3::RetrFast {chan size} {
proc ::pop3::RetrSlow {chan} {
proc ::pop3::send {chan cmdstring} {
proc ::pop3::status {chan} {
proc ::pop3::top {chan msg n} {
proc ::pop3::uidl {chan {msg ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/pop3/srv.tcl]]
proc log {txt} {global log ; puts $log $txt}
proc log__ {l t} {log "$l $t"}
proc done {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/pop3d/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/pop3d/pop3d.tcl]]
proc ::pop3d::new {{name ""}} {
proc ::pop3d::Pop3dProc {name {cmd ""} args} {
proc ::pop3d::_up {name} {
proc ::pop3d::_down {name} {
proc ::pop3d::_destroy {name {mode kill}} {
proc ::pop3d::_cget {name anoption} {
proc ::pop3d::_configure {name args} {
proc ::pop3d::_conn {name cmd args} {
proc ::pop3d::HandleNewConnection {name sock rHost rPort} {
proc ::pop3d::CloseConnection {name sock} {
proc ::pop3d::HandleCommand {name sock} {
proc ::pop3d::GreetPeer {name sock} {
proc ::pop3d::HandleUnknownCmd {name sock cmd line} {
proc ::pop3d::Respond2Client {name sock ok wtext} {
proc ::pop3d::H_user {name sock cmd line} {
proc ::pop3d::H_pass {name sock cmd line} {
proc ::pop3d::H_apop {name sock cmd line} {
proc ::pop3d::H_stat {name sock cmd line} {
proc ::pop3d::H_dele {name sock cmd line} {
proc ::pop3d::H_retr {name sock cmd line} {
proc ::pop3d::H_top  {name sock cmd line} {
proc ::pop3d::H_quit {name sock cmd line} {
proc ::pop3d::H_noop {name sock cmd line} {
proc ::pop3d::H_rset {name sock cmd line} {
proc ::pop3d::H_list {name sock cmd line} {
proc ::pop3d::CheckLogin {name sock clientid serverid storage} {
proc ::pop3d::Transfer {name sock msgid {limit -1}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/pop3d/pop3d_dbox.tcl]]
proc ::pop3d::dbox::new {{name ""}} {
proc ::pop3d::dbox::DboxProc {name {cmd ""} args} {
proc ::pop3d::dbox::_base {name base} {
proc ::pop3d::dbox::_destroy {name} {
proc ::pop3d::dbox::_add {name mbox} {
proc ::pop3d::dbox::_remove {name mbox} {
proc ::pop3d::dbox::_move {name old new} {
proc ::pop3d::dbox::_list {name} {
proc ::pop3d::dbox::_exists {name mbox} {
proc ::pop3d::dbox::_locked {name mbox} {
proc ::pop3d::dbox::_lock {name mbox} {
proc ::pop3d::dbox::_unlock {name mbox} {
proc ::pop3d::dbox::_stat {name mbox} {
proc ::pop3d::dbox::_size {name mbox {msgId {}}} {
proc ::pop3d::dbox::_dele {name mbox msgList} {
proc ::pop3d::dbox::_get {name mbox msgId} {
proc ::pop3d::dbox::Check {name mbox} {
proc ::pop3d::dbox::CheckDir {name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/pop3d/pop3d_udb.tcl]]
proc ::pop3d::udb::new {{name ""}} {
proc ::pop3d::udb::UdbProc {name {cmd ""} args} {
proc ::pop3d::udb::_destroy {name} {
proc ::pop3d::udb::_add {name usrName password storage} {
proc ::pop3d::udb::_remove {name usrName} {
proc ::pop3d::udb::_rename {name usrName newName} {
proc ::pop3d::udb::_lookup {name usrName} {
proc ::pop3d::udb::_exists {name usrName} {
proc ::pop3d::udb::_who {name} {
proc ::pop3d::udb::_save {name {file {}}} {
proc ::pop3d::udb::_read {name path} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/profiler/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/profiler/profiler.tcl]]
proc ::profiler::tZero { { tag "" } } {
proc ::profiler::tMark { { tag "" } } {
proc ::profiler::stats {args} {
proc ::profiler::Handler {name args} {
proc ::profiler::TraceHandler {name cmd args} {
proc ::profiler::enterHandler {name caller} {
proc ::profiler::leaveHandler {name caller} {
proc ::profiler::profProc {name arglist body} {
proc ::profiler::init {} {
proc ::profiler::print {{pattern *}} {
proc ::profiler::dump {{pattern *}} {
proc ::profiler::sortFunctions {{field ""}} {
proc ::profiler::reset {{pattern *}} {
proc ::profiler::suspend {{pattern *}} {
proc ::profiler::resume {{pattern *}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/report/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/report/report.tcl]]
proc ::report::report {name columns args} {
proc ::report::defstyle {styleName arguments body} {
proc ::report::rmstyle {styleName} {
proc ::report::stylearguments {styleName} {
proc ::report::stylebody {styleName} {
proc ::report::styles {} {
proc ::report::CheckStyleArguments {styleName arguments} {
proc ::report::ExecuteStyle {name styleName arguments} {
proc ::report::LinkExec {name styleName args} {
proc ::report::ReportProc {name {cmd ""} args} {
proc ::report::CheckColumn {columns column} {
proc ::report::CheckVerticals {name} {
proc ::report::_tAction {name template cmd args} {
proc ::report::_tcaption {name {size {}}} {
proc ::report::_bcaption {name {size {}}} {
proc ::report::_size {name column {size {}}} {
proc ::report::_sizes {name {sizes {}}} {
proc ::report::_pad {name column {where {}} {string { }}} {
proc ::report::_justify {name column {jvalue {}}} {
proc ::report::_printmatrix {name matrix} {
proc ::report::_printmatrix2channel {name matrix chan} {
proc ::report::_columns {name} {
proc ::report::_destroy {name} {
proc ::report::CheckMatrix {name matrix} {
proc ::report::ColumnSizes {name matrix statevar} {
proc ::report::Separator {tcode name matrix statevar} {
proc ::report::FormatData {tcode name statevar line rh} {
proc ::report::FormatCell {value size just} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/sha1/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/sha1/sha1.tcl]]
    proc ::sha1::sha1 {msg} {
    proc ::sha1::hmac {key text} {
	proc initK {} {
    proc ::sha1::test {} {
    proc ::sha1::time {} {
    proc ::sha1::sha1 {msg} {
    proc ::sha1::hmac {key text} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/smtpd/clients/mail-test.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/smtpd/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/smtpd/smtpd.tcl]]
proc ::smtpd::cget {option} {
proc ::smtpd::configure {args} {
proc ::smtpd::start {{myaddr {}} {port 25}} {
proc ::smtpd::stop {} {
proc ::smtpd::accept {channel client_addr client_port} {
proc ::smtpd::initializeState {channel} {
proc ::smtpd::state {channel args} {
proc ::smtpd::Puts {channel args} {
proc ::smtpd::service {channel} {
proc ::smtpd::uidchar {} {
proc ::smtpd::uid {} {
proc ::smtpd::gmtoffset {} {
proc ::smtpd::timestamp {} {
proc ::smtpd::server_ip {} {
proc ::smtpd::deliver {channel} {
proc ::smtpd::deliver_old {channel} {
proc ::smtpd::split_address {address} {
proc ::smtpd::HELO {channel line} {
proc ::smtpd::EHLO {channel line} {
proc ::smtpd::MAIL {channel line} {
proc ::smtpd::RCPT {channel line} {
proc ::smtpd::DATA {channel line} {
proc ::smtpd::RSET {channel line} {
proc ::smtpd::NOOP {channel line} {
proc ::smtpd::QUIT {channel line} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/soundex/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/soundex/soundex.tcl]]
proc ::soundex::knuth {in} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/stooop/mkpkgidx.tcl]]
proc indexData {packageName files} {
proc printUsage {exitCode} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/stooop/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/stooop/stooop.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/stooop/switched.tcl]]
    proc switched {this args} {            ;# arguments are option / value pairs
    proc ~switched {this} {}
    proc complete {this} {
    proc configure {this args} {      ;# should not be invoked before completion
    proc cget {this option} {
    proc description {this option} {  ;# build specified option description list
    proc descriptions {this} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/stooop/xifo.tcl]]
    proc xifo {this size} {
    proc ~xifo {this} {
    proc in {this data} {
    proc tidyUp {this} {                       ;# warning: for internal use only
    proc empty {this} {
    proc isEmpty {this} {
    proc lifo {this {size 2147483647}} xifo {$size} {}
    proc ~lifo {this} {}
    proc out {this} {
    proc data {this} {
    proc fifo {this {size 2147483647}} xifo {$size} {}
    proc ~fifo {this} {}
    proc out {this} {
    proc data {this} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/struct/graph.tcl]]
proc ::struct::graph::graph {{name ""}} {
proc ::struct::graph::GraphProc {name {cmd ""} args} {
proc ::struct::graph::_arc {name cmd args} {
proc ::struct::graph::__arc_delete {name args} {
proc ::struct::graph::__arc_exists {name arc} {
proc ::struct::graph::__arc_get {name arc {flag -key} {key data}} {
proc ::struct::graph::__arc_getall {name arc args} {
proc ::struct::graph::__arc_keys {name arc args} {
proc ::struct::graph::__arc_keyexists {name arc {flag -key} {key data}} {
proc ::struct::graph::__arc_insert {name source target args} {
proc ::struct::graph::__arc_set {name arc args} {
proc ::struct::graph::__arc_append {name arc args} {
proc ::struct::graph::__arc_lappend {name arc args} {
proc ::struct::graph::__arc_source {name arc} {
proc ::struct::graph::__arc_target {name arc} {
proc ::struct::graph::__arc_unset {name arc {flag -key} {key data}} {
proc ::struct::graph::_arcs {name args} {
proc ::struct::graph::_destroy {name} {
proc ::struct::graph::__generateUniqueArcName {name} {
proc ::struct::graph::__generateUniqueNodeName {name} {
proc ::struct::graph::_get {name {flag -key} {key data}} {
proc ::struct::graph::_getall {name args} { 
proc ::struct::graph::_keys {name args} { 
proc ::struct::graph::_keyexists {name {flag -key} {key data}} {
proc ::struct::graph::_node {name cmd args} {
proc ::struct::graph::__node_degree {name args} {
proc ::struct::graph::__node_delete {name args} {
proc ::struct::graph::__node_exists {name node} {
proc ::struct::graph::__node_get {name node {flag -key} {key data}} {
proc ::struct::graph::__node_getall {name node args} { 
proc ::struct::graph::__node_keys {name node args} { 
proc ::struct::graph::__node_keyexists {name node {flag -key} {key data}} {
proc ::struct::graph::__node_insert {name args} {
proc ::struct::graph::__node_opposite {name node arc} {
proc ::struct::graph::__node_set {name node args} {
proc ::struct::graph::__node_append {name node args} {
proc ::struct::graph::__node_lappend {name node args} {
proc ::struct::graph::__node_unset {name node {flag -key} {key data}} {
proc ::struct::graph::_nodes {name args} {
proc ::struct::graph::_set {name args} {
proc ::struct::graph::_swap {name node1 node2} {
proc ::struct::graph::_unset {name {flag -key} {key data}} {
proc ::struct::graph::_walk {name node args} {
proc ::struct::graph::Union {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/struct/list.tcl]]
proc ::struct::list::list {cmd args} {
    proc ::struct::list::K { x y } { set x }
    proc ::struct::list::lset { var index arg } {
proc ::struct::list::LongestCommonSubsequence {
proc ::struct::list::LongestCommonSubsequence2 {
proc ::struct::list::LcsInvert {lcsData len1 len2} {
proc ::struct::list::LcsInvert2 {idx1 idx2 len1 len2} {
proc ::struct::list::LcsInvertMerge {lcsData len1 len2} {
proc ::struct::list::LcsInvertMerge2 {idx1 idx2 len1 len2} {
proc ::struct::list::Reverse {sequence} {
proc ::struct::list::Assign {sequence args} {
proc ::struct::list::Flatten {args} {
proc ::struct::list::Map {sequence cmdprefix} {
proc ::struct::list::Fold {sequence initialvalue cmdprefix} {
proc ::struct::list::Iota {n} {
proc ::struct::list::Equal {a b} {
proc ::struct::list::Repeat {value args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/struct/matrix.tcl]]
proc ::struct::matrix::matrix {{name ""}} {
proc ::struct::matrix::MatrixProc {name {cmd ""} args} {
proc ::struct::matrix::_add {name {cmd ""} args} {
proc ::struct::matrix::_delete {name {cmd ""} args} {
proc ::struct::matrix::_format {name {cmd ""} args} {
proc ::struct::matrix::_get {name {cmd ""} args} {
proc ::struct::matrix::_insert {name {cmd ""} args} {
proc ::struct::matrix::_search {name args} {
proc ::struct::matrix::_set {name {cmd ""} args} {
proc ::struct::matrix::_swap {name {cmd ""} args} {
proc ::struct::matrix::__add_column {name {values {}}} {
proc ::struct::matrix::__add_row {name {values {}}} {
proc ::struct::matrix::__add_columns {name n} {
proc ::struct::matrix::__add_rows {name n} {
proc ::struct::matrix::_cells {name} {
proc ::struct::matrix::_cellsize {name column row} {
proc ::struct::matrix::_columns {name} {
proc ::struct::matrix::_columnwidth {name column} {
proc ::struct::matrix::__delete_column {name column} {
proc ::struct::matrix::__delete_row {name row} {
proc ::struct::matrix::_destroy {name} {
proc ::struct::matrix::__format_2string {name {report {}}} {
proc ::struct::matrix::__format_2chan {name {report {}} {chan stdout}} {
proc ::struct::matrix::__get_cell {name column row} {
proc ::struct::matrix::__get_column {name column} {
proc ::struct::matrix::__get_rect {name column_tl row_tl column_br row_br} {
proc ::struct::matrix::__get_row {name row} {
proc ::struct::matrix::__insert_column {name column {values {}}} {
proc ::struct::matrix::__insert_row {name row {values {}}} {
proc ::struct::matrix::_link {name args} {
proc ::struct::matrix::_links {name} {
proc ::struct::matrix::_rowheight {name row} {
proc ::struct::matrix::_rows {name} {
proc ::struct::matrix::__set_cell {name column row value} {
proc ::struct::matrix::__set_column {name column values} {
proc ::struct::matrix::__set_rect {name column row values} {
proc ::struct::matrix::__set_row {name row values} {
proc ::struct::matrix::__swap_columns {name column_a column_b} {
proc ::struct::matrix::__swap_rows {name row_a row_b} {
proc ::struct::matrix::_unlink {name avar} {
proc ::struct::matrix::ChkColumnIndex {name column} {
proc ::struct::matrix::ChkRowIndex {name row} {
proc ::struct::matrix::ChkColumnIndexNeg {name column} {
proc ::struct::matrix::ChkRowIndexNeg {name row} {
proc ::struct::matrix::ChkColumnIndexAll {name column} {
proc ::struct::matrix::ChkRowIndexAll {name row} {
proc ::struct::matrix::MatTraceIn {avar name var idx op} {
proc ::struct::matrix::MatTraceOut {avar name var idx op} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/struct/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/struct/pool.tcl]]
proc ::struct::pool::lmember {list element} {
proc ::struct::pool::create { {poolname ""} {maxsize 10} } {
proc ::struct::pool::pool { {poolname ""} {maxsize 10} } {
proc ::struct::pool::poolCmd {poolname subcmd args} {
proc ::struct::pool::destroy {poolname {forceArg ""}} {
proc ::struct::pool::add {poolname args} {
proc ::struct::pool::clear {poolname {forceArg ""} } {
proc ::struct::pool::info {poolname type args} {
proc ::struct::pool::maxsize {poolname {reqsize ""} } {
proc ::struct::pool::release {poolname item} {
proc ::struct::pool::remove {poolname item {forceArg ""} } {
proc ::struct::pool::request {poolname itemvar args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/struct/pooltest.tcl]]
proc poolinfo {} {
proc MatchErrMsg {errid errmsg} {
proc VARNAME_EXISTS {} {
proc DUPLICATE_POOLNAME {} {
proc NONINT_REQSIZE {} {
proc UNKNOWN_POOL {} {
proc BAD_SUBCMD {} {
proc SOME_ITEMS_NOT_FREE {} {
proc DUPLICATE_ITEM_IN_ARGS {} {
proc FORBIDDEN_ALLOCID {} {
proc ITEM_ALREADY_IN_POOL {} {
proc ITEM_STILL_ALLOCATED {} {
proc ITEM_NOT_ALLOCATED {} {
proc ITEM_NOT_IN_POOL {} {
proc EXCEED_MAXSIZE {} {
proc INVALID_POOLSIZE {} {
proc WRONG_INFO_TYPE {} {
proc UNKNOWN_ARG {} {
proc WRONG_NARGS {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/struct/prioqueue.tcl]]
    proc K {x y} {set x} ;# DKF's K combinator
proc ::struct::prioqueue::prioqueue {args} {
proc ::struct::prioqueue::QueueProc {name {cmd ""} args} {
proc ::struct::prioqueue::_clear {name} {
proc ::struct::prioqueue::_destroy {name} {
proc ::struct::prioqueue::_get {name {count 1}} {
proc ::struct::prioqueue::_peek {name {count 1}} {
proc ::struct::prioqueue::_peekpriority {name {count 1}} {
proc ::struct::prioqueue::_put {name args} {
proc ::struct::prioqueue::_size {name} {
proc ::struct::prioqueue::__linsertsorted {list newElement sortopt sortdir} {
proc ::struct::prioqueue::__elementcompare-integer {prio newPrio sortdir} {
proc ::struct::prioqueue::__elementcompare-real {prio newPrio sortdir} {
proc ::struct::prioqueue::__elementcompare-ascii {prio newPrio sortdir} {
proc ::struct::prioqueue::__elementcompare-dictionary {prio newPrio sortdir} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/struct/queue.tcl]]
proc ::struct::queue::queue {{name ""}} {
proc ::struct::queue::QueueProc {name {cmd ""} args} {
proc ::struct::queue::_clear {name} {
proc ::struct::queue::_destroy {name} {
proc ::struct::queue::_get {name {count 1}} {
proc ::struct::queue::_peek {name {count 1}} {
proc ::struct::queue::_put {name args} {
proc ::struct::queue::_size {name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/struct/record.tcl]]
proc ::struct::record::record {cmd_ args} {
proc ::struct::record::Define {defn_ vars_ args} {
proc ::struct::record::Create {defn_ inst_ args} {
proc ::struct::record::Access {defn_ inst_ var_ args} {
proc ::struct::record::Cmd {inst_ args} {
proc ::struct::record::Ns {inst_} {
proc ::struct::record::Show {what_ {record_ ""}} {
proc ::struct::record::Delete {sub_ item_} {
proc ::struct::record::Exists {sub_ item_} {
proc ::struct::record::Qualify {item_ {level_ 2}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/struct/skiplist.tcl]]
proc ::struct::skiplist::skiplist {{name ""} args} {
proc ::struct::skiplist::SkiplistProc {name {cmd ""} args} {
proc ::struct::skiplist::_destroy {name} {
proc ::struct::skiplist::_search {name key} {
proc ::struct::skiplist::_insert {name key value} {
proc ::struct::skiplist::_delete {name key} {
proc ::struct::skiplist::_size {name} {
proc ::struct::skiplist::_walk {name cmd} {
proc ::struct::skiplist::randomLevel {prob level maxlevel} {
proc ::struct::skiplist::_dump {name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/struct/stack.tcl]]
proc ::struct::stack::stack {{name ""}} {
proc ::struct::stack::StackProc {name cmd args} {
proc ::struct::stack::_clear {name} {
proc ::struct::stack::_destroy {name} {
proc ::struct::stack::_peek {name {count 1}} {
proc ::struct::stack::_peek_one {name} {
proc ::struct::stack::_replace {name item} {
proc ::struct::stack::_pop {name {count 1}} {
proc ::struct::stack::_push {name args} {
proc ::struct::stack::_rotate {name count steps} {
proc ::struct::stack::_size {name} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/struct/struct.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/struct/tree.tcl]]
proc ::struct::tree::tree {{name ""}} {
proc ::struct::tree::TreeProc {name {cmd ""} args} {
proc ::struct::tree::_children {name node} {
proc ::struct::tree::_cut {name node} {
proc ::struct::tree::_delete {name node} {
proc ::struct::tree::_depth {name node} {
proc ::struct::tree::_destroy {name} {
proc ::struct::tree::_exists {name node} {
proc ::struct::tree::__generateUniqueNodeName {name} {
proc ::struct::tree::_get {name node {flag -key} {key data}} {
proc ::struct::tree::_getall {name node args} { 
proc ::struct::tree::_keys {name node args} { 
proc ::struct::tree::_keyexists {name node {flag -key} {key data}} {
proc ::struct::tree::_index {name node} {
proc ::struct::tree::_insert {name parentNode index args} {
proc ::struct::tree::_isleaf {name node} {
proc ::struct::tree::_move {name parentNode index node args} {
proc ::struct::tree::_next {name node} {
proc ::struct::tree::_numchildren {name node} {
proc ::struct::tree::_parent {name node} {
proc ::struct::tree::_previous {name node} {
proc ::struct::tree::_set {name node args} {
proc ::struct::tree::_append {name node args} {
proc ::struct::tree::_lappend {name node args} {
proc ::struct::tree::_size {name {node root}} {
proc ::struct::tree::_splice {name parentNode from {to end} args} {
proc ::struct::tree::_swap {name node1 node2} {
proc ::struct::tree::_unset {name node {flag -key} {key data}} {
proc ::struct::tree::_walk {name node args} {
proc ::struct::tree::WalkCall {tree node action cmd} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/textutil/adjust.tcl]]
        proc adjust { text args } { }
        proc indent { text args } { }
        proc undent { text args } { }
proc ::textutil::adjust::adjust { text args } {
proc ::textutil::adjust::Configure { args } {
proc ::textutil::adjust::Adjust { varOrigName varNewName } {
proc ::textutil::adjust::Justification { line index arrayName } {
proc ::textutil::adjust::SortList { list dir index } {
proc ::textutil::adjust::Hyphenation { str } {
proc ::textutil::adjust::listPredefined {} {
proc ::textutil::adjust::getPredefined {name} {
proc ::textutil::adjust::readPatterns { filNam } {
proc ::textutil::adjust::indent {text prefix {skip 0}} {
proc ::textutil::adjust::undent {text} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/textutil/expander.tcl]]
    proc expander {name} {uplevel ::textutil::expander::expander [list $name]}
proc ::textutil::expander::expander {name} {
    proc $name {method args} [format {
proc ::textutil::expander::Methods {name method argList} {
proc ::textutil::expander::Get {key} {
proc ::textutil::expander::Set {key value} {
proc ::textutil::expander::Var {key} {
proc ::textutil::expander::Contains {list value} {
proc ::textutil::expander::Op_lb {name {newbracket ""}} {
proc ::textutil::expander::Op_rb {name {newbracket ""}} {
proc ::textutil::expander::Op_setbrackets {name lbrack rbrack} {
proc ::textutil::expander::Op_errmode {name {newErrmode ""}} {
proc ::textutil::expander::Op_evalcmd {name {newEvalCmd ""}} {
proc ::textutil::expander::Op_textcmd {name args} {
proc ::textutil::expander::Op_reset {name} {
proc ::textutil::expander::Op_cpush {name cname} {
proc ::textutil::expander::Op_cis {name cname} {
proc ::textutil::expander::Op_cname {name} {
proc ::textutil::expander::Op_cset {name varname value} {
proc ::textutil::expander::Op_cget {name varname} {
proc ::textutil::expander::Op_cvar {name varname} {
proc ::textutil::expander::Op_cpop {name cname} {
proc ::textutil::expander::Op_ctopandclear {name} {
proc ::textutil::expander::Op_cappend {name text} {
proc ::textutil::expander::Op_expand {name inputString {brackets ""}} {
proc ::textutil::expander::HandleError {name title command errmsg} {
proc ::textutil::expander::ExtractToToken {string token mode} {
proc ::textutil::expander::GetMacro {string} {
proc ::textutil::expander::StripBrackets {macro} {
proc ::textutil::expander::IsBracketed {macro} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/textutil/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/textutil/split.tcl]]
	proc splitx [list str [list regexp "\[\t \r\n\]+"]] {}
    proc ::textutil::split::splitx {str {regexp {[\t \r\n]+}}} {
    proc ::textutil::split::splitx [list str [list regexp "\[\t \r\n\]+"]] {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/textutil/tabify.tcl]]
	proc tabify    { string { num 8 } } { }
	proc untabify  { string { num 8 } } { }
	proc tabify2   { string { num 8 } } { }
	proc untabify2 { string { num 8 } } { }
proc ::textutil::tabify::tabify { string { num 8 } } {
proc ::textutil::tabify::untabify { string { num 8 } } {
proc ::textutil::tabify::MakeTabStr { num } {
proc ::textutil::tabify::tabifyLine { line num } {
proc ::textutil::tabify::checkArr { num } {
proc ::textutil::tabify::untabifyLine { line num } {
proc ::textutil::tabify::tabify2 { string { num 8 } } {
proc ::textutil::tabify::untabify2 { string { num 8 } } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/textutil/textutil.tcl]]
	proc StrRepeat { char num } {
    proc ::textutil::strRepeat {char num} {
    proc ::textutil::blank {n} {
    proc ::textutil::strRepeat {char num} {
    proc ::textutil::blank {n} {
proc ::textutil::chop {string} {
proc ::textutil::tail {string} {
proc ::textutil::cap {string} {
proc ::textutil::uncap {string} {
proc ::textutil::longestCommonPrefix {args} {
proc ::textutil::longestCommonPrefixList {list} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/textutil/trim.tcl]]
	proc trimleft  { text { trim "[ \t]+" } } { }
	proc trimright { text { trim "[ \t]+" } } { }
	proc trim      { text { trim "[ \t]+" } } { }
	proc trimPrefix {text prefix} {}
	proc trimEmptyHeading {text} {}
proc ::textutil::trim::trimleft {text {trim "[ \t]+"}} {
proc ::textutil::trim::trimright {text {trim "[ \t]+"}} {
proc ::textutil::trim::trim {text {trim "[ \t]+"}} {
proc ::textutil::trim::MakeStr { string pos }  {
proc ::textutil::trim::trimPrefix {text prefix} {
proc ::textutil::trim::trimEmptyHeading {text} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/uri/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/uri/uri.tcl]]
proc ::uri::register {schemeList script} {
proc ::uri::split {url {defaultscheme http}} {
proc ::uri::SplitFtp {url} {
proc ::uri::JoinFtp args {
proc ::uri::SplitHttps {url} {
proc ::uri::SplitHttp {url} {
proc ::uri::JoinHttp {args} {
proc ::uri::JoinHttps {args} {
proc ::uri::JoinHttpInner {scheme defport args} {
proc ::uri::SplitFile {url} {
proc ::uri::JoinFile args {
proc ::uri::SplitMailto {url} {
proc ::uri::JoinMailto args {
proc ::uri::SplitNews {url} {
proc ::uri::JoinNews args {
proc ::uri::GetUPHP {urlvar} {
proc ::uri::GetHostPort {urlvar} {
proc ::uri::resolve {base url} {
proc ::uri::isrelative url {
proc ::uri::geturl {url args} {
proc ::uri::file_geturl {url args} {
proc ::uri::join args {
proc ::uri::canonicalize uri {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tcllib1.4/uri/urn-scheme.tcl]]
proc ::uri::SplitUrn {uri} {
proc ::uri::JoinUrn args {
proc ::uri::urn::quote {url} {
proc ::uri::urn::unquote {url} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tdom080/pkgIndex.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tdom080/tdom.tcl]]
proc ::dom::DOMImplementation::hasFeature { dom feature {version ""} } {
proc ::dom::DOMImplementation::load { dom url } {
proc ::dom::domDoc::isa { doc className } {
proc ::dom::domDoc::info { doc subcommand args } {
proc ::dom::domDoc::importNode { doc importedNode deep } {
proc ::dom::domNode::isa { doc className } {
proc ::dom::domNode::info { doc subcommand args } {
proc ::dom::domNode::isWithin { node tagName } {
proc ::dom::domNode::tagName { node } {
proc ::dom::domNode::simpleTranslate { node output_var trans_specs } {
proc ::dom::domNode::childNodesLive { node } {
proc ::dom::domNode::item { nodeListNode index } {
proc ::dom::domNode::length { nodeListNode } {
proc ::dom::domNode::appendData { node  arg } {
proc ::dom::domNode::deleteData { node offset count } {
proc ::dom::domNode::insertData { node  offset arg } {
proc ::dom::domNode::replaceData { node offset count arg } {
proc ::dom::domNode::substringData { node offset count } {
proc ::dom::xpathFuncHelper::coerce2number { type value } {
proc ::dom::xpathFuncHelper::coerce2string { type value } {
proc ::dom::xpathFunc::function-available { ctxNode pos
proc ::dom::xpathFunc::element-available { ctxNode pos
proc ::dom::xpathFunc::system-property { ctxNode pos
proc tDOM::IANAEncoding2TclEncoding {IANAName} {
proc tDOM::xmlOpenFile {filename {encodingString {}}} {
proc tDOM::xmlReadFile {filename {encodingString {}}} {
    proc tDOM::extRefHandler {base systemId publicId} {
proc tDOM::baseURL {path} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tdv/test.tcl]]
proc setup_vtest {w geo gtype} {
proc test_object {w what} {
proc write_ppm {v} {
proc write_vrml {v} {
proc write_ps {v} {
proc do_one {n pos} {
proc mess {text args} {
proc set_cursor {w spec} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tdv/viewer.tcl]]
proc tdv_init {w width height gsys bgcolor debug {dbuffer 1}
	proc blt_bell {} { puts -nonewline \007 }
	    proc tdv_mess {text {color ""} {font ""}} {
	    proc tdv_mess {text {color ""} {font ""}} {
proc tdv_dynamics_bindings {w args} {
proc tdv_selection_bindings {w} {
proc tdv_unfocus_entries {} {
proc tdv_shiftkey {w on x y} {
proc tdv_selection_bindings2 {w mod cur fn1 fn2 fn3} {
proc tdv_sb_func {w what args} {
proc tdv_sb_center {w} {
proc tdv_sb_toggle_solid_display {w} {
proc tdv_sb_start_driver_unix {} {
proc tdv_sb_copy_config_win {} {
proc tdv_sb_wb_manage_grab {grab} {
proc tdv_wheelzoom {w in {t ""} {X ""} {Y ""}} {
proc tdv_motion {w x y} {
proc tdv_update_track_mouse {w {x ""} {y ""}} {
proc tdv_selection_setloc {w x y} {
proc tdv_init_2 {w} {
proc tdv_cur {wlist {cur ""} {prev 0} {col orange}} {
proc tdv_win_change {w width height} {
proc tdv_dyn_reset {w} {
proc tdv_define_keys {bw w} {
proc tdv_modify_zoff {w factor} {
proc tdv_set_zoff {w zval} {
proc tdv_obtain_line {wlist {nice 0}} {
proc tdv_obtain_screen_pos {wlist} {
proc tdv_trans_update {w {redraw 1}} {
proc tdv_save_position {w} {
proc tdv_load_position {w pos} {
proc tdv_temporary_dynamics {w} {
proc tdv_begin_op {w but x y curfile {change_cur 1} {device mouse}} {
proc tdv_end_op_reset {w {m 0}} {
proc tdv_smooth_move_double_click {w x y} {
proc tdv_end_op {w {device mouse}} {
proc tdv_doit_op {w x y} {
proc tdv_translate {w x y} {
proc tdv_rotate {w x y} {
proc tdv_rotate_axis {w x y z t} {
proc tdv_scale {w x y} {
proc tdv_qcomp {qt1 qt2} {
proc tdv_begin_anno_move {w x y} {
proc tdv_anno_move {w x y} {
proc tdv_end_anno_move {w} {
proc tdv_begin_anno_edit {w x y} {
proc tdv_anno_edit {w x y} {
proc tdv_end_anno_edit {w} {
proc tdv_do_select {w button double x y} {
proc tdv_do_move {w button x y} {
proc tdv_do_release {w button x y {what_mod 1}} {
proc tdv_select_translate_button_number {n} {
proc tdv_home_init {w {dir ""}} {
proc tdv_home_init_recur {} {
proc tdv_redraw {w} {
proc tdv_maxview {w} {
proc tdv_home {w {what_dir ""}} {
proc tdv_isoview {w} {
proc tdv_three_points {w p1 p2 p3} {
proc tdv_reverse {w} {
proc tdv_nearest_axis {w} {
proc tdv_view_direction {w} {
proc tdv_save_current_orientation {w} {
proc tdv_add_user_view {name orient} {
proc tdv_set_current_orientation {w pos rot scale center} {
proc tdv_clear_user_views {} {
proc tdv_reset_user_views {} {
proc tdv_view_point_direction {w pt dir} {
proc tdv_changebg {w {col ""}} {
proc tdv_getbg {w} {
proc tdv_scale_to_fit {w {show_mes 1}} {
proc tdv_rotate_screen_y {w} {
proc tdv_rotate_screen_z {w} {
proc tdv_calc_bbox {w} {
proc tdv_get_screen_minmax {w bbox} {
proc tdv_get_centroid {w} {
proc tdv_get_diameter {w} {
proc tdv_along_axis {w axis} {
proc tdv_align_axes {w} {
proc tdv_axis {w axis} {
proc tdv_set_center {w cent} {
proc tdv_toggle_axes {w {v ""}} {
proc tdv_toggle_two_d_grid {w {v ""}} {
proc tdv_toggle_twod {w {v ""}} {
proc tdv_toggle_rulers {w {v ""}} {
proc tdv_set_ruler_units {w y0 c x0 name} {
proc tdv_lowerleft_ypos {w} {
proc tdv_toggle_date {w {v ""}} {
proc tdv_toggle_title {w {v ""}} {
proc tdv_toggle_track_mouse {w {v ""}} {
proc tdv_toggle_angled_text {w theta {v ""}} {
proc tdv_toggle_origin {w {v ""}} {
proc tdv_toggle_dbuffer {w {v ""}} {
proc tdv_toggle_hiddenline {w {v ""}} {
proc tdv_toggle_directlight {w {v ""}} {
proc tdv_toggle_xgouraud {w {v ""}} {
proc tdv_toggle_depthcue {w {v ""}} {
proc tdv_set_last_viewer_clicked {w} {
proc tdv_what_window {w} {
proc tdv_zoomout {w} {
proc tdv_zoomin {w} {
proc tdv_zoomin_do {w} {
proc tdv_scale_to_box {w lo hi pct} {
proc tdv_get_rubbox {w} {
proc tdv_cancel_rubbox {w} {
proc tdv_multiple_rubbox {w cmd} {
proc tdv_set_waiting_func {w i x y} {
proc tdv_multiple_lines {w} {
proc tdv_multiple_planes {w} {
proc tdv_pick {{what ""} {max_num 0} {mess ""} {v ""} {maxd 0}} {
proc tdv_select_set_bindings {v} {
proc tdv_select_unset_bindings {v} {
proc tdv_select_toggle_dynamics {v} {
proc tdv_push_key_command {key cmd {help ""}} {
proc tdv_pop_key_command {key} {
proc tdv_set_key_command {key cmd {help ""} {actvar ""} {actvals ""}} {
proc tdv_keyboard_command {target key x y state} {
proc tdv_init_shortcuts {control {change_bindings ""}} {
    proc ? args tdv_print_shortcuts
proc tdv_change_zoffset {w farther} {
proc tdv_print_shortcuts {} {
proc tdv_edit_bindings {{w ""} {buts ""}} {
proc tdv_edit_bindings_done {args} {
proc tdv_edit_bindings_form {d} {
proc tdv_reset_bindings {w callup} {
proc tdv_edit_bindings_save {{save 0}} {
proc tdv_mswin_printers {w} {
proc tdv_bbox_of_images {ims} {
proc tdv_merge_bboxes {bbs} {
proc tdv_bbox_of_pts {pts} {
proc tdv_check_bbox {} { 
proc tdv_check_angle {} {
proc tdv_set_anno_icon {w which text is_bitmap} {
proc tdv_update_symmetry {w} {
proc tdv_get_workspace_topviewer {{dims ""}} {
proc tdv_get_win_dim {w} {
proc tdv_post_cmd {w what {sub ""} args} {
proc tdv_active {on} {
proc tdv_mouse_pick {args} {
proc tdv_mouse_state {args} {
proc tdv_select_rbox {x1 y1 x2 y2} {
proc tdv_configure_select_rbox {rbox x2 y2} {
proc tdv_delete_select_rbox {rbox} {
proc tdv_fixed_text {x y text} {
proc tdv_lighting_params {} {
proc tdv_lights_edit {} {
proc reset_default_lighting {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tdv/wb_binding.tcl]]
proc test_wb_looks {w} {
proc tdv_set_lighting {n w} {
proc tdv_background_init {w {bgcolor ""} {bg1 ""}} {
proc tdv_background {w {bgcolor ""} {bg1 ""}} {
proc tdv_logo_background {{w ""}} {
proc tdv_logo {w path {pos ""}} {
proc tdv_logo_delete {w} {
proc tdv_wb_binding {w} {
proc tdv_wb_circle_toggle {w {ent <ButtonPress-1>}} {
proc tdv_wb_axes_toggle {w} {
proc tdv_set_mouse_motion_binding {w ent {b ""} {what ""}} {
proc tdv_mouse_butmotion {w ent x y} {
proc tdv_zoomin_begin {w b x y} {
proc tdv_zoomin_mv {w x y} {
proc tdv_zoomin_end {w} {
proc tdv_set_mouse_release_binding {w ent {b ""} {what ""}} {
proc tdv_mouse_butrelease {w ent x y} {
proc tdv_set_mouse_press_binding {w ent b what} {
proc tdv_mouse_butpress {w ent x y} {
proc tdv_track_wb_mouse {w x y} {
proc tdv_wb_roll {w x y} {
proc tdv_wb_pitch {w x y} {
proc tdv_wb_yaw {w x y} {
proc tdv_wb_skip {w} {
proc tdv_wb_axisrot {w x y} {
proc tdv_set_wb_cursor {w spec} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tetra/coarsener.tcl]]
proc modify_coarsen {} {
proc make_coarse_params {pf} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tetra/disp_tetra.tcl]]
proc make_display_window {} {
proc make_cutter_window {w} {
proc disable_stuff {dis} {
proc add_families {} {
proc update_display {args} {
proc cad_family_name_string {} {
proc cad_families {} {
proc mesh_family_name_string {} {
proc cad_family_string {} {
proc mesh_family_string {} {
proc get_families {} {
proc add_one_family {name} {
proc screen_blank {which} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tetra/improver.tcl]]
proc modify_smooth {tetra} {
proc aspect_show_tetras {tetra num} {
proc aspect_do_smooth {tetra} {
proc aspect_update_nums {lines tetra} {
proc old__improver_get {tetra} {
proc old__improver_update {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tetra/leo_edit.tcl]]
proc pick_some_elements {max} {
proc pick_some_bars {max} {
proc pick_some_nodes {max {extra_mess ""}} {
proc old__modify_create_elems {} {
proc modify_del_elems {} {
proc modify_change_family {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tetra/mesher_tetra.tcl]]
proc mesher_select {} {
proc mesher_delete_tetin {name} {
proc mesher_tetra {} {
proc bindtofiles { label_name directory } {
proc create_cutter_buttons { d ln } {
proc mesher_cutter {ask} {
proc cutter_running {} {
proc build_tetra_param_file {file input output} {
proc time_sort {f1 f2} { return [expr {[lindex $f2 0] - [lindex $f1 0]}] }
proc mesher_monitor {} {
proc mesher_degenerate {} {
proc degen_display {} {
proc degen_remove {} {
proc mesher_close_holes {} {
proc mesher_flood_fill {} {
proc mesher_auto_orphan {} {
proc mesher_fix_spikes {} {
proc mesher_save {what {ask 1}} {
proc set_phase_mesher {in} {
proc file_quit {} {
proc file_hardcopy_print_special {} {
proc old__file_hardcopy {} {
proc old__file_hardcopy_form {pref geo {format_choice 1}} {
proc file_shell {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tetra/modify_tetra.tcl]]
proc modify_load_mesh {} {
proc modify_save_mesh {} {
proc print_family_stats {} {
proc modify_list_families {} {
proc set_phase_modify {in} {
proc select_cut_domain {load} {
proc select_uncut_and_cut_domain {} {
proc delete_cut_domain {name} {
proc run_mesh_filter {command before_dom after_dom} {
proc reload_leo_domain {dom verbose {init 0}} {
proc ensure_cad_surface_exists {} {
proc parallel_to_elem {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tetra/offset.tcl]]
proc modify_offset {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tetra/tetra.tcl]]
proc tool_command {} {
proc tool_setup {} {
proc check_binding {win x y wx wy c} {
proc make_tool_windows {} {
proc file_dirty {} { global mesh_dirty; set mesh_dirty 1 }
proc orient_home_command {} {
proc showstuff_update {} {
proc set_shrink {} {
proc te_marker_update {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tetra/tri_edit.tcl]]
proc set_phase_tri_edit {in} {
proc te_selection {} {
proc te_loadsave {save} {
proc te_movenodes {} {
proc te_swap_edges {} {
proc te_update_shading {} {
proc te_sel_clear {} {
proc te_sel_all {} {
proc te_sel_inv {} {
proc te_sel_number {} {
proc te_sel_screen_add {} {
proc te_sel_screen_remove {} {
proc te_sel_screen_restrict {} {
proc te_sel_screen_aspect {} {
proc te_sel_screen_determinant {} {
proc te_ext_layer_add {} {
proc te_ext_layer_remove {} {
proc te_fill_to_curve {} {
proc te_all_attached {edge} {
proc te_blank_attached {edge} {
proc te_sel_att_tetra {} {
proc te_blank_invisible {} {
proc te_del_screen {} {
proc te_del_disp {} {
proc te_create_screen {} {
proc te_split {} {
proc te_split_screen {} {
proc te_split_quads {} {
proc te_split_side {} {
proc te_split_center {} {
proc te_split_single {} {
proc te_query_tol {} {
proc te_split_tol {} {
proc te_reorient {} {
proc te_join {} {
proc te_do_join {} {
proc te_move_node {} {
proc te_change_family {} {
proc te_merge_nodes {} {
proc te_merge_nodes_screen {} {
proc te_merge_nodes_dist {adj} {
proc te_delete_nodes {} {
proc te_smooth_disp {} {
proc te_diagnostics {} {
proc te_diag {what} {
proc te_histogram {{label ""} {nbars 25} {min 0} {max 1} {ylim 16} {args ""}} {
proc te_histogram_select {w intervals arguments solid } {
proc te_project_nodes {} {
proc te_add_bars {} {
proc te_del_bars {} {
proc undo_action {} {
proc redo_action {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/bgerror.tcl]]
proc bgerror err {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/button.tcl]]
proc tkButtonEnter w {
proc tkButtonLeave w {
proc tkCheckRadioEnter w {
proc tkButtonDown w {
proc tkCheckRadioDown w {
proc tkButtonUp w {
proc tkButtonEnter {w} {
proc tkButtonLeave w {
proc tkButtonDown w {
proc tkButtonUp w {
proc tkButtonEnter {w} {
proc tkButtonLeave w {
proc tkButtonDown w {
proc tkButtonUp w {
proc tkButtonInvoke w {
proc tkCheckRadioInvoke {w {cmd invoke}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/choosedir.tcl]]
=proc ::tk::dialog::file::chooseDir::tkChooseDirectory {args} {=
=proc ::tk::dialog::file::chooseDir::Config {dataName argList} {=
=proc ::tk::dialog::file::chooseDir::OkCmd {w} {=
=proc ::tk::dialog::file::chooseDir::DblClick {w} {=
=proc ::tk::dialog::file::chooseDir::Done {w {selectFilePath ""}} {=
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/clrpick.tcl]]
proc tkColorDialog {args} {
proc tkColorDialog_InitValues {w} {
proc tkColorDialog_Config {w argList} {
proc tkColorDialog_BuildDialog {w} {
proc tkColorDialog_SetRGBValue {w color} {
proc tkColorDialog_XToRgb {w x} {
proc tkColorDialog_RgbToX {w color} {
proc tkColorDialog_DrawColorScale {w c {create 0}} {
proc tkColorDialog_CreateSelector {w sel c } {
proc tkColorDialog_RedrawFinalColor {w} {
proc tkColorDialog_RedrawColorBars {w colorChanged} {
proc tkColorDialog_StartMove {w sel color x delta {dontMove 0}} {
proc tkColorDialog_MoveSelector {w sel color x delta} {
proc tkColorDialog_ReleaseMouse {w sel color x delta} {
proc tkColorDialog_ResizeColorBars {w} {
proc tkColorDialog_HandleSelEntry {w} {
proc tkColorDialog_HandleRGBEntry {w} {
proc tkColorDialog_EnterColorBar {w color} {
proc tkColorDialog_LeaveColorBar {w color} {
proc tkColorDialog_OkCmd {w} {
proc tkColorDialog_CancelCmd {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/comdlg.tcl]]
proc tclParseConfigSpec {w specs flags argList} {
proc tclListValidFlags {v} {
proc tkFocusGroup_Create {t} {
proc tkFocusGroup_BindIn {t w cmd} {
proc tkFocusGroup_BindOut {t w cmd} {
proc tkFocusGroup_Destroy {t w} {
proc tkFocusGroup_In {t w detail} {
proc tkFocusGroup_Out {t w detail} {
proc tkFDGetFileTypes {string} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/console.tcl]]
proc tkConsoleInit {} {
proc tkConsoleSource {} {
proc tkConsoleInvoke {args} {
proc tkConsoleHistory {cmd} {
proc tkConsolePrompt {{partial normal}} {
proc tkConsoleBind {win} {
proc tkConsoleInsert {w s} {
proc tkConsoleOutput {dest string} {
proc tkConsoleExit {} {
proc tkConsoleAbout {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/arrow.tcl]]
proc arrowSetup c {
proc arrowMove1 {c x y} {
proc arrowMove2 {c x y} {
proc arrowMove3 {c x y} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/bind.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/bitmap.tcl]]
proc bitmapRow {w args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/button.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/check.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/clrpick.tcl]]
proc setColor {w button name options} {
proc setColor_helper {w options color} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/colors.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/cscroll.tcl]]
proc scrollEnter canvas {
proc scrollLeave canvas {
proc scrollButton canvas {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/ctext.tcl]]
proc mkTextConfig {w x y option value color} {
proc textEnter {w} {
proc textInsert {w string} {
proc textPaste {w pos} {
proc textB1Press {w x y} {
proc textB1Move {w x y} {
proc textBs {w} {
proc textDel {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/dialog1.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/dialog2.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/entry1.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/entry2.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/filebox.tcl]]
proc fileDialog {w ent operation} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/floor.tcl]]
proc floorDisplay {w active} {
proc newRoom w {
proc roomChanged {w args} {
proc bg1 {w fill outline} {
proc bg2 {w fill outline} {
proc bg3 {w fill outline} {
proc fg1 {w color} {
proc fg2 {w color} {
proc fg3 {w color} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/form.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/hscale.tcl]]
proc setWidth {w width} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/icon.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/image1.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/image2.tcl]]
proc loadDir w {
proc loadImage {w x y} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/items.tcl]]
proc itemEnter {c} {
proc itemLeave {c} {
proc itemMark {c x y} {
proc itemStroke {c x y} {
proc itemsUnderArea {c} {
proc itemStartDrag {c x y} {
proc itemDrag {c x y} {
proc butPress {w color} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/label.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/menu.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/menubu.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/msgbox.tcl]]
proc showMessageBox {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/plot.tcl]]
proc plotDown {w x y} {
proc plotMove {w x y} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/puzzle.tcl]]
proc puzzleSwitch {w num} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/radio.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/ruler.tcl]]
proc rulerMkTab {c x y} {
proc rulerNewTab {c x y} {
proc rulerSelectTab {c x y} {
proc rulerMoveTab {c x y} {
proc rulerReleaseTab c {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/sayings.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/search.tcl]]
proc textLoadFile {w file} {
proc textSearch {w string tag} {
proc textToggle {cmd1 sleep1 cmd2 sleep2} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/states.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/style.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/text.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/twind.tcl]]
proc textWindOn w {
proc textWindOff w {
proc textWindPlot t {
proc embPlotDown {w x y} {
proc embPlotMove {w x y} {
proc textWindDel w {
proc embDefBg t {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/demos/vscale.tcl]]
proc setHeight {w height} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/dialog.tcl]]
proc tk_dialog {w title text bitmap default args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/entry.tcl]]
proc tkEntryClosestGap {w x} {
proc tkEntryButton1 {w x} {
proc tkEntryMouseSelect {w x} {
proc tkEntryPaste {w x} {
proc tkEntryAutoScan {w} {
proc tkEntryKeySelect {w new} {
proc tkEntryInsert {w s} {
proc tkEntryBackspace w {
proc tkEntrySeeInsert w {
proc tkEntrySetCursor {w pos} {
proc tkEntryTranspose w {
    proc tkEntryNextWord {w start} {
    proc tkEntryNextWord {w start} {
proc tkEntryPreviousWord {w start} {
proc tkEntryGetSelection {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/focus.tcl]]
proc tk_focusNext w {
proc tk_focusPrev w {
proc tkFocusOK w {
proc tk_focusFollowsMouse {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/icepak-choosedir.tcl]]
proc ::tk::dialog::file::chooseDir::tkChooseDirectory {args} {
proc ::tk::dialog::file::chooseDir::Config {dataName argList} {
proc ::tk::dialog::file::chooseDir::OkCmd {w} {
proc ::tk::dialog::file::chooseDir::DblClick {w} {
proc ::tk::dialog::file::chooseDir::ListBrowse {w text} {
proc ::tk::dialog::file::chooseDir::Done {w {selectFilePath ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/icepak-tkfbox.tcl]]
proc ::tk::IconList {w args} {
proc ::tk::IconList_Index {w i} {
proc ::tk::IconList_Selection {w op args} {
proc ::tk::IconList_Curselection {w} {
proc ::tk::IconList_DrawSelection {w} {
proc ::tk::IconList_Get {w item} {
proc ::tk::IconList_Config {w argList} {
proc ::tk::IconList_Create {w} {
proc ::tk::IconList_AutoScan {w} {
proc ::tk::IconList_DeleteAll {w} {
proc ::tk::IconList_Add {w image items} {
proc ::tk::IconList_Arrange {w} {
proc ::tk::IconList_Invoke {w} {
proc ::tk::IconList_See {w rTag} {
proc ::tk::IconList_Btn1 {w x y} {
proc ::tk::IconList_CtrlBtn1 {w x y} {
proc ::tk::IconList_ShiftBtn1 {w x y} {
proc ::tk::IconList_Motion1 {w x y} {
proc ::tk::IconList_Double1 {w x y} {
proc ::tk::IconList_ReturnKey {w} {
proc ::tk::IconList_Leave1 {w x y} {
proc ::tk::IconList_FocusIn {w} {
proc ::tk::IconList_FocusOut {w} {
proc ::tk::IconList_UpDown {w amount} {
proc ::tk::IconList_LeftRight {w amount} {
proc ::tk::IconList_KeyPress {w key} {
proc ::tk::IconList_Goto {w text} {
proc ::tk::IconList_Reset {w} {
proc ::tk::dialog::file::tkFDialog {type args} {
proc ::tk::dialog::file::Config {dataName type argList} {
proc ::tk::dialog::file::Create {w class} {
proc ::tk::dialog::file::SetSelectMode {w multi} {
proc ::tk::dialog::file::UpdateWhenIdle {w} {
proc ::tk::dialog::file::Update {w} {
proc ::tk::dialog::file::SetPathSilently {w path} {
proc ::tk::dialog::file::SetPath {w name1 name2 op} {
proc ::tk::dialog::file::SetFilter {w type} {
proc ::tk::dialog::file::ResolveFile {context text defaultext} {
proc ::tk::dialog::file::EntFocusIn {w} {
proc ::tk::dialog::file::EntFocusOut {w} {
proc ::tk::dialog::file::ActivateEnt {w} {
proc ::tk::dialog::file::VerifyFileName {w filename} {
proc ::tk::dialog::file::InvokeBtn {w key} {
proc ::tk::dialog::file::UpDirCmd {w} {
proc ::tk::dialog::file::JoinFile {path file} {
proc ::tk::dialog::file::OkCmd {w} {
proc ::tk::dialog::file::CancelCmd {w} {
proc ::tk::dialog::file::ListBrowse {w} {
proc ::tk::dialog::file::ListInvoke {w filenames} {
proc ::tk::dialog::file::Done {w {selectFilePath ""}} {
proc ::tk::dialog::file::IsDirectoryToUs {f} {
proc ::tk::dialog::file::SetFilterName {w} {
proc ::tk::dialog::file::PickRecentSelection {w ent} {
proc ::tk::dialog::file::RefreshCmd {w} {
proc ::tk::dialog::file::MkDirCmd {w} {
proc ::tk::dialog::file::DeleteCmd {w} {
proc ::tk::dialog::file::AdjustViewer {w} {
proc ::tk::RemoveAmpFromText {text} {
proc ::tk::AmpWidget {class path args} {
proc ::tk::UnderlineAmpersand {text} {
proc ::tk::SetAmpText {widget text} {
proc ::tk::FindAltKeyTarget {path char} {
proc ::tk::AltKeyInDialog {path key} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/listbox.tcl]]
proc tkListboxBeginSelect {w el} {
proc tkListboxMotion {w el} {
proc tkListboxBeginExtend {w el} {
proc tkListboxBeginToggle {w el} {
proc tkListboxAutoScan {w} {
proc tkListboxUpDown {w amount} {
proc tkListboxExtendUpDown {w amount} {
proc tkListboxDataExtend {w el} {
proc tkListboxCancel w {
proc tkListboxSelectAll w {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/menu.tcl]]
proc tkMbEnter w {
proc tkMbLeave w {
proc tkMbPost {w {x {}} {y {}} {rightalign 0}} {
proc tkMenuUnpost menu {
proc tkMbMotion {w upDown rootx rooty} {
proc tkMbButtonUp w {
proc tkMenuMotion {menu x y state} {
proc tkMenuButtonDown menu {
proc tkMenuLeave {menu rootx rooty state} {
proc tkMenuInvoke {w buttonRelease} {
proc tkMenuEscape menu {
proc tkMenuUpArrow {menu} {
proc tkMenuDownArrow {menu} {
proc tkMenuLeftArrow {menu} {
proc tkMenuRightArrow {menu} {
proc tkMenuNextMenu {menu direction} {
proc tkMenuNextEntry {menu count} {
proc tkMenuFind {w char} {
proc tkTraverseToMenu {w char} {
proc tkFirstMenu w {
proc tkTraverseWithinMenu {w char} {
proc tkMenuFirstEntry menu {
proc tkMenuFindName {menu s} {
proc tkPostOverPoint {menu x y {entry {}}}  {
proc tkSaveGrabInfo w {
proc tkRestoreOldGrab {} {
proc tk_menuSetFocus {menu} {
proc tkGenerateMenuSelect {menu} {
proc tk_popup {menu x y {entry {}}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/msgbox.tcl]]
proc tkMessageBox {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/obsolete.tcl]]
proc tk_menuBar args {}
proc tk_bindForTraversal args {}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/optMenu.tcl]]
proc tk_optionMenu {w varName firstValue args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/palette.tcl]]
proc tk_setPalette {args} {
proc tkRecolorTree {w colors} {
proc tkDarken {color percent} {
proc tk_bisque {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/safetk.tcl]]
    proc ::safe::tkInterpInit {slave argv} {
proc ::safe::loadTk {} {}
proc ::safe::TkInit {interpPath} {
proc ::safe::allowTk {interpPath argv} {
proc ::safe::disallowTk {interpPath} {
proc ::safe::tkDelete {W window slave} {
proc ::safe::tkTopLevel {slave display} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/scale.tcl]]
proc tkScaleActivate {w x y} {
proc tkScaleButtonDown {w x y} {
proc tkScaleDrag {w x y} {
proc tkScaleEndDrag {w} {
proc tkScaleIncrement {w dir big repeat} {
proc tkScaleControlPress {w x y} {
proc tkScaleButton2Down {w x y} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/scrlbar.tcl]]
proc tkScrollButtonDown {w x y} {
proc tkScrollButtonUp {w x y} {
proc tkScrollSelect {w element repeat} {
proc tkScrollStartDrag {w x y} {
proc tkScrollDrag {w x y} {
proc tkScrollEndDrag {w x y} {
proc tkScrollByUnits {w orient amount} {
proc tkScrollByPages {w orient amount} {
proc tkScrollToPos {w pos} {
proc tkScrollTopBottom {w x y} {
proc tkScrollButton2Down {w x y} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/tearoff.tcl]]
proc tkTearOffMenu {w {x 0} {y 0}} {
proc tkMenuDup {src dst type} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/text.tcl]]
proc tkTextClosestGap {w x y} {
proc tkTextButton1 {w x y} {
proc tkTextSelectTo {w x y {extend 0}} {
proc tkTextKeyExtend {w index} {
proc tkTextPaste {w x y} {
proc tkTextAutoScan {w} {
proc tkTextSetCursor {w pos} {
proc tkTextKeySelect {w new} {
proc tkTextResetAnchor {w index} {
proc tkTextInsert {w s} {
proc tkTextUpDownLine {w n} {
proc tkTextPrevPara {w pos} {
proc tkTextNextPara {w start} {
proc tkTextScrollPages {w count} {
proc tkTextTranspose w {
proc tk_textCopy w {
proc tk_textCut w {
proc tk_textPaste w {
    proc tkTextNextWord {w start} {
    proc tkTextNextWord {w start} {
proc tkTextNextPos {w start op} {
proc tkTextPrevPos {w start op} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/tk.tcl]]
proc ::tk::PlaceWindow {w {place ""} {anchor ""}} {
proc ::tk::SetFocusGrab {grab {focus {}}} {
proc ::tk::RestoreFocusGrab {grab focus {destroy destroy}} {
proc ::tk::GetSelection {w {sel PRIMARY}} {
proc tkScreenChanged screen {
proc tkEventMotifBindings {n1 dummy dummy} {
    proc tk_chooseColor {args} {
    proc tk_getOpenFile {args} {
    proc tk_getSaveFile {args} {
    proc tk_messageBox {args} {
    proc tk_chooseDirectory {args} {
proc tkCancelRepeat {} {
proc tkTabToWindow {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/tkfbox.tcl]]
proc ::tk::IconList {w args} {
proc ::tk::IconList_Index {w i {arg ""}} {
proc ::tk::IconList_Selection {w op args} {
proc ::tk::IconList_Curselection {w} {
proc ::tk::IconList_DrawSelection {w args} {
proc ::tk::IconList_Get {w item} {
proc ::tk::IconList_Config {w argList} {
proc ::tk::IconList_Create {w} {
proc ::tk::IconList_AutoScan {w x y} {
proc ::tk::IconList_DeleteAll {w} {
proc ::tk::IconList_Add {w image items {addtag ""} {display_when ""}} {
proc ::tk::IconList_Arrange {w args} {
proc ::tk::IconList_Invoke {w} {
proc ::tk::IconList_See {w i} {
proc ::tk::IconList_Btn1 {w x y} {
proc ::tk::IconList_CtrlBtn1 {w x y} {
proc ::tk::IconList_ShiftBtn1 {w x y} {
proc ::tk::IconList_Motion1 {w x y} {
proc ::tk::IconList_Double1 {w x y} {
proc ::tk::IconList_ReturnKey {w} {
proc ::tk::IconList_Leave1 {w x y} {
proc ::tk::IconList_FocusIn {w W} {
proc ::tk::IconList_FocusOut {w} {
proc ::tk::IconList_UpDown {w amount} {
proc ::tk::IconList_LeftRight {w amount} {
proc ::tk::IconList_KeyPress {w key} {
proc ::tk::IconList_Goto {w text} {
proc ::tk::IconList_Reset {w} {
proc ::tk::dialog::file::tkFDialog {type args} {
proc ::tk::dialog::file::Config {dataName type argList} {
proc ::tk::dialog::file::Create {w class} {
proc ::tk::dialog::file::SetSelectMode {w multi} {
proc ::tk::dialog::file::UpdateWhenIdle {w {arrange_method name} {append_hist 1}} {
proc ::tk::dialog::file::Update {w {append_hist 1}} {
proc ::tk::dialog::file::SetPathSilently {w path} {
proc ::tk::dialog::file::SetPath {w name1 name2 op} {
proc ::tk::dialog::file::SetFilter {w type {update update}} {
proc ::tk::dialog::file::ResolveFile {w context text defaultext} {
proc ::tk::dialog::file::EntFocusIn {w} {
proc ::tk::dialog::file::EntFocusOut {w} {
proc ::tk::dialog::file::ActivateEnt {w} {
proc ::tk::dialog::file::VerifyFileName {w filename} {
proc ::tk::dialog::file::InvokeBtn {w key} {
proc ::tk::dialog::file::UpDirCmd {w} {
proc ::tk::dialog::file::JoinFile {path file} {
proc ::tk::dialog::file::CancelCmd {w} {
proc ::tk::dialog::file::ListBrowse {w} {
proc ::tk::dialog::file::Done {w {selectFilePath ""}} {
proc ::tk::dialog::file::IsDirectoryToUs {f} {
proc ::tk::dialog::file::SetFilterName {w} {
proc ::tk::dialog::file::RefreshCmd {w} {
proc ::tk::dialog::file::MkDirCmd {w} {
proc ::tk::dialog::file::BackDirCmd {w} {
proc ::tk::dialog::file::DeleteCmd {w} {
proc ::tk::dialog::file::AdjustViewer {w} {
proc ::tk::RemoveAmpFromText {text} {
proc ::tk::dialog::file::PopUpMenu {w W x y} {
proc ::tk::IconList_EditTextDone {w W} {
proc ::tk::dialog::file::RenameCmd {w} {
proc ::tk::dialog::file::ViewDropdown {w} {
proc ::tk::dialog::file::CopyCutCmd {w method} {
proc ::tk::dialog::file::CheckFileClipboard {w} {
proc ::tk::dialog::file::PasteCmd {w} {
proc ::tk::AlterImage {im type} {
proc ::tk::IconList_UpdateIcons {w} {
proc ::tk::dialog::file::GetDrives {w} {
proc ::tk::dialog::file::UpdateSelectPathList {w} {
proc ::tk::dialog::file::SetBusy {value} {
proc ::tk::SafeGlobalGrab {action w {cursor ""}} {
proc ::tk::dialog::file::GetRecentSelections {w {just_read 0}} {
proc ::tk::dialog::file::PickRecentSelection {w} {
proc ::tk::dialog::file::SaveRecentSelections {w addfiles} {
proc ::tk::dialog::file::ViewMethod {w} {
    proc ResizeButs {w buts args} {
proc ::tk::ResizeButs {w buts args} {
proc ::tk::ResizeButs_Config {w buts argList} {
proc ::tk::ResizeButs_Create {w buts} {
proc ::tk::ResizeButs_Btn1 {W} {
proc ::tk::ResizeButs_BtnRels1 {W X Y} {
proc ::tk::ResizeButs_SetOrderButton {w {b 0} {order increasing}} {
proc ::tk::ResizeButs_GetOrderButton {w} {
proc ::tk::ResizeButs_Enter {W X Y} {
proc ::tk::ResizeButs_Motion {W X Y} {
proc ::tk::ResizeButs_Leave {W X Y} {
proc ::tk::ResizeButs_Motion1 {W X Y} {
proc ::tk::IconList_Hscroll {w args} {
proc ::tk::IconList_ResizeColumns {w args} {
proc ::tk::IconList_ReArrange {w arrange_method {order increasing} {arg ""}} {
proc ::tk::IconList_ListSort {w} {
proc ::tk::IconList_ListSortCommand {w method index order a b} {
proc ::tk::dialog::file::FormatSize {size} {
proc ::tk::IconList_GetOrderButton {w} {
proc ::tk::dialog::file::Properties {w {method current_dir}} {
proc ::tk::IconList_Release1 {w} {
proc ::tk::AmpWidget {class path args} {
proc ::tk::UnderlineAmpersand {text} {
proc ::tk::SetAmpText {widget text} {
proc ::tk::FindAltKeyTarget {path char} {
proc ::tk::AltKeyInDialog {path key} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/tkfprops.tcl]]
proc tk_fileProperties {file args} {
proc ::tk::dialog::fprops::tkFProps {file argList} {
proc ::tk::dialog::fprops::Config {dataName file argList} {
proc ::tk::dialog::fprops::Create {w} {
proc ::tk::dialog::fprops::InvokeButton {w} {
proc ::tk::dialog::fprops::IterateSubFiles {w} {
proc ::tk::dialog::fprops::OK {w {close 0}} {
proc ::tk::dialog::fprops::Done {w} {
proc ::tk::dialog::fprops::AddCommas {size} {
proc ::tk::dialog::fprops::FocusCheckButton {w args} {
proc ::tk::dialog::fprops::ToggleCheckButton {w var {var2 ""} {op ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.3.3/xmfbox.tcl]]
proc tkMotifFDialog {type args} {
proc tkMotifFDialog_Create {dataName type argList} {
proc tkMotifFDialog_Config {dataName type argList} {
proc tkMotifFDialog_BuildUI {w} {
proc tkMotifFDialog_MakeSList {w f label under cmdPrefix} {
proc tkMotifFDialog_InterpFilter {w} {
proc tkMotifFDialog_Update {w} {
proc tkMotifFDialog_LoadFiles {w} {
proc tkMotifFDialog_BrowseDList {w} {
proc tkMotifFDialog_ActivateDList {w} {
proc tkMotifFDialog_BrowseFList {w} {
proc tkMotifFDialog_ActivateFList {w} {
proc tkMotifFDialog_ActivateFEnt {w} {
proc tkMotifFDialog_ActivateSEnt {w} {
proc tkMotifFDialog_OkCmd {w} {
proc tkMotifFDialog_FilterCmd {w} {
proc tkMotifFDialog_CancelCmd {w} {
proc tkListBoxKeyAccel_Set {w} {
proc tkListBoxKeyAccel_Unset {w} {
proc tkListBoxKeyAccel_Key {w key} {
proc tkListBoxKeyAccel_Goto {w string} {
proc tkListBoxKeyAccel_Reset {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/bgerror.tcl]]
proc ::tk::dialog::error::Return {} {
proc ::tk::dialog::error::Details {} {
proc ::tk::dialog::error::SaveToLog {text} {
proc ::tk::dialog::error::Destroy {w} {
proc ::tk::dialog::error::bgerror err {
    proc bgerror err {}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/button.tcl]]
proc ::tk::ButtonEnter w {
proc ::tk::ButtonLeave w {
proc ::tk::ButtonDown w {
proc ::tk::ButtonUp w {
proc ::tk::CheckRadioEnter w {
proc ::tk::CheckRadioDown w {
proc ::tk::ButtonEnter {w} {
proc ::tk::ButtonLeave w {
proc ::tk::ButtonDown w {
proc ::tk::ButtonUp w {
proc ::tk::ButtonEnter {w} {
proc ::tk::ButtonLeave w {
proc ::tk::ButtonDown w {
proc ::tk::ButtonUp w {
proc ::tk::ButtonInvoke w {
proc ::tk::ButtonAutoInvoke {w} {
proc ::tk::CheckRadioInvoke {w {cmd invoke}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/choosedir.tcl]]
proc ::tk::dialog::file::chooseDir:: {args} {
proc ::tk::dialog::file::chooseDir::Config {dataName argList} {
proc ::tk::dialog::file::chooseDir::OkCmd {w} {
proc ::tk::dialog::file::chooseDir::DblClick {w} {
proc ::tk::dialog::file::chooseDir::Done {w {selectFilePath ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/clrpick.tcl]]
proc ::tk::dialog::color:: {args} {
proc ::tk::dialog::color::InitValues {dataName} {
proc ::tk::dialog::color::Config {dataName argList} {
proc ::tk::dialog::color::BuildDialog {w} {
proc ::tk::dialog::color::SetRGBValue {w color} {
proc ::tk::dialog::color::XToRgb {w x} {
proc ::tk::dialog::color::RgbToX {w color} {
proc ::tk::dialog::color::DrawColorScale {w c {create 0}} {
proc ::tk::dialog::color::CreateSelector {w sel c } {
proc ::tk::dialog::color::RedrawFinalColor {w} {
proc ::tk::dialog::color::RedrawColorBars {w colorChanged} {
proc ::tk::dialog::color::StartMove {w sel color x delta {dontMove 0}} {
proc ::tk::dialog::color::MoveSelector {w sel color x delta} {
proc ::tk::dialog::color::ReleaseMouse {w sel color x delta} {
proc ::tk::dialog::color::ResizeColorBars {w} {
proc ::tk::dialog::color::HandleSelEntry {w} {
proc ::tk::dialog::color::HandleRGBEntry {w} {
proc ::tk::dialog::color::EnterColorBar {w color} {
proc ::tk::dialog::color::LeaveColorBar {w color} {
proc ::tk::dialog::color::OkCmd {w} {
proc ::tk::dialog::color::CancelCmd {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/comdlg.tcl]]
proc tclParseConfigSpec {w specs flags argList} {
proc tclListValidFlags {v} {
proc ::tk::FocusGroup_Create {t} {
proc ::tk::FocusGroup_BindIn {t w cmd} {
proc ::tk::FocusGroup_BindOut {t w cmd} {
proc ::tk::FocusGroup_Destroy {t w} {
proc ::tk::FocusGroup_In {t w detail} {
proc ::tk::FocusGroup_Out {t w detail} {
proc ::tk::FDGetFileTypes {string} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/console.tcl]]
proc ::tk::ConsoleInit {} {
proc ::tk::ConsoleSource {} {
proc ::tk::ConsoleInvoke {args} {
proc ::tk::ConsoleHistory {cmd} {
proc ::tk::ConsolePrompt {{partial normal}} {
proc ::tk::ConsoleBind {w} {
proc ::tk::ConsoleInsert {w s} {
proc ::tk::ConsoleOutput {dest string} {
proc ::tk::ConsoleExit {} {
proc ::tk::ConsoleAbout {} {
proc ::tk::console::TagProc w {
proc ::tk::console::MatchPair {w c1 c2 {lim 1.0}} {
proc ::tk::console::MatchQuote {w {lim 1.0}} {
proc ::tk::console::Blink {w args} {
proc ::tk::console::ConstrainBuffer {w size} {
proc ::tk::console::Expand {w {type ""}} {
	proc* { set res [ExpandProcname $str] }
proc ::tk::console::ExpandPathname str {
proc ::tk::console::ExpandProcname str {
proc ::tk::console::ExpandVariable str {
proc ::tk::console::ExpandBestMatch {l {e {}}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/arrow.tcl]]
proc arrowSetup c {
proc arrowMove1 {c x y} {
proc arrowMove2 {c x y} {
proc arrowMove3 {c x y} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/bind.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/bitmap.tcl]]
proc bitmapRow {w args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/button.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/check.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/clrpick.tcl]]
proc setColor {w button name options} {
proc setColor_helper {w options color} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/colors.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/cscroll.tcl]]
proc scrollEnter canvas {
proc scrollLeave canvas {
proc scrollButton canvas {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/ctext.tcl]]
proc mkTextConfig {w x y option value color} {
proc textEnter {w} {
proc textInsert {w string} {
proc textPaste {w pos} {
proc textB1Press {w x y} {
proc textB1Move {w x y} {
proc textBs {w} {
proc textDel {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/dialog1.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/dialog2.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/entry1.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/entry2.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/entry3.tcl]]
proc focusAndFlash {W fg bg {count 9}} {
proc validatePhoneChange {W vmode idx char} {
proc phoneSkipLeft {W} {
proc phoneSkipRight {W {add 0}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/filebox.tcl]]
proc fileDialog {w ent operation} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/floor.tcl]]
proc floorDisplay {w active} {
proc newRoom w {
proc roomChanged {w args} {
proc bg1 {w fill outline} {
proc bg2 {w fill outline} {
proc bg3 {w fill outline} {
proc fg1 {w color} {
proc fg2 {w color} {
proc fg3 {w color} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/form.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/hscale.tcl]]
proc setWidth {w width} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/icon.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/image1.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/image2.tcl]]
proc loadDir w {
proc selectAndLoadDir w {
proc loadImage {w x y} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/items.tcl]]
proc itemEnter {c} {
proc itemLeave {c} {
proc itemMark {c x y} {
proc itemStroke {c x y} {
proc itemsUnderArea {c} {
proc itemStartDrag {c x y} {
proc itemDrag {c x y} {
proc butPress {w color} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/label.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/labelframe.tcl]]
proc lfEnableButtons {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/menu.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/menubu.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/msgbox.tcl]]
proc showMessageBox {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/paned1.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/paned2.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/plot.tcl]]
proc plotDown {w x y} {
proc plotMove {w x y} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/puzzle.tcl]]
proc puzzleSwitch {w num} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/radio.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/ruler.tcl]]
proc rulerMkTab {c x y} {
proc rulerNewTab {c x y} {
proc rulerSelectTab {c x y} {
proc rulerMoveTab {c x y} {
proc rulerReleaseTab c {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/sayings.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/search.tcl]]
proc textLoadFile {w file} {
proc textSearch {w string tag} {
proc textToggle {cmd1 sleep1 cmd2 sleep2} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/spin.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/states.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/style.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/text.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/twind.tcl]]
proc textWindOn w {
proc textWindOff w {
proc textWindPlot t {
proc embPlotDown {w x y} {
proc embPlotMove {w x y} {
proc textWindDel w {
proc embDefBg t {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/unicodeout.tcl]]
proc addSample {w language args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/demos/vscale.tcl]]
proc setHeight {w height} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/dialog.tcl]]
proc ::tk_dialog {w title text bitmap default args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/entry.tcl]]
proc ::tk::EntryClosestGap {w x} {
proc ::tk::EntryButton1 {w x} {
proc ::tk::EntryMouseSelect {w x} {
proc ::tk::EntryPaste {w x} {
proc ::tk::EntryAutoScan {w} {
proc ::tk::EntryKeySelect {w new} {
proc ::tk::EntryInsert {w s} {
proc ::tk::EntryBackspace w {
proc ::tk::EntrySeeInsert w {
proc ::tk::EntrySetCursor {w pos} {
proc ::tk::EntryTranspose w {
    proc ::tk::EntryNextWord {w start} {
    proc ::tk::EntryNextWord {w start} {
proc ::tk::EntryPreviousWord {w start} {
proc ::tk::EntryScanMark {w x} {
proc ::tk::EntryScanDrag {w x} {
proc ::tk::EntryGetSelection {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/focus.tcl]]
proc ::tk_focusNext w {
proc ::tk_focusPrev w {
proc ::tk::FocusOK w {
proc ::tk_focusFollowsMouse {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/listbox.tcl]]
proc ::tk::ListboxBeginSelect {w el} {
proc ::tk::ListboxMotion {w el} {
proc ::tk::ListboxBeginExtend {w el} {
proc ::tk::ListboxBeginToggle {w el} {
proc ::tk::ListboxAutoScan {w} {
proc ::tk::ListboxUpDown {w amount} {
proc ::tk::ListboxExtendUpDown {w amount} {
proc ::tk::ListboxDataExtend {w el} {
proc ::tk::ListboxCancel w {
proc ::tk::ListboxSelectAll w {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/menu.tcl]]
proc ::tk::MbEnter w {
proc ::tk::MbLeave w {
proc ::tk::MbPost {w {x {}} {y {}}} {
proc ::tk::MenuUnpost menu {
proc ::tk::MbMotion {w upDown rootx rooty} {
proc ::tk::MbButtonUp w {
proc ::tk::MenuMotion {menu x y state} {
proc ::tk::MenuButtonDown menu {
proc ::tk::MenuLeave {menu rootx rooty state} {
proc ::tk::MenuInvoke {w buttonRelease} {
proc ::tk::MenuEscape menu {
proc ::tk::MenuUpArrow {menu} {
proc ::tk::MenuDownArrow {menu} {
proc ::tk::MenuLeftArrow {menu} {
proc ::tk::MenuRightArrow {menu} {
proc ::tk::MenuNextMenu {menu direction} {
proc ::tk::MenuNextEntry {menu count} {
proc ::tk::MenuFind {w char} {
proc ::tk::TraverseToMenu {w char} {
proc ::tk::FirstMenu w {
proc ::tk::TraverseWithinMenu {w char} {
proc ::tk::MenuFirstEntry menu {
proc ::tk::MenuFindName {menu s} {
proc ::tk::PostOverPoint {menu x y {entry {}}}  {
proc tk::SaveGrabInfo w {
proc ::tk::RestoreOldGrab {} {
proc ::tk_menuSetFocus {menu} {
proc ::tk::GenerateMenuSelect {menu} {
proc ::tk_popup {menu x y {entry {}}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/mkpsenc.tcl]]
proc ::tk::CreatePostscriptEncoding {encoding} {
proc tk::ensure_psenc_is_loaded {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/msgbox.tcl]]
proc ::tk::MessageBox {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/obsolete.tcl]]
proc tk_menuBar args {}
proc tk_bindForTraversal args {}
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/optMenu.tcl]]
proc ::tk_optionMenu {w varName firstValue args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/palette.tcl]]
proc ::tk_setPalette {args} {
proc ::tk::RecolorTree {w colors} {
proc ::tk::Darken {color percent} {
proc ::tk_bisque {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/panedwindow.tcl]]
proc ::tk::panedwindow::MarkSash {w x y proxy} {
proc ::tk::panedwindow::DragSash {w x y proxy} {
proc ::tk::panedwindow::ReleaseSash {w proxy} {
proc ::tk::panedwindow::Motion {w x y} {
proc ::tk::panedwindow::Cursor {w} {
proc ::tk::panedwindow::Leave {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/ResizeButs.tcl]]
    proc ::ResizeButs {args} {return [eval ResizeButs::_Create $args]}
proc ResizeButs::_Create {args} {
    proc ::$w {cmd args} "return \[eval ResizeButs::_command \$cmd $w \$args\]"
proc ResizeButs::_command {cmd w args} {
proc ResizeButs::insert {w args} {
proc ResizeButs::_Btn1 {W} {
proc ResizeButs::_BtnRels1 {W X Y} {
proc ResizeButs::_setOrderButton {w {b 0} {order increasing}} {
proc ResizeButs::_Enter {W X Y} {
proc ResizeButs::_Motion {W X Y} {
proc ResizeButs::_Leave {W X Y} {
proc ResizeButs::_Motion1 {W X Y} {
proc ResizeButs::cget {w args} {
proc ResizeButs::configure {w args} {
proc ResizeButs::itemcget {w args} {
proc ResizeButs::itemconfigure {w args} {
proc ResizeButs::index {w args} {
proc ResizeButs::invoke {w args} {
proc ResizeButs::iteminvoke {w args} {
proc ResizeButs::add {w args} {
proc ResizeButs::delete {w args} {
proc ResizeButs::_FocusIn {W {idletasks 1}} {
proc ResizeButs::_FocusOut {W} {
proc ResizeButs::setfocus {w args} {
proc ResizeButs::_KeyPressEnter {W} {
proc ResizeButs::_KeyReleaseEnter {W X Y} {
proc ResizeButs::_Destroy {w} {
proc ResizeButs::_validarg {arg} {
proc ResizeButs::_disabledImage {im w} {
proc ResizeButs::_positionItems {w {showBut ""}} {
proc ResizeButs::_setShow {w bname} {
proc ResizeButs::_Btn3 {W X Y} {
proc ResizeButs::view {w args} {
proc ResizeButs::_Configure {w width height} {
proc ResizeButs::visible {w args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/safetk.tcl]]
    proc ::safe::tkInterpInit {slave argv} {
proc ::safe::loadTk {} {}
proc ::safe::TkInit {interpPath} {
proc ::safe::allowTk {interpPath argv} {
proc ::safe::disallowTk {interpPath} {
proc ::safe::tkDelete {W window slave} {
proc ::safe::tkTopLevel {slave display} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/scale.tcl]]
proc ::tk::ScaleActivate {w x y} {
proc ::tk::ScaleButtonDown {w x y} {
proc ::tk::ScaleDrag {w x y} {
proc ::tk::ScaleEndDrag {w} {
proc ::tk::ScaleIncrement {w dir big repeat} {
proc ::tk::ScaleControlPress {w x y} {
proc ::tk::ScaleButton2Down {w x y} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/scrlbar.tcl]]
proc tk::ScrollButtonDown {w x y} {
proc ::tk::ScrollButtonUp {w x y} {
proc ::tk::ScrollSelect {w element repeat} {
proc ::tk::ScrollStartDrag {w x y} {
proc ::tk::ScrollDrag {w x y} {
proc ::tk::ScrollEndDrag {w x y} {
proc ::tk::ScrollByUnits {w orient amount} {
proc ::tk::ScrollByPages {w orient amount} {
proc ::tk::ScrollToPos {w pos} {
proc ::tk::ScrollTopBottom {w x y} {
proc ::tk::ScrollButton2Down {w x y} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/spinbox.tcl]]
proc ::tk::spinbox::Invoke {w elem} {
proc ::tk::spinbox::ClosestGap {w x} {
proc ::tk::spinbox::ButtonDown {w x y} {
proc ::tk::spinbox::ButtonUp {w x y} {
proc ::tk::spinbox::MouseSelect {w x {cursor {}}} {
proc ::tk::spinbox::Paste {w x} {
proc ::tk::spinbox::Motion {w x y} {
proc ::tk::spinbox::AutoScan {w} {
proc ::tk::spinbox::GetSelection {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/tearoff.tcl]]
proc ::tk::TearOffMenu {w {x 0} {y 0}} {
proc ::tk::MenuDup {src dst type} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/text.tcl]]
proc ::tk::TextClosestGap {w x y} {
proc ::tk::TextButton1 {w x y} {
proc ::tk::TextSelectTo {w x y {extend 0}} {
proc ::tk::TextKeyExtend {w index} {
proc ::tk::TextPasteSelection {w x y} {
proc ::tk::TextAutoScan {w} {
proc ::tk::TextSetCursor {w pos} {
proc ::tk::TextKeySelect {w new} {
proc ::tk::TextResetAnchor {w index} {
proc ::tk::TextInsert {w s} {
proc ::tk::TextUpDownLine {w n} {
proc ::tk::TextPrevPara {w pos} {
proc ::tk::TextNextPara {w start} {
proc ::tk::TextScrollPages {w count} {
proc ::tk::TextTranspose w {
proc ::tk_textCopy w {
proc ::tk_textCut w {
proc ::tk_textPaste w {
    proc ::tk::TextNextWord {w start} {
    proc ::tk::TextNextWord {w start} {
proc ::tk::TextNextPos {w start op} {
proc ::tk::TextPrevPos {w start op} {
proc ::tk::TextScanMark {w x y} {
proc ::tk::TextScanDrag {w x y} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/tk.tcl]]
            proc mc {src args} {
            proc mcmax {args} {
proc ::tk::PlaceWindow {w {place ""} {anchor ""}} {
proc ::tk::SetFocusGrab {grab {focus {}}} {
proc ::tk::RestoreFocusGrab {grab focus {destroy destroy}} {
    proc ::tk::GetSelection {w {sel PRIMARY}} {
    proc ::tk::GetSelection {w {sel PRIMARY}} {
proc ::tk::ScreenChanged screen {
proc ::tk::EventMotifBindings {n1 dummy dummy} {
    proc ::tk_chooseColor {args} {
    proc ::tk_getOpenFile {args} {
    proc ::tk_getSaveFile {args} {
    proc ::tk_messageBox {args} {
    proc ::tk_chooseDirectory {args} {
	proc ::tk::SourceLibFile {file} {
	proc ::tk::SourceLibFile {file} {
proc ::tk::CancelRepeat {} {
proc ::tk::TabToWindow {w} {
proc ::tk::UnderlineAmpersand {text} {
proc ::tk::SetAmpText {widget text} {
proc ::tk::AmpWidget {class path args} {
proc ::tk::FindAltKeyTarget {path char} {
proc ::tk::AltKeyInDialog {path key} {
proc ::tk::mcmaxamp {args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/tkfbox.tcl]]
proc ::tk::IconList {w args} {
proc ::tk::IconList_Index {w i {arg ""}} {
proc ::tk::IconList_Selection {w op args} {
proc ::tk::IconList_Curselection {w} {
proc ::tk::IconList_DrawSelection {w args} {
proc ::tk::IconList_Get {w item} {
proc ::tk::IconList_Config {w argList} {
proc ::tk::IconList_Create {w} {
proc ::tk::IconList_AutoScan {w x y} {
proc ::tk::IconList_DeleteAll {w} {
proc ::tk::IconList_Add {w image items {addtag ""} {display_when ""}} {
proc ::tk::IconList_Arrange {w args} {
proc ::tk::IconList_Invoke {w} {
proc ::tk::IconList_See {w i} {
proc ::tk::IconList_Btn1 {w x y} {
proc ::tk::IconList_CtrlBtn1 {w x y} {
proc ::tk::IconList_ShiftBtn1 {w x y} {
proc ::tk::IconList_Motion1 {w x y} {
proc ::tk::IconList_Double1 {w x y} {
proc ::tk::IconList_ReturnKey {w} {
proc ::tk::IconList_Leave1 {w x y} {
proc ::tk::IconList_FocusIn {w W} {
proc ::tk::IconList_FocusOut {w} {
proc ::tk::IconList_UpDown {w amount} {
proc ::tk::IconList_LeftRight {w amount} {
proc ::tk::IconList_KeyPress {w key} {
proc ::tk::IconList_Goto {w text} {
proc ::tk::IconList_Reset {w} {
proc ::tk::dialog::file:: {type args} {
proc ::tk::dialog::file::Config {dataName type argList} {
proc ::tk::dialog::file::Create {w class} {
proc ::tk::dialog::file::SetSelectMode {w multi} {
proc ::tk::dialog::file::UpdateWhenIdle {w {arrange_method name} {append_hist 1}} {
proc ::tk::dialog::file::Update {w {append_hist 1}} {
proc ::tk::dialog::file::SetPathSilently {w path} {
proc ::tk::dialog::file::SetPath {w name1 name2 op} {
proc ::tk::dialog::file::SetFilter {w type {update update}} {
proc ::tk::dialog::file::ResolveFile {w context text defaultext} {
proc ::tk::dialog::file::EntFocusIn {w} {
proc ::tk::dialog::file::EntFocusOut {w} {
proc ::tk::dialog::file::ActivateEnt {w} {
proc ::tk::dialog::file::VerifyFileName {w filename} {
proc ::tk::dialog::file::InvokeBtn {w key} {
proc ::tk::dialog::file::UpDirCmd {w} {
proc ::tk::dialog::file::JoinFile {path file} {
proc ::tk::dialog::file::CancelCmd {w} {
proc ::tk::dialog::file::Destroyed {w} {
proc ::tk::dialog::file::ListBrowse {w} {
proc ::tk::dialog::file::Done {w {selectFilePath ""}} {
proc ::tk::dialog::file::IsDirectoryToUs {f} {
proc ::tk::dialog::file::SetFilterName {w} {
proc ::tk::dialog::file::RefreshCmd {w} {
proc ::tk::dialog::file::MkDirCmd {w} {
proc ::tk::dialog::file::BackDirCmd {w} {
proc ::tk::dialog::file::DeleteCmd {w} {
proc ::tk::dialog::file::AdjustViewer {w} {
proc ::tk::RemoveAmpFromText {text} {
proc ::tk::dialog::file::PopUpMenu {w W x y} {
proc ::tk::IconList_EditTextDone {w W} {
proc ::tk::dialog::file::RenameCmd {w} {
proc ::tk::dialog::file::ViewDropdown {w} {
proc ::tk::dialog::file::CopyCutCmd {w method} {
proc ::tk::dialog::file::CheckFileClipboard {w} {
proc ::tk::dialog::file::PasteCmd {w} {
proc ::tk::AlterImage {im type} {
proc ::tk::IconList_UpdateIcons {w} {
proc ::tk::dialog::file::GetDrives {w} {
proc ::tk::dialog::file::UpdateSelectPathList {w} {
proc ::tk::dialog::file::SetBusy {value} {
proc ::tk::SafeGlobalGrab {action w {cursor ""}} {
proc ::tk::dialog::file::GetRecentSelections {w {just_read 0}} {
proc ::tk::dialog::file::PickRecentSelection {w} {
proc ::tk::dialog::file::SaveRecentSelections {w addfiles} {
proc ::tk::dialog::file::ViewMethod {w} {
proc ::tk::IconList_Hscroll {w args} {
proc ::tk::IconList_ResizeColumns {w args} {
proc ::tk::IconList_ShowColumns {w args} {
proc ::tk::IconList_ReArrange {w arrange_method {order increasing} {arg ""}} {
proc ::tk::IconList_ListSort {w} {
proc ::tk::IconList_ListSortCommand {w method index order a b} {
proc ::tk::dialog::file::FormatSize {size} {
proc ::tk::IconList_GetOrderButton {w} {
proc ::tk::dialog::file::Properties {w {method current_dir}} {
proc ::tk::IconList_Release1 {w} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/tkfprops.tcl]]
proc tk_fileProperties {file args} {
proc ::tk::dialog::fprops::tkFProps {file argList} {
proc ::tk::dialog::fprops::Config {dataName file argList} {
proc ::tk::dialog::fprops::Create {w} {
proc ::tk::dialog::fprops::KeyPressEnter {w} {
proc ::tk::dialog::fprops::KeyReleaseEnter {w} {
proc ::tk::dialog::fprops::IterateSubFiles {w} {
proc ::tk::dialog::fprops::OK {w {close 0}} {
proc ::tk::dialog::fprops::Done {w} {
proc ::tk::dialog::fprops::AddCommas {size} {
proc ::tk::dialog::fprops::FocusCheckButton {w args} {
proc ::tk::dialog::fprops::ToggleCheckButton {w var {var2 ""} {op ""}} {
proc ::tk::dialog::fprops::FormatSize {size} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/unsupported.tcl]]
proc ::tk::unsupported::ExposePrivateCommand {cmd} {
proc ::tk::unsupported::ExposePrivateVariable {var} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/tk8.4.11/xmfbox.tcl]]
proc ::tk::MotifFDialog {type args} {
proc ::tk::MotifFDialog_Create {dataName type argList} {
proc ::tk::MotifFDialog_FileTypes {w} {
proc ::tk::MotifFDialog_SetFilter {w type} {
proc ::tk::MotifFDialog_Config {dataName type argList} {
proc ::tk::MotifFDialog_BuildUI {w} {
proc ::tk::MotifFDialog_SetListMode {w} {
proc ::tk::MotifFDialog_MakeSList {w f label cmdPrefix} {
proc ::tk::MotifFDialog_InterpFilter {w} {
proc ::tk::MotifFDialog_Update {w} {
proc ::tk::MotifFDialog_LoadFiles {w} {
proc ::tk::MotifFDialog_BrowseDList {w} {
proc ::tk::MotifFDialog_ActivateDList {w} {
proc ::tk::MotifFDialog_BrowseFList {w} {
proc ::tk::MotifFDialog_ActivateFList {w} {
proc ::tk::MotifFDialog_ActivateFEnt {w} {
proc ::tk::MotifFDialog_ActivateSEnt {w} {
proc ::tk::MotifFDialog_OkCmd {w} {
proc ::tk::MotifFDialog_FilterCmd {w} {
proc ::tk::MotifFDialog_CancelCmd {w} {
proc ::tk::ListBoxKeyAccel_Set {w} {
proc ::tk::ListBoxKeyAccel_Unset {w} {
proc ::tk::ListBoxKeyAccel_Key {w key} {
proc ::tk::ListBoxKeyAccel_Goto {w string} {
proc ::tk::ListBoxKeyAccel_Reset {w} {
proc ::tk_getFileType {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/Tktable2.7/library/tkTable.tcl]]
proc ::tk::table::ClipboardKeysyms {copy cut paste} {
    proc ::tk::table::GetSelection {w {sel PRIMARY}} {
    proc ::tk::table::GetSelection {w {sel PRIMARY}} {
proc ::tk::table::CancelRepeat {} {
proc ::tk::table::Insert {w s} {
proc ::tk::table::BackSpace {w} {
proc ::tk::table::BeginSelect {w el} {
proc ::tk::table::Motion {w el} {
proc ::tk::table::BeginExtend {w el} {
proc ::tk::table::BeginToggle {w el} {
proc ::tk::table::AutoScan {w} {
proc ::tk::table::MoveCell {w x y} {
proc ::tk::table::ExtendSelect {w x y} {
proc ::tk::table::DataExtend {w el} {
proc ::tk::table::SelectAll {w} {
proc ::tk::table::ChangeWidth {w i a} {
proc tk_tableCopy w {
proc tk_tableCut w {
proc tk_tablePaste {w {cell {}}} {
proc tk_tablePasteHandler {w cell data} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/Tktable2.7/tkTable.tcl]]
proc ::tk::table::ClipboardKeysyms {copy cut paste} {
    proc ::tk::table::GetSelection {w {sel PRIMARY}} {
    proc ::tk::table::GetSelection {w {sel PRIMARY}} {
proc ::tk::table::CancelRepeat {} {
proc ::tk::table::Insert {w s} {
proc ::tk::table::BackSpace {w} {
proc ::tk::table::BeginSelect {w el} {
proc ::tk::table::Motion {w el} {
proc ::tk::table::BeginExtend {w el} {
proc ::tk::table::BeginToggle {w el} {
proc ::tk::table::AutoScan {w} {
proc ::tk::table::MoveCell {w x y} {
proc ::tk::table::ExtendSelect {w x y} {
proc ::tk::table::DataExtend {w el} {
proc ::tk::table::SelectAll {w} {
proc ::tk::table::ChangeWidth {w i a} {
proc tk_tableCopy w {
proc tk_tableCut w {
proc tk_tablePaste {w {cell {}}} {
proc tk_tablePasteHandler {w cell data} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/va/EZCAD/ezcad_funcs.tcl]]
proc va_check_data_set_points {List {outtype xyz} {fam POINTS} {name P_001}} {
proc va_check_data_set_point {Point {outtype xyz} {fam POINTS} {name P_001}} {
proc va_create_ezcad_gui {} {
proc va_set_fam_bg {} {
proc va_Msg {txt} {
proc va_select_delete_current_mode {} {
proc va_make_fun {n {m 0}} {
proc va_make_opt_gui_ezcad {w x y n} {
proc va_set_mode_option {} {
proc va_change_mode_option {{change 1}} {
proc va_set_type {n {do 1}} {
proc va_set_function {{type -1} {entry -1} {do 1}} {
proc va_set_xx_size {e x {do move}} {
proc va_screen_select {{only 0}} {
proc va_set_input_win {args } {
proc va_try_delete {{what point}} {
proc va_calc_vir_pnt {{add ""}} {
proc va_try_create_intersect_crv {{do 1}} {
proc va_try_create_point_3pnt_3par {{do 1}} {
proc va_do_create_last_vir_pnt {} {
proc va_try_create_point_interp {{do 1}} {
proc va_try_create_centerpoint {{do 1}} {
proc va_try_extract_points {{do 1}} {
proc va_extract_points {fam curves {angle 20}} {
proc va_try_create_point_on_crv {{do 1}} {
proc va_try_create_point {{do 1}} {
proc va_try_create_cyl {} {
proc va_try_create_box {} {
proc va_geo_cyl {{replace 0}} {
proc va_geo_box {} {
proc va_geo_rectangle {fam name plane xyz a b} {
proc va_set_fam_name_etc {args} {
proc va_do_make_bbox {} {
proc va_try_create_curve_circle {} {
proc va_try_create_intersect_crvs {} {
proc va_create_intersect_crvs {srfs} {
proc va_try_create_curve_project {} {
proc va_create_project_crvs {curves surface name fam}  {
proc va_try_extract_curve {} {
proc va_extract_curve {fam surfs {bound 2} {angle 30}} {
proc va_try_segment_curve {} {
proc va_segment_curve {curves how param1 param2} {
proc va_try_segment_surf {} {
proc va_segment_surf {surfaces how param1 normal} {
proc va_try_create_arrow {} {
proc va_try_create_line {} {
proc va_chain_line {} {
proc va_try_concat_curves {} {
proc va_try_create_surface_driven {} {
proc va_create_driven_surf {}  {
proc va_try_create_surface_loft {} {
proc va_create_loft_surf {}  {
proc va_try_create_surfrev_crvs {} {
proc va_is_triplet {xyz} {
proc va_is_int_or_real {c} {
proc va_check_get_params {text} {
proc va_create_curve_circle {p1 p2 p3 s_angle e_angle} {
proc va_create_surfrev_crvs {p1 p2 crvs s_angle e_angle} {
proc va_do_change {what v1 v2} {
proc va_try_create_iso_curve {} {
proc va_select_surf_param {srfs point dir} {
proc va_do_create_iso_curve {srfs par dir split {pickable 1}} {
proc va_do_extra_command {{which 1}} {
proc va_try_create_surfrev {} {
proc va_try_set_fam_name {} {
proc va_try_create_surfaceN {} {
proc va_create_surface4_or_repair {crvs {tol 0.01}} {
proc va_try_create_spl_n_pts {} {
proc va_try_create_arc {} {
proc va_show_def {name args} {
proc va_try_create_sketch_plane {} {
proc va_create_object {name {init ""}} {
proc va_do_command {{fast 0} {junk 0}} {
proc va_ezcad_command {{what restore}} {
proc va_remember_fam_name {} {
proc va_blink {item {col green} {count 2}} {
proc va_do_blink {col} {
proc va_check_args {} {
proc va_name_exists_type {} {
proc va_auto_name {{type ""} {try_this_name ""} {fam PART}} {
proc va_show_input {wlist {restore 0} {col green}} {
proc va_ezcad_done {} {
proc va_v_entity_define {name type inc {args ""}} {
proc va_move_crvs_selected {list {pts ""}} {
proc va_select_move {} {
proc va_try_transform {} {
proc va_try_glue {} {
proc va_geo_cre_3pnts_on_crv {crv plist {option 0}} {
proc va_glue {pts ents} {
proc va_ez_change_family {} {
proc va_ez_select_family {} {
proc va_try_repair {} {
proc va_try_create_point_projection {} {
proc va_create_point_projection {points entities} {
proc va_do_modify {xyz {when never}} {
proc va_make_quick_buttons {wi file} {
proc va_ez_quick_buttons {{quit 1}} {
proc va_undo_group_begin {} {
proc va_undo_group_end {} {
proc va_try_surf_segment {} {
proc va_try_pnt_crv_plane_trim {} {
proc va_pnt_crv_plane_done {} {
proc va_pnt_crv_plane_select {} {
proc va_pnt_crv_plane_create {xyz bbmin bbmax} {
proc va_cre_pnt_norm_plane {pnt vec side {circle 0} {crv_only 0}} {
proc va_pnt_crv_plane {side cflag} {
proc va_pnt_crv_plane_apply {} {
proc va_pnt_crv_plane_fix_crv {fam} {
proc va_create_sphere {pts} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/va/EZCAD/ezlib.tcl]]
proc va_check_location {} {
proc va_print_location {num xyz} {
proc va_check_distance {} {
proc va_show_distance {when} {
proc va_check_angle {} {
proc va_show_angle {when} {
proc vam_pointer_line {coor1 coor2 {col white} {nn 100}} {
proc vam_make_notebook {w file} {
proc vam_read_gui_data {filename} {
proc vam_open {file how} {
proc vam_gets {f var} {
proc vam_make_model_gui {wi name} { 
proc vam_add_menu {what} { 
proc vam_make_opt_gui {wp x y data} {
proc switchbutton {path args} {
proc vam_view {how} {
proc vam_menu {fn} {
proc vam_image {name} { 
proc vam_set_help_mode {{forse 2}} {
proc vam_read_settings {fn} {
proc vam_arrow {name {xyz2 "1 1 1"} {xyz1 "0 0 0"} {scale 30} {minsize 30}} {
proc va_set_current_entities {name {how points_init} {list ""}} {
proc va_set_current_points {name} {
proc va_set_current_for_points_current {names {what curve}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/va/EZCAD/lib.tcl]]
proc val_init_ai {} {
    proc define_strings {w e1 tip e2 e3} { 
proc val_set_plot_height_ai {h {force 0}} {
proc val_calc_dialog {{w ""}} {
proc va_calc_units_init {} {
proc va_calc_show_sec {} {
proc va_calc_show_variables {} {
proc va_calc_new_def {name} {
proc va_calc_new_var {} {
proc va_calc_show_units {} {
proc va_calc_show_page {{page ""}} {
proc va_calc_show_more {} {
proc va_calc_units_check {p u P} {
proc va_calc_unit {u2u v} {
proc va_calc_np_init {} {
proc va_calc_show_notepad {} {
proc va_calc_np_open {} {
proc va_calc_np_save {} {
proc va_calc_cl_init {} {
proc va_calc_show_calculator {} {
proc va_calc_cl_bcsp {} {
proc va_calc_cl_check {P} {
proc va_calc_num {n} {
proc va_calc_cv {op} {
proc va_calc_op {op} {
proc va_calc_done {} {
proc va_calc_init {{font_size 0}} {
proc val_draw_tdv_line {args} {
proc val_draw_tdv_text {args} {
proc val_show_point {loc {size 2} {color white}} {
proc val_show_text {loc text {color white}} {
proc val_show_line {p1 p2 {width 1} {color white}} {
proc val_clean_ims {args} {
proc val_screen2world_vector {sp0 sp1} {
proc val_get_screen_dir {dir} {
proc val_get_screen_nrm {} {
proc val_get_screen_scale {} {
proc val_align_plane {args} {
proc va_lib_geo_init {} {
proc val_is_int {l} {
proc val_is_real {l} {
proc val_is_int_real {l} {
proc val_is_int_1 {k} {
proc val_is_real_1 {k} {
proc val_is_int_real_1 {k} {
proc val_make_int {l} {
proc val_make_real {l} {
proc val_is_point {P} {
proc val_determinant {M} {
proc val_matrix_minor {M l r} {
proc val_angle_between_vectors {a b} {
proc val_cos_angle_between_vectors {a b} {
proc val_cross_line_to_plane {line plane} {
proc va_lib_math_init {} {
proc val_set_screen_position {} {
proc set_screen_select {i} {
proc set_screen_put {} {
proc set_screen_get {i} {
proc set_screen_ins {} {
proc set_screen_del {} {
proc set_screen_save_to_file {} {
proc set_screen_load_from_file {} {
proc set_screen_show_movie {} {
proc set_screen_make_gif {} {
proc set_screen_make_gif_top {} {
proc set_screen_make_gif_view {} {
proc set_screen_make_all_gifs {} {
proc set_screen_make_movie {} {
proc set_screen_show_params {} {
proc set_screen_close_params {args} {
proc set_screen_hide {mode} {
proc set_screen_done {} {
proc set_screen_menu {} {
proc set_screen_init {} {
proc val_get_gif {name {alias ""} {void 0}} { 
proc val_tool_put_btns { w toolset } {
proc val_file_select_file {file mode {pattern ""} {default ""} args} {
proc val_ShowWindow {w} {
proc val_delay {msec} {
proc val_SetColorVars {} {
proc val_addScalFont {font_descr} {
proc val_SetFontSize {{shift 0}} {
proc val_wdone {w {mode pos}} {
proc val_form_auto_raise {w {pw .v}} {
proc val_dialog {title text {b_list ""} {pw .v}} {
proc va_lib_utils_init {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/va/EZCAD/work_plane.tcl]]
proc wp_project_point {pos {lcs wp}} {
proc wp_show_cross {pos} {
proc wp_create_plane_from_3_pts {lcs p0 {p1 ""} {p2 ""} {draw 1}} {
proc wp_draw_plane {lcs {center_point ""} {align 0}} {
proc wp_clean_wp {} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/va/IC3M/src/ic3m.tcl]]
proc mw_ic3m_setting {} {
proc mw_ic3m_ValveLiftProfile {what} {
proc mw_ic3m_open_lift_profile {i valve} { 
proc mw_ic3m_draw_lift_profile {} {
proc mw_ic3m_lift_profile_button {} {
proc mw_ic3m_select_all_geom {} {
proc mw_ic3m_select_all_mesh {} {
proc mw_ic3m_open_setting {} {
proc mw_ic3m_FileIsSettingFile {file} {
proc mw_ic3m_SearchForFile { name path } {
proc mw_ic3m_GetNumberOfValves {} {
proc mw_ic3m_GetTipFamilies {} {
proc mw_ic3m_saveas_setting {} {
proc mw_ic3m_CheckSettings {} {
proc mw_ic3m_CheckSingleInput {} {
proc mw_ic3m_CalculateMotionCalc {} {
proc mw_ic3m_CalculateMotion {} {
proc mw_ic3m_CalculateStartStop {list use both single} {
proc mw_ic3m_CalculateTimestep {} {
proc mw_ic3m_CalculateCompressionRatio {} {
proc mw_ic3m_ComputeGeometry {} {
proc mw_ic3m_GeometryPreview {} {
proc mw_ic3m_AppGeometryPreview {} {
proc mw_ic3m_ComputeMesh {} {
proc mw_ic3m_ACFluXCreateStation {} {
proc mw_ic3m_ACFluXDeleteStation {no} {
proc mw_ic3m_ACFluXFillStationLine {} {
proc mw_ic3m_ACFluXGetStationLine {} {
proc mw_ic3m_ACFluXOutput_old {what} {
proc mw_ic3m_ACFluXOutput {what} {
proc mw_ic3m_SortList { one two } {
proc mw_ic3m_MeshPreview {type {output ""}} {
proc mw_ic3m_AppMeshPreview {} {
proc mw_ic3m_TransientMeshGui {output_to} {
proc mw_ic3m_OutputRunSetup {} {
proc mw_ic3m_SteadyStateMesh {output_to} {
proc mw_ic3m_OutputMesh {what output_to} {
proc mw_ic3m_add_material_id { bocofiles } {
proc mw_ic3m_add_bc { bocofiles family bc } {
proc mw_ic3m_set_dynamic_files2 { what } {
proc mw_ic3m_set_node_map2 { name_node_map n_maps get_node get_node_number \
proc mw_ic3m_SetMeshParams { what } {
proc mw_ic3m_ShowQuestion { what mess } {
proc rmi_ShowMessage {mess {color ""} {font ""}} {
proc rmi_print_image {args} {
proc mw_cut_update {how} {
proc aaa {} {
proc rmi_splines_main {merge_file output_file param_file type_outp} {
proc rmi_spline_create_famlist {} {
proc rmi_spline_append_famdefs {fp tymx spl_list} {
proc rmi_spline_write_nodes {fp spline_list} {
proc rmi_spline_append_sets {fp type_outp} {
proc rmi_add_material_id { bocofiles } {
proc rmi_add_bc { bocofiles family bc } {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/va/IC3M/src/ic3m_params.tcl]]
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost/anno.tcl]]
proc anno_init {w m cmap} {
proc anno_win_coord_axes {w} {
proc anno_win_gvsize {w} {
proc anno_init_win {w wintitle bs_vN bb_vN be_vN} {
proc anno_reset_mouse_binding {w} {
proc anno_setup_mouse_binding {w} {
proc anno_create {what w m args} {
proc anno_action {what {rec 1} {stick_ptr 0} {an_tomove ""}} {
proc get_2d_pts_on_anno {w how npts {keep_anno 0} {pargs ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost/anno3d.tcl]]
proc anno_modify_cmd {w what {model 0}} {
proc anno_modify {what} {
proc move_and_rotate_anno {w an} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost/anno_mg.tcl]]
proc control_anno_defaults_choiceframe {d} {
proc control_anno3d_choiceframe {fm} {
proc control_anno3d_plane_choiceframe {fm} {
proc control_anno3d_disc_choiceframe {fm} {
proc control_anno3d_disc_choiceframe {fm} {
proc control_anno3d_line_choiceframe {fm} {
proc control_anno_specific_choiceframe {fm} {
proc control_anno_mark_choiceframe {fmp} {
proc control_anno_text_choiceframe {d} {
proc control_anno_utftext_choiceframe {d} {
proc control_anno_circle_choiceframe {fmp} {
proc control_anno_box_choiceframe {fmp} {
proc control_anno_line_choiceframe {d} {
proc control_anno_cmap_choiceframe {fmp} {
proc control_anno_vframe_choiceframe {fmp} {
proc modify_anno_pick {what args} {
proc update_anno_pick {{a ""}} {
proc update_anno_mg {what args} {
proc setup_anno_mg {{win ""} {map 1} {geo ""} {with_win_list 1}} {
proc do_anno_cmd {w m what args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost/dfile_misc.tcl]]
proc dfile_rm_winmarks {fin fout} {
proc dfile_open {fname ac} {
proc dfile_is_numline {fp} {
proc dfile_skip_lines_til_numbers {fp {print_cmd ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost/oned_windows.tcl]]
proc OneDWin::init {} {
proc OneDWin::var {how vn args} {
proc  OneDWin::reg {name w ww hh bg} {
proc OneDWin::new {name {ww ""} {hh ""} {bg ""}} {
proc OneDWin::setup_view {w name width height {gtype ""} {bg ""}} {
proc setup_oned_params_sub {fw} {
proc OneDWin::cmd {w what args} {
proc OneDWin::update_axis {which x args} {
proc OneDWin::create_polar {args} {
proc OneDWin::create_axis {{xtitle ""} args} {
proc OneDWin::modify_axis {which x args} {
proc OneDWin::axis_choiceframe {fm x X} {
proc OneDWin::create_leg {} {
proc OneDWin::update_leg {what args} {
proc OneDWin::legend_choiceframe {fm} {
proc OneDWin::update_vppoints {what args} {
proc OneDWin::update_vppt_fm {what args} {
proc OneDWin::data_choiceframe {fm} {
proc OneDWin::data_res_choiceframe {fmr} {
proc OneDWin::update_plots {what args} {
proc OneDWin::create_plots_setup {} {
proc OneDWin::create_plots {type {name ""} args}  {
proc OneDWin::create_plots_with_vppts {vppts args}  {
proc OneDWin::modify_plots {what args} {
proc OneDWin::plots_choiceframe {fm} {
proc update_oned_mg {what args} {
proc setup_oned_mg {{map 1} {geo ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost/utf_misc.tcl]]
proc ucode_scan_entry {s} {
proc from_oct {n} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost/vframes.tcl]]
proc vframe_create {src parent {name ""} {bg ""} args} {
proc vframe_cmd {w how args} {
proc vframe_going {w how args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost/vpost_plot.tcl]]
proc vpost_plot {title geom xtitle ytitles spec \
proc start_mg_top {w {map 1} {title ""} {dismiss_proc ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost_batch/anno.tcl]]
proc anno_init {w m cmap} {
proc anno_win_coord_axes {w} {
proc anno_win_gvsize {w} {
proc anno_init_win {w wintitle bs_vN bb_vN be_vN} {
proc anno_reset_mouse_binding {w} {
proc anno_setup_mouse_binding {w} {
proc anno_create {what w m args} {
proc anno_action {what {rec 1} {stick_ptr 0} {an_tomove ""}} {
proc get_2d_pts_on_anno {w how npts {keep_anno 0} {pargs ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost_batch/anno3d.tcl]]
proc anno_modify_cmd {w what {model 0}} {
proc anno_modify {what} {
proc move_and_rotate_anno {w an} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost_batch/anno_mg.tcl]]
proc control_anno_defaults_choiceframe {d} {
proc control_anno3d_choiceframe {fm} {
proc control_anno3d_plane_choiceframe {fm} {
proc control_anno3d_disc_choiceframe {fm} {
proc control_anno3d_disc_choiceframe {fm} {
proc control_anno3d_line_choiceframe {fm} {
proc control_anno_specific_choiceframe {fm} {
proc control_anno_mark_choiceframe {fmp} {
proc control_anno_text_choiceframe {d} {
proc control_anno_utftext_choiceframe {d} {
proc control_anno_circle_choiceframe {fmp} {
proc control_anno_box_choiceframe {fmp} {
proc control_anno_line_choiceframe {d} {
proc control_anno_cmap_choiceframe {fmp} {
proc control_anno_vframe_choiceframe {fmp} {
proc modify_anno_pick {what args} {
proc update_anno_pick {{a ""} {noshow ""}} {
proc update_anno_mg {what args} {
proc setup_anno_mg {{win ""} {map 1} {geo ""} {with_win_list 1}} {
proc do_anno_cmd {w m what args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost_batch/anno_misc.tcl]]
proc anno_do_pick {w anno_gm eventVarName} {
proc anno_do_rescale_cmap {w anno_gm eventVarName {an_tomove ""}} {
proc anno_do_move {w anno_gm eventVarName {an_tomove ""}} {
proc anno_do_delete {w anno_gm eventVarName listVarName args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost_batch/beamcross.tcl]]
proc beamcross_cmd {what args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost_batch/dfile_misc.tcl]]
proc dfile_rm_winmarks {fin fout} {
proc dfile_open {fname ac} {
proc dfile_is_numline {fp} {
proc dfile_skip_lines_til_numbers {fp {print_cmd ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost_batch/oned_windows.tcl]]
proc OneDWin::init {} {
proc OneDWin::var {how vn args} {
proc  OneDWin::reg {name w ww hh bg} {
proc OneDWin::new {name {ww ""} {hh ""} {bg ""}} {
proc OneDWin::setup_view {w name width height {gtype ""} {bg ""}} {
proc setup_oned_params_sub {fw} {
proc OneDWin::cmd {w what args} {
proc OneDWin::update_axis {which x args} {
proc OneDWin::create_polar {args} {
proc OneDWin::create_axis {{xtitle ""} args} {
proc OneDWin::modify_axis {which x args} {
proc OneDWin::axis_choiceframe {fm x X} {
proc OneDWin::create_leg {} {
proc OneDWin::update_leg {what args} {
proc OneDWin::legend_choiceframe {fm} {
proc OneDWin::update_vppoints {what args} {
proc OneDWin::update_vppt_fm {what args} {
proc OneDWin::data_choiceframe {fm} {
proc OneDWin::data_res_choiceframe {fmr} {
proc OneDWin::update_plots {what args} {
proc OneDWin::create_plots_setup {} {
proc OneDWin::create_plots {type {name ""} args}  {
proc OneDWin::create_plots_with_vppts {vppts args}  {
proc OneDWin::modify_plots {what args} {
proc OneDWin::plots_choiceframe {fm} {
proc update_oned_mg {what args} {
proc setup_oned_mg {{map 1} {geo ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost_batch/oned_windows_bt.tcl]]
proc OneDWin::init {} {
proc OneDWin::var {how vn args} {
proc  OneDWin::reg {name w ww hh bg} {
proc OneDWin::new {name {ww ""} {hh ""} {bg ""}} {
proc OneDWin::setup_view {w name width height {gtype ""} {bg ""}} {
proc setup_oned_params_sub {fw} {
proc OneDWin::cmd {w what args} {
proc OneDWin::update_axis {which x args} {
proc OneDWin::create_polar {args} {
proc OneDWin::create_axis {{xtitle ""} args} {
proc OneDWin::modify_axis {which x args} {
proc OneDWin::axis_choiceframe {fm x X} {
proc OneDWin::create_leg {} {
proc OneDWin::update_leg {what args} {
proc OneDWin::legend_choiceframe {fm} {
proc OneDWin::update_vppoints {what args} {
proc OneDWin::update_vppt_fm {what args} {
proc OneDWin::data_choiceframe {fm} {
proc OneDWin::data_res_choiceframe {fmr} {
proc OneDWin::update_plots {what args} {
proc OneDWin::create_plots_setup {} {
proc OneDWin::create_plots {type {name ""} args}  {
proc OneDWin::create_plots_with_vppts {vppts args}  {
proc OneDWin::modify_plots {what args} {
proc OneDWin::plots_choiceframe {fm} {
proc update_oned_mg {what args} {
proc setup_oned_mg {{map 1} {geo ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost_batch/oned_windows_cmd.tcl]]
proc update_oned_mg_cmd {what args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost_batch/oned_windows_cmd_v3.tcl]]
proc update_oned_mg_cmd {what args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost_batch/oned_windows_m.tcl]]
proc OneDWin::init {} {
proc OneDWin::var {how vn args} {
proc  OneDWin::reg {name w ww hh bg} {
proc OneDWin::new {name {ww ""} {hh ""} {bg ""}} {
proc OneDWin::setup_view {w name width height {gtype ""} {bg ""}} {
proc setup_oned_params_sub {fw} {
proc OneDWin::cmd {w what args} {
proc OneDWin::update_axis {which x args} {
proc OneDWin::create_polar {args} {
proc OneDWin::create_axis {{xtitle ""} args} {
proc OneDWin::modify_axis {which x args} {
proc OneDWin::axis_choiceframe {fm x X} {
proc OneDWin::create_leg {} {
proc OneDWin::update_leg {what args} {
proc OneDWin::legend_choiceframe {fm} {
proc OneDWin::update_vppoints {what args} {
proc OneDWin::update_plots {what args} {
proc OneDWin::create_plots_setup {} {
proc OneDWin::create_plots {type {name ""} args}  {
proc OneDWin::create_plots_with_vppts {vppts args}  {
proc OneDWin::modify_plots {what args} {
proc OneDWin::plots_choiceframe {fm} {
proc update_oned_mg_top {what args} {
proc update_oned_mg {what args} {
proc setup_oned_mg {{map 1} {geo ""}} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost_batch/oned_windows_vp.tcl]]
proc OneDWin::update_vppt_fm {what args} {
proc OneDWin::data_choiceframe {fm} {
proc OneDWin::data_res_choiceframe {fmr} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost_batch/utf_misc.tcl]]
proc ucode_scan_entry {s} {
proc from_oct {n} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost_batch/vframes.tcl]]
proc vframe_create {src parent {name ""} {bg ""} args} {
proc vframe_cmd {w how args} {
proc vframe_going {w how args} {
[[C:/Program Files/ANSYS Inc/v231/icemcfd/win64_amd/./lib/vpost_batch/vpost_plot.tcl]]
proc vpost_plot {title geom xtitle ytitles spec \
proc start_mg_top {w {map 1} {title ""} {dismiss_proc ""}} {
